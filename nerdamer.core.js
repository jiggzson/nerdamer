!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.nerdamer=t():e.nerdamer=t()}(self,(function(){return(()=>{var e={3776:function(e,t,r){var n;!function(i){"use strict";var s,o,a,u=9e15,l=1e9,c="0123456789abcdef",p="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",h="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",f={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},m=!0,g="[DecimalError] ",d=g+"Invalid argument: ",v=g+"Precision limit exceeded",y=g+"crypto unavailable",b="[object Decimal]",w=Math.floor,S=Math.pow,E=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,M=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,N=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,P=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,x=1e7,O=p.length-1,A=h.length-1,G={toStringTag:b};function I(e){var t,r,n,i=e.length-1,s="",o=e[0];if(i>0){for(s+=o,t=1;t<i;t++)(r=7-(n=e[t]+"").length)&&(s+=U(r)),s+=n;(r=7-(n=(o=e[t])+"").length)&&(s+=U(r))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function C(e,t,r){if(e!==~~e||e<t||e>r)throw Error(d+e)}function R(e,t,r,n){var i,s,o,a;for(s=e[0];s>=10;s/=10)--t;return--t<0?(t+=7,i=0):(i=Math.ceil((t+1)/7),t%=7),s=S(10,7-t),a=e[i]%s|0,null==n?t<3?(0==t?a=a/100|0:1==t&&(a=a/10|0),o=r<4&&99999==a||r>3&&49999==a||5e4==a||0==a):o=(r<4&&a+1==s||r>3&&a+1==s/2)&&(e[i+1]/s/100|0)==S(10,t-2)-1||(a==s/2||0==a)&&0==(e[i+1]/s/100|0):t<4?(0==t?a=a/1e3|0:1==t?a=a/100|0:2==t&&(a=a/10|0),o=(n||r<4)&&9999==a||!n&&r>3&&4999==a):o=((n||r<4)&&a+1==s||!n&&r>3&&a+1==s/2)&&(e[i+1]/s/1e3|0)==S(10,t-3)-1,o}function T(e,t,r){for(var n,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=c.indexOf(e.charAt(o++)),n=0;n<s.length;n++)s[n]>r-1&&(void 0===s[n+1]&&(s[n+1]=0),s[n+1]+=s[n]/r|0,s[n]%=r)}return s.reverse()}G.absoluteValue=G.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),L(e)},G.ceil=function(){return L(new this.constructor(this),this.e+1,2)},G.clampedTo=G.clamp=function(e,t){var r=this,n=r.constructor;if(e=new n(e),t=new n(t),!e.s||!t.s)return new n(NaN);if(e.gt(t))throw Error(d+t);return r.cmp(e)<0?e:r.cmp(t)>0?t:new n(r)},G.comparedTo=G.cmp=function(e){var t,r,n,i,s=this,o=s.d,a=(e=new s.constructor(e)).d,u=s.s,l=e.s;if(!o||!a)return u&&l?u!==l?u:o===a?0:!o^u<0?1:-1:NaN;if(!o[0]||!a[0])return o[0]?u:a[0]?-l:0;if(u!==l)return u;if(s.e!==e.e)return s.e>e.e^u<0?1:-1;for(t=0,r=(n=o.length)<(i=a.length)?n:i;t<r;++t)if(o[t]!==a[t])return o[t]>a[t]^u<0?1:-1;return n===i?0:n>i^u<0?1:-1},G.cosine=G.cos=function(){var e,t,r=this,n=r.constructor;return r.d?r.d[0]?(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+7,n.rounding=1,r=function(e,t){var r,n,i;if(t.isZero())return t;(n=t.d.length)<32?i=(1/Y(4,r=Math.ceil(n/3))).toString():(r=16,i="2.3283064365386962890625e-10"),e.precision+=r,t=W(e,1,t.times(i),new e(1));for(var s=r;s--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=r,t}(n,J(n,r)),n.precision=e,n.rounding=t,L(2==a||3==a?r.neg():r,e,t,!0)):new n(1):new n(NaN)},G.cubeRoot=G.cbrt=function(){var e,t,r,n,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(m=!1,(s=c.s*S(c.s*c,1/3))&&Math.abs(s)!=1/0?n=new p(s.toString()):(r=I(c.d),(s=((e=c.e)-r.length+1)%3)&&(r+=1==s||-2==s?"0":"00"),s=S(r,1/3),e=w((e+1)/3)-(e%3==(e<0?-1:2)),(n=new p(r=s==1/0?"5e"+e:(r=s.toExponential()).slice(0,r.indexOf("e")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=n).times(a).times(a)).plus(c),n=_(l.plus(c).times(a),l.plus(u),o+2,1),I(a.d).slice(0,o)===(r=I(n.d)).slice(0,o)){if("9999"!=(r=r.slice(o-3,o+1))&&(i||"4999"!=r)){+r&&(+r.slice(1)||"5"!=r.charAt(0))||(L(n,e+1,1),t=!n.times(n).times(n).eq(c));break}if(!i&&(L(a,e+1,0),a.times(a).times(a).eq(c))){n=a;break}o+=4,i=1}return m=!0,L(n,e,p.rounding,t)},G.decimalPlaces=G.dp=function(){var e,t=this.d,r=NaN;if(t){if(r=7*((e=t.length-1)-w(this.e/7)),e=t[e])for(;e%10==0;e/=10)r--;r<0&&(r=0)}return r},G.dividedBy=G.div=function(e){return _(this,new this.constructor(e))},G.dividedToIntegerBy=G.divToInt=function(e){var t=this.constructor;return L(_(this,new t(e),0,1,1),t.precision,t.rounding)},G.equals=G.eq=function(e){return 0===this.cmp(e)},G.floor=function(){return L(new this.constructor(this),this.e+1,3)},G.greaterThan=G.gt=function(e){return this.cmp(e)>0},G.greaterThanOrEqualTo=G.gte=function(e){var t=this.cmp(e);return 1==t||0===t},G.hyperbolicCosine=G.cosh=function(){var e,t,r,n,i,s=this,o=s.constructor,a=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return a;r=o.precision,n=o.rounding,o.precision=r+Math.max(s.e,s.sd())+4,o.rounding=1,(i=s.d.length)<32?t=(1/Y(4,e=Math.ceil(i/3))).toString():(e=16,t="2.3283064365386962890625e-10"),s=W(o,1,s.times(t),new o(1),!0);for(var u,l=e,c=new o(8);l--;)u=s.times(s),s=a.minus(u.times(c.minus(u.times(c))));return L(s,o.precision=r,o.rounding=n,!0)},G.hyperbolicSine=G.sinh=function(){var e,t,r,n,i=this,s=i.constructor;if(!i.isFinite()||i.isZero())return new s(i);if(t=s.precision,r=s.rounding,s.precision=t+Math.max(i.e,i.sd())+4,s.rounding=1,(n=i.d.length)<3)i=W(s,2,i,i,!0);else{e=(e=1.4*Math.sqrt(n))>16?16:0|e,i=W(s,2,i=i.times(1/Y(5,e)),i,!0);for(var o,a=new s(5),u=new s(16),l=new s(20);e--;)o=i.times(i),i=i.times(a.plus(o.times(u.times(o).plus(l))))}return s.precision=t,s.rounding=r,L(i,t,r,!0)},G.hyperbolicTangent=G.tanh=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+7,n.rounding=1,_(r.sinh(),r.cosh(),n.precision=e,n.rounding=t)):new n(r.s)},G.inverseCosine=G.acos=function(){var e,t=this,r=t.constructor,n=t.abs().cmp(1),i=r.precision,s=r.rounding;return-1!==n?0===n?t.isNeg()?B(r,i,s):new r(0):new r(NaN):t.isZero()?B(r,i+4,s).times(.5):(r.precision=i+6,r.rounding=1,t=t.asin(),e=B(r,i+4,s).times(.5),r.precision=i,r.rounding=s,e.minus(t))},G.inverseHyperbolicCosine=G.acosh=function(){var e,t,r=this,n=r.constructor;return r.lte(1)?new n(r.eq(1)?0:NaN):r.isFinite()?(e=n.precision,t=n.rounding,n.precision=e+Math.max(Math.abs(r.e),r.sd())+4,n.rounding=1,m=!1,r=r.times(r).minus(1).sqrt().plus(r),m=!0,n.precision=e,n.rounding=t,r.ln()):new n(r)},G.inverseHyperbolicSine=G.asinh=function(){var e,t,r=this,n=r.constructor;return!r.isFinite()||r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+2*Math.max(Math.abs(r.e),r.sd())+6,n.rounding=1,m=!1,r=r.times(r).plus(1).sqrt().plus(r),m=!0,n.precision=e,n.rounding=t,r.ln())},G.inverseHyperbolicTangent=G.atanh=function(){var e,t,r,n,i=this,s=i.constructor;return i.isFinite()?i.e>=0?new s(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=s.precision,t=s.rounding,n=i.sd(),Math.max(n,e)<2*-i.e-1?L(new s(i),e,t,!0):(s.precision=r=n-i.e,i=_(i.plus(1),new s(1).minus(i),r+e,1),s.precision=e+4,s.rounding=1,i=i.ln(),s.precision=e,s.rounding=t,i.times(.5))):new s(NaN)},G.inverseSine=G.asin=function(){var e,t,r,n,i=this,s=i.constructor;return i.isZero()?new s(i):(t=i.abs().cmp(1),r=s.precision,n=s.rounding,-1!==t?0===t?((e=B(s,r+4,n).times(.5)).s=i.s,e):new s(NaN):(s.precision=r+6,s.rounding=1,i=i.div(new s(1).minus(i.times(i)).sqrt().plus(1)).atan(),s.precision=r,s.rounding=n,i.times(2)))},G.inverseTangent=G.atan=function(){var e,t,r,n,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,h=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=A)return(o=B(c,p+4,h).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=A)return(o=B(c,p+4,h).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=r=Math.min(28,a/7+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(m=!1,t=Math.ceil(a/7),n=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(n+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(n+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return r&&(o=o.times(2<<r-1)),m=!0,L(o,c.precision=p,c.rounding=h,!0)},G.isFinite=function(){return!!this.d},G.isInteger=G.isInt=function(){return!!this.d&&w(this.e/7)>this.d.length-2},G.isNaN=function(){return!this.s},G.isNegative=G.isNeg=function(){return this.s<0},G.isPositive=G.isPos=function(){return this.s>0},G.isZero=function(){return!!this.d&&0===this.d[0]},G.lessThan=G.lt=function(e){return this.cmp(e)<0},G.lessThanOrEqualTo=G.lte=function(e){return this.cmp(e)<1},G.logarithm=G.log=function(e){var t,r,n,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,h=c.rounding;if(null==e)e=new c(10),t=!0;else{if(r=(e=new c(e)).d,e.s<0||!r||!r[0]||e.eq(1))return new c(NaN);t=e.eq(10)}if(r=l.d,l.s<0||!r||!r[0]||l.eq(1))return new c(r&&!r[0]?-1/0:1!=l.s?NaN:r?0:1/0);if(t)if(r.length>1)s=!0;else{for(i=r[0];i%10==0;)i/=10;s=1!==i}if(m=!1,o=z(l,a=p+5),n=t?k(c,a+10):z(e,a),R((u=_(o,n,a,1)).d,i=p,h))do{if(o=z(l,a+=10),n=t?k(c,a+10):z(e,a),u=_(o,n,a,1),!s){+I(u.d).slice(i+1,i+15)+1==1e14&&(u=L(u,p+1,0));break}}while(R(u.d,i+=10,h));return m=!0,L(u,p,h)},G.minus=G.sub=function(e){var t,r,n,i,s,o,a,u,l,c,p,h,f=this,g=f.constructor;if(e=new g(e),!f.d||!e.d)return f.s&&e.s?f.d?e.s=-e.s:e=new g(e.d||f.s!==e.s?f:NaN):e=new g(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(l=f.d,h=e.d,a=g.precision,u=g.rounding,!l[0]||!h[0]){if(h[0])e.s=-e.s;else{if(!l[0])return new g(3===u?-0:0);e=new g(f)}return m?L(e,a,u):e}if(r=w(e.e/7),c=w(f.e/7),l=l.slice(),s=c-r){for((p=s<0)?(t=l,s=-s,o=h.length):(t=h,r=c,o=l.length),s>(n=Math.max(Math.ceil(a/7),o)+2)&&(s=n,t.length=1),t.reverse(),n=s;n--;)t.push(0);t.reverse()}else{for((p=(n=l.length)<(o=h.length))&&(o=n),n=0;n<o;n++)if(l[n]!=h[n]){p=l[n]<h[n];break}s=0}for(p&&(t=l,l=h,h=t,e.s=-e.s),o=l.length,n=h.length-o;n>0;--n)l[o++]=0;for(n=h.length;n>s;){if(l[--n]<h[n]){for(i=n;i&&0===l[--i];)l[i]=x-1;--l[i],l[n]+=x}l[n]-=h[n]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--r;return l[0]?(e.d=l,e.e=F(l,r),m?L(e,a,u):e):new g(3===u?-0:0)},G.modulo=G.mod=function(e){var t,r=this,n=r.constructor;return e=new n(e),!r.d||!e.s||e.d&&!e.d[0]?new n(NaN):!e.d||r.d&&!r.d[0]?L(new n(r),n.precision,n.rounding):(m=!1,9==n.modulo?(t=_(r,e.abs(),0,3,1)).s*=e.s:t=_(r,e,0,n.modulo,1),t=t.times(e),m=!0,r.minus(t))},G.naturalExponential=G.exp=function(){return Z(this)},G.naturalLogarithm=G.ln=function(){return z(this)},G.negated=G.neg=function(){var e=new this.constructor(this);return e.s=-e.s,L(e)},G.plus=G.add=function(e){var t,r,n,i,s,o,a,u,l,c,p=this,h=p.constructor;if(e=new h(e),!p.d||!e.d)return p.s&&e.s?p.d||(e=new h(e.d||p.s===e.s?p:NaN)):e=new h(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(l=p.d,c=e.d,a=h.precision,u=h.rounding,!l[0]||!c[0])return c[0]||(e=new h(p)),m?L(e,a,u):e;if(s=w(p.e/7),n=w(e.e/7),l=l.slice(),i=s-n){for(i<0?(r=l,i=-i,o=c.length):(r=c,n=s,o=l.length),i>(o=(s=Math.ceil(a/7))>o?s+1:o+1)&&(i=o,r.length=1),r.reverse();i--;)r.push(0);r.reverse()}for((o=l.length)-(i=c.length)<0&&(i=o,r=c,c=l,l=r),t=0;i;)t=(l[--i]=l[i]+c[i]+t)/x|0,l[i]%=x;for(t&&(l.unshift(t),++n),o=l.length;0==l[--o];)l.pop();return e.d=l,e.e=F(l,n),m?L(e,a,u):e},G.precision=G.sd=function(e){var t,r=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(d+e);return r.d?(t=D(r.d),e&&r.e+1>t&&(t=r.e+1)):t=NaN,t},G.round=function(){var e=this,t=e.constructor;return L(new t(e),e.e+1,t.rounding)},G.sine=G.sin=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+7,n.rounding=1,r=function(e,t){var r,n=t.d.length;if(n<3)return t.isZero()?t:W(e,2,t,t);r=(r=1.4*Math.sqrt(n))>16?16:0|r,t=W(e,2,t=t.times(1/Y(5,r)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);r--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(n,J(n,r)),n.precision=e,n.rounding=t,L(a>2?r.neg():r,e,t,!0)):new n(NaN)},G.squareRoot=G.sqrt=function(){var e,t,r,n,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(m=!1,0==(l=Math.sqrt(+o))||l==1/0?(((t=I(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=w((u+1)/2)-(u<0||u%2),n=new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):n=new c(l.toString()),r=(u=c.precision)+3;;)if(n=(s=n).plus(_(o,s,r+2,1)).times(.5),I(s.d).slice(0,r)===(t=I(n.d)).slice(0,r)){if("9999"!=(t=t.slice(r-3,r+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(L(n,u+1,1),e=!n.times(n).eq(o));break}if(!i&&(L(s,u+1,0),s.times(s).eq(o))){n=s;break}r+=4,i=1}return m=!0,L(n,u,c.rounding,e)},G.tangent=G.tan=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+10,n.rounding=1,(r=r.sin()).s=1,r=_(r,new n(1).minus(r.times(r)).sqrt(),e+10,0),n.precision=e,n.rounding=t,L(2==a||4==a?r.neg():r,e,t,!0)):new n(NaN)},G.times=G.mul=function(e){var t,r,n,i,s,o,a,u,l,c=this,p=c.constructor,h=c.d,f=(e=new p(e)).d;if(e.s*=c.s,!(h&&h[0]&&f&&f[0]))return new p(!e.s||h&&!h[0]&&!f||f&&!f[0]&&!h?NaN:h&&f?0*e.s:e.s/0);for(r=w(c.e/7)+w(e.e/7),(u=h.length)<(l=f.length)&&(s=h,h=f,f=s,o=u,u=l,l=o),s=[],n=o=u+l;n--;)s.push(0);for(n=l;--n>=0;){for(t=0,i=u+n;i>n;)a=s[i]+f[n]*h[i-n-1]+t,s[i--]=a%x|0,t=a/x|0;s[i]=(s[i]+t)%x|0}for(;!s[--o];)s.pop();return t?++r:s.shift(),e.d=s,e.e=F(s,r),m?L(e,p.precision,p.rounding):e},G.toBinary=function(e,t){return K(this,2,e,t)},G.toDecimalPlaces=G.toDP=function(e,t){var r=this,n=r.constructor;return r=new n(r),void 0===e?r:(C(e,0,l),void 0===t?t=n.rounding:C(t,0,8),L(r,e+r.e+1,t))},G.toExponential=function(e,t){var r,n=this,i=n.constructor;return void 0===e?r=q(n,!0):(C(e,0,l),void 0===t?t=i.rounding:C(t,0,8),r=q(n=L(new i(n),e+1,t),!0,e+1)),n.isNeg()&&!n.isZero()?"-"+r:r},G.toFixed=function(e,t){var r,n,i=this,s=i.constructor;return void 0===e?r=q(i):(C(e,0,l),void 0===t?t=s.rounding:C(t,0,8),r=q(n=L(new s(i),e+i.e+1,t),!1,e+n.e+1)),i.isNeg()&&!i.isZero()?"-"+r:r},G.toFraction=function(e){var t,r,n,i,s,o,a,u,l,c,p,h,f=this,g=f.d,v=f.constructor;if(!g)return new v(f);if(l=r=new v(1),n=u=new v(0),o=(s=(t=new v(n)).e=D(g)-f.e-1)%7,t.d[0]=S(10,o<0?7+o:o),null==e)e=s>0?t:l;else{if(!(a=new v(e)).isInt()||a.lt(l))throw Error(d+a);e=a.gt(t)?s>0?t:l:a}for(m=!1,a=new v(I(g)),c=v.precision,v.precision=s=7*g.length*2;p=_(a,t,0,1,1),1!=(i=r.plus(p.times(n))).cmp(e);)r=n,n=i,i=l,l=u.plus(p.times(i)),u=i,i=t,t=a.minus(p.times(i)),a=i;return i=_(e.minus(r),n,0,1,1),u=u.plus(i.times(l)),r=r.plus(i.times(n)),u.s=l.s=f.s,h=_(l,n,s,1).minus(f).abs().cmp(_(u,r,s,1).minus(f).abs())<1?[l,n]:[u,r],v.precision=c,m=!0,h},G.toHexadecimal=G.toHex=function(e,t){return K(this,16,e,t)},G.toNearest=function(e,t){var r=this,n=r.constructor;if(r=new n(r),null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:C(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(m=!1,r=_(r,e,0,t,1).times(e),m=!0,L(r)):(e.s=r.s,r=e),r},G.toNumber=function(){return+this},G.toOctal=function(e,t){return K(this,8,e,t)},G.toPower=G.pow=function(e){var t,r,n,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(S(+a,l));if((a=new u(a)).eq(1))return a;if(n=u.precision,s=u.rounding,e.eq(1))return L(a,n,s);if((t=w(e.e/7))>=e.d.length-1&&(r=l<0?-l:l)<=9007199254740991)return i=j(u,a,r,n),e.s<0?new u(1).div(i):L(i,n,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(r=S(+a,l))&&isFinite(r)?new u(r+"").e:w(l*(Math.log("0."+I(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?o/0:0):(m=!1,u.rounding=a.s=1,r=Math.min(12,(t+"").length),(i=Z(e.times(z(a,n+r)),n)).d&&R((i=L(i,n+5,1)).d,n,s)&&(t=n+10,+I((i=L(Z(e.times(z(a,t+r)),t),t+5,1)).d).slice(n+1,n+15)+1==1e14&&(i=L(i,n+1,0))),i.s=o,m=!0,u.rounding=s,L(i,n,s))},G.toPrecision=function(e,t){var r,n=this,i=n.constructor;return void 0===e?r=q(n,n.e<=i.toExpNeg||n.e>=i.toExpPos):(C(e,1,l),void 0===t?t=i.rounding:C(t,0,8),r=q(n=L(new i(n),e,t),e<=n.e||n.e<=i.toExpNeg,e)),n.isNeg()&&!n.isZero()?"-"+r:r},G.toSignificantDigits=G.toSD=function(e,t){var r=this.constructor;return void 0===e?(e=r.precision,t=r.rounding):(C(e,1,l),void 0===t?t=r.rounding:C(t,0,8)),L(new r(this),e,t)},G.toString=function(){var e=this,t=e.constructor,r=q(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+r:r},G.truncated=G.trunc=function(){return L(new this.constructor(this),this.e+1,1)},G.valueOf=G.toJSON=function(){var e=this,t=e.constructor,r=q(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+r:r};var _=function(){function e(e,t,r){var n,i=0,s=e.length;for(e=e.slice();s--;)n=e[s]*t+i,e[s]=n%r|0,i=n/r|0;return i&&e.unshift(i),e}function t(e,t,r,n){var i,s;if(r!=n)s=r>n?1:-1;else for(i=s=0;i<r;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function r(e,t,r,n){for(var i=0;r--;)e[r]-=i,i=e[r]<t[r]?1:0,e[r]=i*n+e[r]-t[r];for(;!e[0]&&e.length>1;)e.shift()}return function(n,i,s,a,u,l){var c,p,h,f,m,g,d,v,y,b,S,E,M,N,P,O,A,G,I,C,R=n.constructor,T=n.s==i.s?1:-1,_=n.d,q=i.d;if(!(_&&_[0]&&q&&q[0]))return new R(n.s&&i.s&&(_?!q||_[0]!=q[0]:q)?_&&0==_[0]||!q?0*T:T/0:NaN);for(l?(m=1,p=n.e-i.e):(l=x,m=7,p=w(n.e/m)-w(i.e/m)),I=q.length,A=_.length,b=(y=new R(T)).d=[],h=0;q[h]==(_[h]||0);h++);if(q[h]>(_[h]||0)&&p--,null==s?(N=s=R.precision,a=R.rounding):N=u?s+(n.e-i.e)+1:s,N<0)b.push(1),g=!0;else{if(N=N/m+2|0,h=0,1==I){for(f=0,q=q[0],N++;(h<A||f)&&N--;h++)P=f*l+(_[h]||0),b[h]=P/q|0,f=P%q|0;g=f||h<A}else{for((f=l/(q[0]+1)|0)>1&&(q=e(q,f,l),_=e(_,f,l),I=q.length,A=_.length),O=I,E=(S=_.slice(0,I)).length;E<I;)S[E++]=0;(C=q.slice()).unshift(0),G=q[0],q[1]>=l/2&&++G;do{f=0,(c=t(q,S,I,E))<0?(M=S[0],I!=E&&(M=M*l+(S[1]||0)),(f=M/G|0)>1?(f>=l&&(f=l-1),1==(c=t(d=e(q,f,l),S,v=d.length,E=S.length))&&(f--,r(d,I<v?C:q,v,l))):(0==f&&(c=f=1),d=q.slice()),(v=d.length)<E&&d.unshift(0),r(S,d,E,l),-1==c&&(c=t(q,S,I,E=S.length))<1&&(f++,r(S,I<E?C:q,E,l)),E=S.length):0===c&&(f++,S=[0]),b[h++]=f,c&&S[0]?S[E++]=_[O]||0:(S=[_[O]],E=1)}while((O++<A||void 0!==S[0])&&N--);g=void 0!==S[0]}b[0]||b.shift()}if(1==m)y.e=p,o=g;else{for(h=1,f=b[0];f>=10;f/=10)h++;y.e=h+p*m-1,L(y,u?s+y.e+1:s,a,g)}return y}}();function L(e,t,r,n){var i,s,o,a,u,l,c,p,h,f=e.constructor;e:if(null!=t){if(!(p=e.d))return e;for(i=1,a=p[0];a>=10;a/=10)i++;if((s=t-i)<0)s+=7,o=t,u=(c=p[h=0])/S(10,i-o-1)%10|0;else if((h=Math.ceil((s+1)/7))>=(a=p.length)){if(!n)break e;for(;a++<=h;)p.push(0);c=u=0,i=1,o=(s%=7)-7+1}else{for(c=a=p[h],i=1;a>=10;a/=10)i++;u=(o=(s%=7)-7+i)<0?0:c/S(10,i-o-1)%10|0}if(n=n||t<0||void 0!==p[h+1]||(o<0?c:c%S(10,i-o-1)),l=r<4?(u||n)&&(0==r||r==(e.s<0?3:2)):u>5||5==u&&(4==r||n||6==r&&(s>0?o>0?c/S(10,i-o):0:p[h-1])%10&1||r==(e.s<0?8:7)),t<1||!p[0])return p.length=0,l?(t-=e.e+1,p[0]=S(10,(7-t%7)%7),e.e=-t||0):p[0]=e.e=0,e;if(0==s?(p.length=h,a=1,h--):(p.length=h+1,a=S(10,7-s),p[h]=o>0?(c/S(10,i-o)%S(10,o)|0)*a:0),l)for(;;){if(0==h){for(s=1,o=p[0];o>=10;o/=10)s++;for(o=p[0]+=a,a=1;o>=10;o/=10)a++;s!=a&&(e.e++,p[0]==x&&(p[0]=1));break}if(p[h]+=a,p[h]!=x)break;p[h--]=0,a=1}for(s=p.length;0===p[--s];)p.pop()}return m&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function q(e,t,r){if(!e.isFinite())return H(e);var n,i=e.e,s=I(e.d),o=s.length;return t?(r&&(n=r-o)>0?s=s.charAt(0)+"."+s.slice(1)+U(n):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+U(-i-1)+s,r&&(n=r-o)>0&&(s+=U(n))):i>=o?(s+=U(i+1-o),r&&(n=r-i-1)>0&&(s=s+"."+U(n))):((n=i+1)<o&&(s=s.slice(0,n)+"."+s.slice(n)),r&&(n=r-o)>0&&(i+1===o&&(s+="."),s+=U(n))),s}function F(e,t){var r=e[0];for(t*=7;r>=10;r/=10)t++;return t}function k(e,t,r){if(t>O)throw m=!0,r&&(e.precision=r),Error(v);return L(new e(p),t,1,!0)}function B(e,t,r){if(t>A)throw Error(v);return L(new e(h),t,r,!0)}function D(e){var t=e.length-1,r=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)r--;for(t=e[0];t>=10;t/=10)r++}return r}function U(e){for(var t="";e--;)t+="0";return t}function j(e,t,r,n){var i,s=new e(1),o=Math.ceil(n/7+4);for(m=!1;;){if(r%2&&ee((s=s.times(t)).d,o)&&(i=!0),0===(r=w(r/2))){r=s.d.length-1,i&&0===s.d[r]&&++s.d[r];break}ee((t=t.times(t)).d,o)}return m=!0,s}function V(e){return 1&e.d[e.d.length-1]}function X(e,t,r){for(var n,i=new e(t[0]),s=0;++s<t.length;){if(!(n=new e(t[s])).s){i=n;break}i[r](n)&&(i=n)}return i}function Z(e,t){var r,n,i,s,o,a,u,l=0,c=0,p=0,h=e.constructor,f=h.rounding,g=h.precision;if(!e.d||!e.d[0]||e.e>17)return new h(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(m=!1,u=g):u=t,a=new h(.03125);e.e>-2;)e=e.times(a),p+=5;for(u+=n=Math.log(S(2,p))/Math.LN10*2+5|0,r=s=o=new h(1),h.precision=u;;){if(s=L(s.times(e),u,1),r=r.times(++c),I((a=o.plus(_(s,r,u,1))).d).slice(0,u)===I(o.d).slice(0,u)){for(i=p;i--;)o=L(o.times(o),u,1);if(null!=t)return h.precision=g,o;if(!(l<3&&R(o.d,u-n,f,l)))return L(o,h.precision=g,f,m=!0);h.precision=u+=10,r=s=a=new h(1),c=0,l++}o=a}}function z(e,t){var r,n,i,s,o,a,u,l,c,p,h,f=1,g=e,d=g.d,v=g.constructor,y=v.rounding,b=v.precision;if(g.s<0||!d||!d[0]||!g.e&&1==d[0]&&1==d.length)return new v(d&&!d[0]?-1/0:1!=g.s?NaN:d?0:g);if(null==t?(m=!1,c=b):c=t,v.precision=c+=10,n=(r=I(d)).charAt(0),!(Math.abs(s=g.e)<15e14))return l=k(v,c+2,b).times(s+""),g=z(new v(n+"."+r.slice(1)),c-10).plus(l),v.precision=b,null==t?L(g,b,y,m=!0):g;for(;n<7&&1!=n||1==n&&r.charAt(1)>3;)n=(r=I((g=g.times(e)).d)).charAt(0),f++;for(s=g.e,n>1?(g=new v("0."+r),s++):g=new v(n+"."+r.slice(1)),p=g,u=o=g=_(g.minus(1),g.plus(1),c,1),h=L(g.times(g),c,1),i=3;;){if(o=L(o.times(h),c,1),I((l=u.plus(_(o,new v(i),c,1))).d).slice(0,c)===I(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(k(v,c+2,b).times(s+""))),u=_(u,new v(f),c,1),null!=t)return v.precision=b,u;if(!R(u.d,c-10,y,a))return L(u,v.precision=b,y,m=!0);v.precision=c+=10,l=o=g=_(p.minus(1),p.plus(1),c,1),h=L(g.times(g),c,1),i=a=1}u=l,i+=2}}function H(e){return String(e.s*e.s/0)}function $(e,t){var r,n,i;for((r=t.indexOf("."))>-1&&(t=t.replace(".","")),(n=t.search(/e/i))>0?(r<0&&(r=n),r+=+t.slice(n+1),t=t.substring(0,n)):r<0&&(r=t.length),n=0;48===t.charCodeAt(n);n++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(n,i)){if(i-=n,e.e=r=r-n-1,e.d=[],n=(r+1)%7,r<0&&(n+=7),n<i){for(n&&e.d.push(+t.slice(0,n)),i-=7;n<i;)e.d.push(+t.slice(n,n+=7));n=7-(t=t.slice(n)).length}else n-=i;for(;n--;)t+="0";e.d.push(+t),m&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Q(e,t){var r,n,i,o,a,u,l,c,p;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),P.test(t))return $(e,t)}else if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(M.test(t))r=16,t=t.toLowerCase();else if(E.test(t))r=2;else{if(!N.test(t))throw Error(d+t);r=8}for((o=t.search(/p/i))>0?(l=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),a=(o=t.indexOf("."))>=0,n=e.constructor,a&&(o=(u=(t=t.replace(".","")).length)-o,i=j(n,new n(r),o,2*o)),o=p=(c=T(t,r,x)).length-1;0===c[o];--o)c.pop();return o<0?new n(0*e.s):(e.e=F(c,p),e.d=c,m=!1,a&&(e=_(e,i,4*u)),l&&(e=e.times(Math.abs(l)<54?S(2,l):s.pow(2,l))),m=!0,e)}function W(e,t,r,n,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/7);for(m=!1,u=r.times(r),a=new e(n);;){if(o=_(a.times(u),new e(t++*t++),l,1),a=i?n.plus(o):n.minus(o),n=_(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(n)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=n,n=o,o=s}return m=!0,o.d.length=c+1,o}function Y(e,t){for(var r=e;--t;)r*=e;return r}function J(e,t){var r,n=t.s<0,i=B(e,e.precision,1),s=i.times(.5);if((t=t.abs()).lte(s))return a=n?4:1,t;if((r=t.divToInt(i)).isZero())a=n?3:2;else{if((t=t.minus(r.times(i))).lte(s))return a=V(r)?n?2:3:n?4:1,t;a=V(r)?n?1:4:n?3:2}return t.minus(i).abs()}function K(e,t,r,n){var i,s,a,u,p,h,f,m,g,d=e.constructor,v=void 0!==r;if(v?(C(r,1,l),void 0===n?n=d.rounding:C(n,0,8)):(r=d.precision,n=d.rounding),e.isFinite()){for(v?(i=2,16==t?r=4*r-3:8==t&&(r=3*r-2)):i=t,(a=(f=q(e)).indexOf("."))>=0&&(f=f.replace(".",""),(g=new d(1)).e=f.length-a,g.d=T(q(g),10,i),g.e=g.d.length),s=p=(m=T(f,10,i)).length;0==m[--p];)m.pop();if(m[0]){if(a<0?s--:((e=new d(e)).d=m,e.e=s,m=(e=_(e,g,r,n,0,i)).d,s=e.e,h=o),a=m[r],u=i/2,h=h||void 0!==m[r+1],h=n<4?(void 0!==a||h)&&(0===n||n===(e.s<0?3:2)):a>u||a===u&&(4===n||h||6===n&&1&m[r-1]||n===(e.s<0?8:7)),m.length=r,h)for(;++m[--r]>i-1;)m[r]=0,r||(++s,m.unshift(1));for(p=m.length;!m[p-1];--p);for(a=0,f="";a<p;a++)f+=c.charAt(m[a]);if(v){if(p>1)if(16==t||8==t){for(a=16==t?4:3,--p;p%a;p++)f+="0";for(p=(m=T(f,i,t)).length;!m[p-1];--p);for(a=1,f="1.";a<p;a++)f+=c.charAt(m[a])}else f=f.charAt(0)+"."+f.slice(1);f=f+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)f="0"+f;f="0."+f}else if(++s>p)for(s-=p;s--;)f+="0";else s<p&&(f=f.slice(0,s)+"."+f.slice(s))}else f=v?"0p+0":"0";f=(16==t?"0x":2==t?"0b":8==t?"0o":"")+f}else f=H(e);return e.s<0?"-"+f:f}function ee(e,t){if(e.length>t)return e.length=t,!0}function te(e){return new this(e).abs()}function re(e){return new this(e).acos()}function ne(e){return new this(e).acosh()}function ie(e,t){return new this(e).plus(t)}function se(e){return new this(e).asin()}function oe(e){return new this(e).asinh()}function ae(e){return new this(e).atan()}function ue(e){return new this(e).atanh()}function le(e,t){e=new this(e),t=new this(t);var r,n=this.precision,i=this.rounding,s=n+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(r=t.s<0?B(this,n,i):new this(0)).s=e.s:!e.d||t.isZero()?(r=B(this,s,1).times(.5)).s=e.s:t.s<0?(this.precision=s,this.rounding=1,r=this.atan(_(e,t,s,1)),t=B(this,s,1),this.precision=n,this.rounding=i,r=e.s<0?r.minus(t):r.plus(t)):r=this.atan(_(e,t,s,1)):(r=B(this,s,1).times(t.s>0?.25:.75)).s=e.s:r=new this(NaN),r}function ce(e){return new this(e).cbrt()}function pe(e){return L(e=new this(e),e.e+1,2)}function he(e,t,r){return new this(e).clamp(t,r)}function fe(e){if(!e||"object"!=typeof e)throw Error(g+"Object expected");var t,r,n,i=!0===e.defaults,s=["precision",1,l,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9];for(t=0;t<s.length;t+=3)if(r=s[t],i&&(this[r]=f[r]),void 0!==(n=e[r])){if(!(w(n)===n&&n>=s[t+1]&&n<=s[t+2]))throw Error(d+r+": "+n);this[r]=n}if(r="crypto",i&&(this[r]=f[r]),void 0!==(n=e[r])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(d+r+": "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(y);this[r]=!0}else this[r]=!1}return this}function me(e){return new this(e).cos()}function ge(e){return new this(e).cosh()}function de(e,t){return new this(e).div(t)}function ve(e){return new this(e).exp()}function ye(e){return L(e=new this(e),e.e+1,3)}function be(){var e,t,r=new this(0);for(m=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)r.d&&(r=r.plus(t.times(t)));else{if(t.s)return m=!0,new this(1/0);r=t}return m=!0,r.sqrt()}function we(e){return e instanceof s||e&&e.toStringTag===b||!1}function Se(e){return new this(e).ln()}function Ee(e,t){return new this(e).log(t)}function Me(e){return new this(e).log(2)}function Ne(e){return new this(e).log(10)}function Pe(){return X(this,arguments,"lt")}function xe(){return X(this,arguments,"gt")}function Oe(e,t){return new this(e).mod(t)}function Ae(e,t){return new this(e).mul(t)}function Ge(e,t){return new this(e).pow(t)}function Ie(e){var t,r,n,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:C(e,1,l),n=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(n));s<n;)(i=t[s])>=429e7?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(y);for(t=crypto.randomBytes(n*=4);s<n;)(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=n/4}else for(;s<n;)a[s++]=1e7*Math.random()|0;for(e%=7,(n=a[--s])&&e&&(i=S(10,7-e),a[s]=(n/i|0)*i);0===a[s];s--)a.pop();if(s<0)r=0,a=[0];else{for(r=-1;0===a[0];r-=7)a.shift();for(n=1,i=a[0];i>=10;i/=10)n++;n<7&&(r-=7-n)}return o.e=r,o.d=a,o}function Ce(e){return L(e=new this(e),e.e+1,this.rounding)}function Re(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Te(e){return new this(e).sin()}function _e(e){return new this(e).sinh()}function Le(e){return new this(e).sqrt()}function qe(e,t){return new this(e).sub(t)}function Fe(){var e=0,t=arguments,r=new this(t[e]);for(m=!1;r.s&&++e<t.length;)r=r.plus(t[e]);return m=!0,L(r,this.precision,this.rounding)}function ke(e){return new this(e).tan()}function Be(e){return new this(e).tanh()}function De(e){return L(e=new this(e),e.e+1,1)}(s=function e(t){var r,n,i;function s(e){var t,r,n,i=this;if(!(i instanceof s))return new s(e);if(i.constructor=s,we(e))return i.s=e.s,void(m?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if("number"==(n=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,r=e;r>=10;r/=10)t++;return void(m?t>s.maxE?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):$(i,e.toString())}if("string"!==n)throw Error(d+e);return 45===(r=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===r&&(e=e.slice(1)),i.s=1),P.test(e)?$(i,e):Q(i,e)}if(s.prototype=G,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=fe,s.clone=e,s.isDecimal=we,s.abs=te,s.acos=re,s.acosh=ne,s.add=ie,s.asin=se,s.asinh=oe,s.atan=ae,s.atanh=ue,s.atan2=le,s.cbrt=ce,s.ceil=pe,s.clamp=he,s.cos=me,s.cosh=ge,s.div=de,s.exp=ve,s.floor=ye,s.hypot=be,s.ln=Se,s.log=Ee,s.log10=Ne,s.log2=Me,s.max=Pe,s.min=xe,s.mod=Oe,s.mul=Ae,s.pow=Ge,s.random=Ie,s.round=Ce,s.sign=Re,s.sin=Te,s.sinh=_e,s.sqrt=Le,s.sub=qe,s.sum=Fe,s.tan=ke,s.tanh=Be,s.trunc=De,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],r=0;r<i.length;)t.hasOwnProperty(n=i[r++])||(t[n]=this[n]);return s.config(t),s}(f)).prototype.constructor=s,s.default=s.Decimal=s,p=new s(p),h=new s(h),void 0===(n=function(){return s}.call(t,r,t,e))||(e.exports=n)}()},8158:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Core=void 0;const a=r(8295),u=r(6168),l=r(1449),c=r(8791),p=r(4128),h=r(4998),f=r(131),m=r(240),g=r(1548),d=r(7810),v=s(r(9569)),y=r(1789),b=r(5963),w=r(5037),S=r(6328),E=r(4013),M=o(r(1518)),N=r(3761),P=o(r(275)),x=o(r(3776)),O=s(r(1789));t.Core=class{constructor(){this.groups=b.Groups,this.Symbol=d.Symbol,this.Expression=p.Expression,this.Frac=w.Frac,this.Vector=S.Vector,this.Matrix=E.Matrix,this.Parser=f.Parser,this.Scientific=M.default,this.Math2=g.Math2,this.LaTeX=N.LaTeX,this.PARENTHESIS=m.Settings.PARENTHESIS,this.Settings=m.Settings,this.err=y.err,this.bigInt=P.default,this.bigDec=x.default,this.exceptions=O;const e=this.functionProvider=new a.FunctionProvider,t=this.operators=new u.OperatorDictionary,r=this.variableDictionary=new l.VariableDictionary,n={},i=new c.Tokenizer(e,t,n),s=this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},o=this.EXPRESSIONS=[];p.Expression.$EXPRESSIONS=o,(0,h.primeFactors)(314146179365),m.Settings.FUNCTION_MODULES.push(g.Math2),r.reserveNames(g.Math2);const A=new f.Parser(i,t,e,r,s,n);f.ParseDeps.parser=A,this.PARSER=A,r.reserveNames(r.getAllConstants()),r.reserveNames(e.getFunctionDescriptors()),A.initConstants(),A.error||(A.error=y.err),m.Settings.LOG_FNS={log:e.getFunctionDescriptor("log"),log10:e.getFunctionDescriptor("log10")},this.Utils=Object.assign(Object.assign({},v),{clearU:e=>r.clearU(e),getU:e=>r.getU(e),importFunctions:()=>e.importFunctions(),reserveNames:e=>r.reserveNames(e),isReserved:e=>r.isReserved(e),round:v.nround})}}},1789:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.err=t.PreprocessorError=t.InvalidVariableNameError=t.UnexpectedTokenError=t.InfiniteLoopError=t.SolveError=t.NerdamerValueError=t.ValueLimitExceededError=t.DimensionError=t.OutOfRangeError=t.OperatorError=t.ParityError=t.NerdamerTypeError=t.MaximumIterationsReached=t.OutOfFunctionDomainError=t.UndefinedError=t.ParseError=t.DivisionByZero=void 0;const n=r(240);class i extends Error{constructor(){super(...arguments),this.name="DivisionByZero"}}t.DivisionByZero=i;class s extends Error{constructor(){super(...arguments),this.name="ParseError"}}t.ParseError=s;class o extends Error{constructor(){super(...arguments),this.name="UndefinedError"}}t.UndefinedError=o;class a extends Error{constructor(){super(...arguments),this.name="OutOfFunctionDomainError"}}t.OutOfFunctionDomainError=a;class u extends Error{constructor(){super(...arguments),this.name="MaximumIterationsReached"}}t.MaximumIterationsReached=u;class l extends Error{constructor(){super(...arguments),this.name="NerdamerTypeError"}}t.NerdamerTypeError=l;class c extends Error{constructor(){super(...arguments),this.name="ParityError"}}t.ParityError=c;class p extends Error{constructor(){super(...arguments),this.name="OperatorError"}}t.OperatorError=p;class h extends Error{constructor(){super(...arguments),this.name="OutOfRangeError"}}t.OutOfRangeError=h;class f extends Error{constructor(){super(...arguments),this.name="DimensionError"}}t.DimensionError=f;class m extends Error{constructor(){super(...arguments),this.name="ValueLimitExceededError"}}t.ValueLimitExceededError=m;class g extends Error{constructor(){super(...arguments),this.name="NerdamerValueError"}}t.NerdamerValueError=g;class d extends Error{constructor(){super(...arguments),this.name="SolveError"}}t.SolveError=d;class v extends Error{constructor(){super(...arguments),this.name="InfiniteLoopError"}}t.InfiniteLoopError=v;class y extends Error{constructor(){super(...arguments),this.name="UnexpectedTokenError"}}t.UnexpectedTokenError=y;class b extends Error{constructor(){super(...arguments),this.name="InvalidVariableNameError"}}t.InvalidVariableNameError=b;class w extends Error{constructor(){super(...arguments),this.name="PreprocessorError"}}t.PreprocessorError=w,t.err=function(e,t){if(!n.Settings.suppress_errors)throw t?new t(e):new Error(e)}},1686:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arraySum=void 0;const n=r(7810),i=r(3116),s=r(9569),o=r(131);t.arraySum=function(e,t=!1){for(var r=new n.Symbol(0),a=0;a<e.length;a++){var u=e[a];r=(0,i.add)(r,(0,s.isSymbol)(u)?u:(0,o.parse)(u))}return t?Number(r):r}},9569:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.range=t.isVector=t.isVariableSymbol=t.remove=t.warn=t.WARNINGS=t.validateName=t.nround=t.knownVariable=t.isNumber=t.isPrime=t.isInt=t.isSymbol=t.isExpression=t.isMatrix=t.isArray=t.inBrackets=t.generatePrimes=t.format=t.firstObject=t.fillHoles=t.evenFraction=t.even=t.evaluate=t.each=t.customType=t.convertToVector=t.compare=t.comboSort=t.build=t.block=t.arrayUnique=t.arrayEqual=t.arrayMin=t.arrayMax=t.arrayGetVariables=t.arrayClone=t.arrayAddSlices=t.arguments2Array=t.allNumeric=t.allSame=t.separate=t.scientificToDecimal=t.nroots=t.isNumericSymbol=t.isNegative=t.isFraction=t.getCoeffs=t.arraySum=t.decompose_fn=void 0,t.variables=t.keys=t.text=t.stringReplace=t.sameSign=t.allConstants=t.allNumbers=t.pretty_print=void 0;const n=r(240),i=r(5963),s=r(7810),o=r(6042),a=r(6328),u=r(6507);Object.defineProperty(t,"decompose_fn",{enumerable:!0,get:function(){return u.decompose_fn}}),Object.defineProperty(t,"getCoeffs",{enumerable:!0,get:function(){return u.getCoeffs}}),Object.defineProperty(t,"isFraction",{enumerable:!0,get:function(){return u.isFraction}}),Object.defineProperty(t,"isNegative",{enumerable:!0,get:function(){return u.isNegative}}),Object.defineProperty(t,"isNumericSymbol",{enumerable:!0,get:function(){return u.isNumericSymbol}}),Object.defineProperty(t,"nroots",{enumerable:!0,get:function(){return u.nroots}}),Object.defineProperty(t,"scientificToDecimal",{enumerable:!0,get:function(){return u.scientificToDecimal}}),Object.defineProperty(t,"separate",{enumerable:!0,get:function(){return u.separate}});const l=r(1686);Object.defineProperty(t,"arraySum",{enumerable:!0,get:function(){return l.arraySum}});const c=r(1208),p=r(4013),h=r(4128),f=r(1789),m=r(4583),g=r(131);function d(e){const t=e.length,r=[];for(let n=0;n<t;n++){let t=e[n];-1===r.indexOf(t)&&r.push(t)}return r}function v(e,t,r,i){let s=n.Settings[e];n.Settings[e]=void 0===r||!!r;let o=t.call(i);return n.Settings[e]=s,o}function y(e){return Array.isArray(e)}function b(e){return e instanceof s.Symbol}function w(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())}function S(e){let t=Math.floor(Math.sqrt(e));for(let r=2;r<=t;r++)if(e%r==0)return!1;return!0}function E(e){return/^\d+\.?\d*$/.test(e)}t.allSame=function(e){let t=e[0];for(let r=1,n=e.length;r<n;r++)if(!e[r].equals(t))return!1;return!0},t.allNumeric=function(e){for(let t=0;t<e.length;t++)if(!E(e[t]))return!1;return!0},t.arguments2Array=function(e){return[].slice.call(e)},t.arrayAddSlices=function(e,t){t=t||20;let r,n,i,s=[];s.push(e[0]);for(let o=0;o<e.length-1;o++){r=e[o],n=e[o+1]-r,i=n/t;for(let e=0;e<t;e++)r+=i,s.push(r)}return s},t.arrayClone=function(e){let t=[],r=e.length;for(let n=0;n<r;n++)t[n]=e[n].clone();return t},t.arrayGetVariables=function(e){let t=[];for(let r=0;r<e.length;r++)b(e[r])&&(t=t.concat(e[r].variables()));return t=d(t).sort(),t},t.arrayMax=function(e){return Math.max(...e)},t.arrayMin=function(e){return Math.min(...e)},t.arrayEqual=function(e,t){if(e.sort(),t.sort(),e.length===t.length){for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}return!1},t.arrayUnique=d,t.block=v,t.build=function(e,t){return o.Build.build(e,t)},t.comboSort=function(e,t){const r=e.length,n=[];for(let r=0;r<e.length;r++)n.push([e[r],t[r]]);n.sort((function(e,t){return e[0]-t[0]}));var i=[],s=[];for(let e=0;e<r;e++)i.push(n[e][0]),s.push(n[e][1]);return[i,s]},t.compare=function(e,t,r){const n={};let i;for(let e=0;e<r.length;e++)n[r[e]]=new s.Symbol(Math.floor(5*Math.random())+1);return v("PARSE2NUMBER",(function(){i=(0,g.parse)(e,n).equals((0,g.parse)(t,n))}),!1),i},t.convertToVector=function e(t){if(y(t)){const r=new a.Vector([]);for(let n=0;n<t.length;n++)r.elements.push(e(t[n]));return r}return b(t)?t:(0,g.parse)(t)},t.customType=function(e){return void 0!==e&&e.custom},t.each=function(e,t){if(y(e)){let r=e.length;for(let n=0;n<r;n++)t.call(e,n)}else for(let r in e)e.hasOwnProperty(r)&&t.call(e,r)},t.evaluate=function(e,t){return v("PARSE2NUMBER",(function(){return(0,g.parse)(e,t)}),!0)},t.even=function(e){return e%2==0},t.evenFraction=function(e){return 1/(e%1)%2==0},t.fillHoles=function(e,t){t=t||e.length;for(let r=0;r<t;r++)e[r]||(e[r]=new s.Symbol(0));return e},t.firstObject=function(e,t=!1,r=!1){for(let n in e)return t?n:r?{key:n,obj:e[n]}:e[n];return null},t.format=function(e,...t){return e.replace(/{(\d+)}/g,(function(e,r){const n=t[r];return"function"==typeof n?n():n}))},t.generatePrimes=function(e){for(let t=c.PRIMES[c.PRIMES.length-1]||2;t<e;t++)S(t)&&c.PRIMES.push(t)},t.inBrackets=function(e){return"("+e+")"},t.isArray=y,t.isMatrix=function(e){return e instanceof p.Matrix},t.isExpression=function(e){return e instanceof h.Expression},t.isSymbol=b,t.isInt=w,t.isPrime=S,t.isNumber=E,t.knownVariable=function(e,t){let r={};return r[e]=t,r},t.nround=function(e,t){return w(e)?Number(e)>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(Number(e)*Math.pow(10,t))/Math.pow(10,t))},t.validateName=function(e,t="variable"){if(-1===n.Settings.ALLOW_CHARS.indexOf(e)&&!n.Settings.VALIDATION_REGEX.test(e))throw new f.InvalidVariableNameError(e+" is not a valid "+t+" name")},t.WARNINGS=[],t.warn=function(e){t.WARNINGS.push(e),n.Settings.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},t.remove=function(e,t){let r;return Array.isArray(e)&&"number"==typeof t?r=e.splice(t,1)[0]:(r=e[t],delete e[t]),r},t.isVariableSymbol=function(e){return e.group===i.Groups.S&&e.multiplier.equals(1)&&e.power.equals(1)},t.isVector=function(e){return e instanceof a.Vector},t.range=function(e,t,r=1){const n=[];r=r||1;for(let i=e;i<=t;i++)n.push(i*r);return n},t.pretty_print=function e(t){if(Array.isArray(t)){let r=t.map((t=>e(t))).join(", ");return"vector"===t.type?"vector<"+r+">":"("+r+")"}return t.toString()},t.allNumbers=function(e){for(let t=0;t<e.length;t++)if(e[t].group!==i.Groups.N)return!1;return!0},t.allConstants=function(e){for(let t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},t.sameSign=function(e,t){return e<0==t<0},t.stringReplace=function(e,t,r,n){return e.substr(0,t)+n+e.substr(r,e.length)},t.text=function(e,t,r,n){return(0,m.text)(e,t,r,n)},t.keys=Object.keys,t.variables=function(e,t=!1,r){return b(e)?e.variables(t,r):r?r.c.sort():[]}},3116:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arg=t.conjugate=t.is_in=t.matsetcol=t.matgetcol=t.matsetrow=t.matgetrow=t.matset=t.matget=t.imagpart=t.realpart=t.IF=t.vectrim=t.vecset=t.vecget=t.cross=t.dot=t.transpose=t.size=t.determinant=t.invert=t.cbrt=t.nthroot=t.parens=t.imatrix=t.set=t.matrix=t.vector=t.scientific=t.round=t.continued_fraction=t.sign=t.sinc=t.max=t.min=t.degrees=t.radians=t.exp=t.mod=t.sqrt=t.multiply=t.divide=t.subtract=t.pow=t.log=t.pfactor=t.rationalize=t.abs=t.factorial=t.add=void 0,t.is_subset=t.intersects=t.difference=t.intersection=t.contains=t.union=t.expand=t.erf=t.print=t.sort=t.rectform=t.polarform=void 0;const n=r(9202);Object.defineProperty(t,"add",{enumerable:!0,get:function(){return n.add}});const i=r(6109);Object.defineProperty(t,"factorial",{enumerable:!0,get:function(){return i.factorial}});const s=r(7814);Object.defineProperty(t,"abs",{enumerable:!0,get:function(){return s.abs}});const o=r(981);Object.defineProperty(t,"rationalize",{enumerable:!0,get:function(){return o.rationalize}});const a=r(7648);Object.defineProperty(t,"pfactor",{enumerable:!0,get:function(){return a.pfactor}});const u=r(6276);Object.defineProperty(t,"log",{enumerable:!0,get:function(){return u.log}});const l=r(4998);Object.defineProperty(t,"pow",{enumerable:!0,get:function(){return l.pow}});const c=r(3613);Object.defineProperty(t,"subtract",{enumerable:!0,get:function(){return c.subtract}});const p=r(1014);Object.defineProperty(t,"divide",{enumerable:!0,get:function(){return p.divide}});const h=r(4761);Object.defineProperty(t,"multiply",{enumerable:!0,get:function(){return h.multiply}});const f=r(8890);Object.defineProperty(t,"sqrt",{enumerable:!0,get:function(){return f.sqrt}});const m=r(7248);Object.defineProperty(t,"mod",{enumerable:!0,get:function(){return m.mod}});const g=r(3541);Object.defineProperty(t,"erf",{enumerable:!0,get:function(){return g.erf}});const d=r(3319);Object.defineProperty(t,"exp",{enumerable:!0,get:function(){return d.exp}});const v=r(6870);Object.defineProperty(t,"expand",{enumerable:!0,get:function(){return v.expand}});const y=r(727);Object.defineProperty(t,"radians",{enumerable:!0,get:function(){return y.radians}});const b=r(4513);Object.defineProperty(t,"degrees",{enumerable:!0,get:function(){return b.degrees}});const w=r(9894);Object.defineProperty(t,"min",{enumerable:!0,get:function(){return w.min}});const S=r(2612);Object.defineProperty(t,"max",{enumerable:!0,get:function(){return S.max}});const E=r(1802);Object.defineProperty(t,"sinc",{enumerable:!0,get:function(){return E.sinc}});const M=r(8796);Object.defineProperty(t,"sign",{enumerable:!0,get:function(){return M.sign}});const N=r(6925);Object.defineProperty(t,"round",{enumerable:!0,get:function(){return N.round}});const P=r(2379);Object.defineProperty(t,"continued_fraction",{enumerable:!0,get:function(){return P.continued_fraction}});const x=r(9963);Object.defineProperty(t,"scientific",{enumerable:!0,get:function(){return x.scientific}});const O=r(4134);Object.defineProperty(t,"vector",{enumerable:!0,get:function(){return O.vector}});const A=r(3584);Object.defineProperty(t,"matrix",{enumerable:!0,get:function(){return A.matrix}});const G=r(8194);Object.defineProperty(t,"set",{enumerable:!0,get:function(){return G.set}});const I=r(9467);Object.defineProperty(t,"imatrix",{enumerable:!0,get:function(){return I.imatrix}});const C=r(5190);Object.defineProperty(t,"parens",{enumerable:!0,get:function(){return C.parens}});const R=r(8661);Object.defineProperty(t,"nthroot",{enumerable:!0,get:function(){return R.nthroot}});const T=r(8733);Object.defineProperty(t,"cbrt",{enumerable:!0,get:function(){return T.cbrt}});const _=r(4396);Object.defineProperty(t,"invert",{enumerable:!0,get:function(){return _.invert}});const L=r(2900);Object.defineProperty(t,"determinant",{enumerable:!0,get:function(){return L.determinant}});const q=r(4072);Object.defineProperty(t,"size",{enumerable:!0,get:function(){return q.size}});const F=r(5606);Object.defineProperty(t,"transpose",{enumerable:!0,get:function(){return F.transpose}});const k=r(7621);Object.defineProperty(t,"dot",{enumerable:!0,get:function(){return k.dot}});const B=r(4385);Object.defineProperty(t,"cross",{enumerable:!0,get:function(){return B.cross}});const D=r(9650);Object.defineProperty(t,"vecget",{enumerable:!0,get:function(){return D.vecget}});const U=r(8211);Object.defineProperty(t,"vecset",{enumerable:!0,get:function(){return U.vecset}});const j=r(5466);Object.defineProperty(t,"vectrim",{enumerable:!0,get:function(){return j.vectrim}});const V=r(8990);Object.defineProperty(t,"matget",{enumerable:!0,get:function(){return V.matget}});const X=r(1741);Object.defineProperty(t,"matset",{enumerable:!0,get:function(){return X.matset}});const Z=r(9625);Object.defineProperty(t,"matgetrow",{enumerable:!0,get:function(){return Z.matgetrow}});const z=r(9751);Object.defineProperty(t,"matsetrow",{enumerable:!0,get:function(){return z.matsetrow}});const H=r(6604);Object.defineProperty(t,"matgetcol",{enumerable:!0,get:function(){return H.matgetcol}});const $=r(2186);Object.defineProperty(t,"matsetcol",{enumerable:!0,get:function(){return $.matsetcol}});const Q=r(2165);Object.defineProperty(t,"IF",{enumerable:!0,get:function(){return Q.IF}});const W=r(5843);Object.defineProperty(t,"is_in",{enumerable:!0,get:function(){return W.is_in}});const Y=r(4954);Object.defineProperty(t,"imagpart",{enumerable:!0,get:function(){return Y.imagpart}});const J=r(6801);Object.defineProperty(t,"realpart",{enumerable:!0,get:function(){return J.realpart}});const K=r(3983);Object.defineProperty(t,"conjugate",{enumerable:!0,get:function(){return K.conjugate}});const ee=r(3920);Object.defineProperty(t,"arg",{enumerable:!0,get:function(){return ee.arg}});const te=r(1220);Object.defineProperty(t,"polarform",{enumerable:!0,get:function(){return te.polarform}});const re=r(5635);Object.defineProperty(t,"rectform",{enumerable:!0,get:function(){return re.rectform}});const ne=r(6802);Object.defineProperty(t,"sort",{enumerable:!0,get:function(){return ne.sort}});const ie=r(2630);Object.defineProperty(t,"union",{enumerable:!0,get:function(){return ie.union}});const se=r(4946);Object.defineProperty(t,"contains",{enumerable:!0,get:function(){return se.contains}});const oe=r(3726);Object.defineProperty(t,"intersection",{enumerable:!0,get:function(){return oe.intersection}});const ae=r(2149);Object.defineProperty(t,"difference",{enumerable:!0,get:function(){return ae.difference}});const ue=r(1494);Object.defineProperty(t,"intersects",{enumerable:!0,get:function(){return ue.intersects}});const le=r(4392);Object.defineProperty(t,"is_subset",{enumerable:!0,get:function(){return le.is_subset}});const ce=r(894);Object.defineProperty(t,"print",{enumerable:!0,get:function(){return ce.print}})},8473:(e,t,r)=>{"use strict";t.F=void 0;const n=r(9569);class i{constructor(){this.elements=[]}static create(e){const t=new i;return e&&t.append(e),t}append(e){this.elements.push(e)}getItems(){return this.elements}toString(){return(0,n.pretty_print)(this.elements)}}t.F=i},3127:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Node=void 0;class r{constructor(e){this.type=e.type,this.value=e.value,e instanceof r&&(this.left=e.left,this.right=e.right)}toString(){let e=this.left?this.left.toString()+"---":"",t=this.right?"---"+this.right.toString():"";return e+"("+this.value+")"+t}toHTML(e=0,t=4){let r=function(e){return" ".repeat(t*e)},n="",i=this.left?r(e+1)+"<li>\n"+this.left.toHTML(e+2,t)+r(e+1)+"</li> \n":"",s=this.right?r(e+1)+"<li>\n"+this.right.toHTML(e+2,t)+r(e+1)+"</li>\n":"";return n=r(e)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+r(e)+"\n",(i||s)&&(n+=r(e)+"<ul>\n"+i+s+r(e)+"</ul>\n"),n+="",n}}t.Node=r},2910:(e,t,r)=>{"use strict";t.p=void 0;const n=r(4583);t.p=class{constructor(e,t){this.start=e,this.end=t}isConstant(){return this.start.isConstant()&&this.end.isConstant()}text(){return(0,n.text)(this.start)+":"+(0,n.text)(this.end)}}},1649:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Token=void 0;class r{constructor(e,t,n,i){if(this.is_prefix=!1,this.column=0,this.precedence=0,this.leftAssoc=!1,this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===r.OPERATOR&&i)for(let e in i)this[e]=i[e];else t===r.FUNCTION&&(this.precedence=r.MAX_PRECEDENCE,this.leftAssoc=!1)}toString(){return this.is_prefix?"`"+this.value:this.value}}t.Token=r,r.OPERATOR="OPERATOR",r.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",r.FUNCTION="FUNCTION",r.UNIT="UNIT",r.KEYWORD="KEYWORD",r.MAX_PRECEDENCE=999},8791:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Tokenizer=void 0;const n=r(1649),i=r(9569),s=r(1548),o=r(240),a=r(3127),u=r(1789);class l extends Error{constructor(){super(...arguments),this.name="ParityError"}}t.Tokenizer=class{constructor(e,t,r){this.preprocessors={names:[],actions:[]},this.functions=e,this.brackets=t.getBrackets(),this.operators=t,this.units=r}tokenize(e,t=!1){return t&&(e=this.prepareExpression(e)),new c(this.functions,this.brackets,this.operators,this.units,e).tokenize()}addPreprocessor(e,t,r,n){let i=this.preprocessors.names||[],s=this.preprocessors.actions||[];if("function"!=typeof t)throw new u.PreprocessorError("Incorrect parameters. Function expected!");r?n?(i.splice(r,0,e),s.splice(r,0,t)):(i[r]=e,s[r]=t):(i.push(e),s.push(t))}getPreprocessors(){var e;let t={};if(null===(e=this.preprocessors.names)||void 0===e?void 0:e.length)for(let e=0,r=this.preprocessors.names.length;e<r;e++)t[this.preprocessors.names[e]||""]={order:e,action:this.preprocessors.actions[e]};return t}removePreprocessor(e,t){let r=this.preprocessors.names.indexOf(e);t?((0,i.remove)(this.preprocessors.names,r),(0,i.remove)(this.preprocessors.actions,r)):(this.preprocessors.names[r]=void 0,this.preprocessors.actions[r]=void 0)}prepareExpression(e){var t;e=String(e);for(let r=0;r<this.preprocessors.actions.length;r++)e=(null===(t=this.preprocessors.actions[r])||void 0===t?void 0:t.call(this,e))||e;for(e=e.replace(/\s+/g," "),/e/gi.test(e)&&(e=e.replace(/-*\d+\.*\d*e\+?-?\d+/gi,(e=>s.Math2.scientificToDecimal(e)))),e=(e=(e=e.replace(o.Settings.IMPLIED_MULTIPLICATION_REGEX,((e,t,r,n,i)=>{let s="",o="*";return i.charAt(n).match(/[+\-\/*]/)||(s=i.charAt(n-1)),s.match(/[a-z]/i)&&(o=""),t+o+r}))).replace(/([a-z0-9_]+)/gi,((e,t)=>o.Settings.USE_MULTICHARACTER_VARS||this.functions.getFunctionDescriptor(t)?t:isNaN(t)?t.split("").join("*"):t))).replace(/\)\(/g,")*(")||"0";e!==(e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,((e,t,r,n,i)=>{let s=t||n,o=r||i;return this.functions.getFunctionDescriptor(s)?s+o:s+"*"+o}))););return e}tree(e){let t=[];for(let r=0;r<e.length;r++){let i=e[r];if(Array.isArray(i))i=this.tree(i),t.push(i);else if(i.type===n.Token.OPERATOR)if(i.is_prefix||i.postfix){let e=i.is_prefix?"left":"right",r=t.pop();i=new a.Node(i),i[e]=r,t.push(i)}else i=new a.Node(i),i.right=t.pop(),i.left=t.pop(),t.push(i);else if(i.type===n.Token.FUNCTION){i=new a.Node(i);let e=t.pop();if(i.right=e,"object"===i.value){let e=t[t.length-1];if(e){for(;e.right;)e=e.right;e.right=i;continue}}t.push(i)}else t.push(new a.Node(i))}return t[0]}};class c{constructor(e,t,r,n,i){this.expression=i,this.functions=e,this.brackets=t,this.operators=r,this.units=n,this.tokens=[],this.col=0,this.lpos=0,this.scopes=[this.tokens],this.target=this.tokens,this.depth=0;let s=String(this.expression);s=s.trim().replace(/\s+/g," ");for(let e in this.brackets){let t=new RegExp(this.brackets[e].is_close?"\\s+\\"+e:"\\"+e+"\\s+","g");s=s.replace(t,e)}this.expression=s}addScope(e,t){let r=[];void 0!==e&&(r.type=e),r.column=t,this.scopes.push(r),this.target.push(r),this.target=r,this.depth++}goUp(){this.scopes.pop(),this.target=this.scopes[--this.depth]}get_operator_str(e,t){let r=t+1;for(;this.operators.isOperator(e.charAt(r++)););return e.substring(t,r-1)}chunkify(e){let t=this.col-e.length,r=[],i=e.charAt(0),s=t+1,o=e.length;for(let t=1;t<o;t++,s++){let o=e.charAt(t),a=i+o;this.operators.isOperator(a)?i=a:(r.push(new n.Token(i,n.Token.OPERATOR,s,this.operators.getOperator(i))),i=o)}return r.push(new n.Token(i,n.Token.OPERATOR,s,this.operators.getOperator(i))),r}add_token(e,t){void 0===t&&(t=this.expression.substring(this.lpos,e)),t in this.units?this.target.push(new n.Token(t,n.Token.UNIT,this.lpos)):""!==t&&this.target.push(new n.Token(t,n.Token.VARIABLE_OR_LITERAL,this.lpos))}add_function(e){this.target.push(new n.Token(e,n.Token.FUNCTION,this.lpos))}set_last_position(e){this.lpos=e+1}adjust_column_position(e){this.lpos=this.lpos+e.length-2,this.col=this.lpos-1}tokenize(){let e=this.expression,t=e.length,r=[],s=!1,o="*";for(;this.col<t;this.col++){let t=e.charAt(this.col);if(this.operators.isOperator(t)){this.add_token(this.col);let r=this.target[0]&&(0,i.isNumber)(this.target[0])&&t===o;s&&this.lpos<this.col&&","!==t&&!r&&(s=!1,this.goUp()),this.set_last_position(this.col+1);let n=this.get_operator_str(e,this.col);this.adjust_column_position(n),this.target.push.apply(this.target,this.chunkify(n))}else if(t in this.brackets){let i=this.brackets[t];if(i.is_open){r.push([i,this.lpos]);let t=e.substring(this.lpos,this.col);this.functions.getFunctionDescriptor(t)?this.add_function(t):""!==t&&this.target.push(new n.Token(t,n.Token.VARIABLE_OR_LITERAL,this.lpos)),this.addScope(i.maps_to,this.col)}else if(i.is_close){let e=r.pop();if(!e)throw new l("Missing open bracket for bracket at: "+(this.col+1));if(e[0].id!==i.id-1)throw new l("Parity error");this.add_token(this.col),this.goUp()}this.set_last_position(this.col)}else if(" "===t){let t=e.substring(this.lpos,this.col),r=e.charAt(this.col+1);if(s){if(this.operators.isOperator(t))this.target.push(new n.Token(t,n.Token.OPERATOR,this.col,this.operators.getOperator(t)));else{this.add_token(void 0,t),this.goUp();let e=this.operators.isOperator(r);(e&&"-"===this.operators.getOperator(r).value||!e)&&this.target.push(new n.Token(o,n.Token.OPERATOR,this.col,this.operators.getOperator(o)))}s=!1}else{let r=e.substring(this.lpos,this.col);if(this.functions.getFunctionDescriptor(r))s=!0,this.add_function(r),this.addScope();else if(this.operators.isOperator(r))this.target.push(new n.Token(r,n.Token.OPERATOR,this.col,this.operators.getOperator(r)));else{this.add_token(void 0,r);let i=e.charAt(this.col+1);""===t||""===i||this.operators.isOperator(t)||this.operators.isOperator(i)||this.target.push(new n.Token(o,n.Token.OPERATOR,this.col,this.operators.getOperator(o)))}}this.set_last_position(this.col)}}if(r.length){const e=r.pop();throw new l("Missing closed bracket for bracket at "+(e?e[1]+1:"undefined"))}return this.add_token(this.col),this.tokens}}},6168:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorDictionary=void 0;const n=r(240),i=r(7810),s=r(3116);t.OperatorDictionary=class{constructor(){this.operators={},this.brackets={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},this.operators={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:e=>(0,i.symfunction)(n.Settings.DOUBLEFACTORIAL,[e])},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:e=>(0,s.factorial)(e)},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:e=>(0,s.divide)(e,new i.Symbol(100))},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:e=>e},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:e=>e},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:e=>e.negate()},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}}}injectOperatorsDeps(e){this.deps=e}setOperator(e,t,r){let n=e.operator;if(this.operators[n]=e,t&&this.deps.registerOperator(e.action,t),this.deps.registerOperator(n,e.operation),e.action||e.prefix||e.postfix||(e.action=n),"over"===r||"under"===r){let t=e.precedence;for(let e in this.operators){let n=this.operators[e];("over"===r?n.precedence>=t:n.precedence>t)&&n.precedence++}}}getOperator(e){return this.operators[e]}aliasOperator(e,t){let r=this.operators[e],n=Object.assign({},r);n.operator=t,this.setOperator(n)}getOperators(){return this.operators}getBrackets(){return this.brackets}isOperator(e){return e in this.operators}}},1449:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VariableDictionary=void 0;const n=r(9569);t.VariableDictionary=class{constructor(){this.vars={},this.constants={},this.reserved=[]}setVar(e,t){this.vars[e]=t}getVar(e){return this.vars[e]}isVar(e){return e in this.vars}deleteVar(e){delete this.vars[e]}clearAllVars(){this.vars={}}getAllVars(){return this.vars}setConstant(e,t){this.constants[e]=t}getConstant(e){return this.constants[e]}isConstant(e){return e in this.constants}getAllConstants(){return this.constants}deleteConstant(e){delete this.constants[e]}getU(e){let t="u",r=0,n=e.variables();for(;-1!==this.reserved.indexOf(t)||-1!==n.indexOf(t);)t="u"+r++;for(let e=0,r=this.reserved.length;e<=r;e++)if(!this.reserved[e]){this.reserved[e]=t;break}return t}clearU(e){let t=this.reserved.indexOf(e);-1!==t&&(this.reserved[t]=void 0)}isReserved(e){return-1!==this.reserved.indexOf(e)}reserveName(e){this.isReserved(e)||this.reserved.push(e)}reserveNames(e){"string"==typeof e?this.reserveName(e):(0,n.each)(e,(e=>{this.reserveName(String(e))}))}getReserved(){return this.reserved}}},240:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Settings=void 0,t.Settings={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([+\-\/*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[+\-\/*]*)/gi,ALIASES:{π:"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{roots:{}},SILENCE_WARNINGS:!1,PRECISION:21,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",LOG_FNS:{log:null,log10:null},MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0,CONST_HASH:"#",SOLVE_RADIUS:1e3,ROOTS_PER_SIDE:10,make_pi_conversions:!1,STEP_SIZE:.1,EPSILON:1e-13,MAX_NEWTON_ITERATIONS:200,MAX_NON_LINEAR_TRIES:12,NON_LINEAR_JUMP_AT:50,NON_LINEAR_JUMP_SIZE:100,NON_LINEAR_START:.01,NEWTON_SLICES:200,NEWTON_EPSILON:2*Number.EPSILON,SOLUTION_PROXIMITY:1e-14,FILTER_SOLUTIONS:!0,MAX_SOLVE_DEPTH:10,ZERO_EPSILON:1e-9,MAX_BISECTION_ITER:2e3,BI_SECTION_EPSILON:1e-12,SHOW_WARNINGS:!1,USE_BIG:!1,E_TO_EXP:!1,SYMBOLIC_MIN_MAX:!1,IGNORE_E:!1}},5963:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Groups=void 0,(r=t.Groups||(t.Groups={}))[r.N=1]="N",r[r.P=2]="P",r[r.S=3]="S",r[r.EX=4]="EX",r[r.FN=5]="FN",r[r.PL=6]="PL",r[r.CB=7]="CB",r[r.CP=8]="CP"},1518:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(240),i=r(9569);class s{constructor(e){this.sign=1,this.decp=0;let t=String(void 0===e?0:e);if(t.startsWith("-")?(this.sign=-1,t=t.substr(1,t.length)):this.sign=1,s.isScientific(t))[this.coeff,this.exponent]=s.fromScientific(t);else{let e=s.convert(t);this.coeff=e.coeff,this.exponent=e.exponent,this.dec=e.dec,this.decp=e.decp,this.wholes=e.wholes}}static fromScientific(e){let t=String(e).toLowerCase().split("e");return[t[0],t[1]]}static convert(e){let t=e.split("."),r=t[0]||"",n=t[1]||"";r=s.removeLeadingZeroes(r),n=s.removeTrailingZeroes(n);let i=r+n,o=(r.length-(s.leadingZeroes(i).length+1)).toString(),a=s.removeLeadingZeroes(i);a=a.charAt(0)+"."+(a.substr(1,a.length)||"0");let u=a.split(".")[1]||"",l="0"===u?0:u.length;return u=n.toString(),{coeff:a,exponent:o,decp:l,dec:u,wholes:r}}round(e){let t=this.copy();if(0===(e=Number(e)))t.coeff=t.coeff.charAt(0);else{let r=this.coeff.substring(0,e+1),n=this.coeff.substring(e+1,e+3),i=parseInt(n.charAt(0));parseInt(n.charAt(1))>4&&i++,t.coeff=r+i}return t}copy(){let e=new s(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e}toString(e=0){let t;if(n.Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&"0"===this.exponent&&this.decp<e)t=0===this.decp?this.wholes:this.coeff;else{let r=void 0===e?this.coeff:s.round(this.coeff,Math.min(e,this.decp||1));t="0"===this.exponent?r:r+"e"+this.exponent}return(-1===this.sign?"-":"")+t}static isScientific(e){return/\d+\.?\d*e[+\-]*\d+/i.test(e)}static leadingZeroes(e){let t=e.match(/^(0*).*$/);return t?t[1]:""}static removeLeadingZeroes(e){let t=e.match(/^0*(.*)$/);return t?t[1]:""}static removeTrailingZeroes(e){let t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""}static round(e,t){let r=(0,i.nround)(e,t),n=String(r).split(".").pop(),s=t-((null==n?void 0:n.length)||0);return s>0&&(r+=new Array(s+1).join("0")),r}}t.default=s},6971:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};const a=r(4128),u=r(240),l=r(8158),c=o(r(3776)),p=s(r(9569)),h=r(3761),f=r(1789);c.default.set({precision:250});const m=new l.Core;let g=m.PARSER,d=m.functionProvider,v=m.variableDictionary,y=m.EXPRESSIONS,b=m.peekers,w=m.operators;function S(e,t,r,n){let i=!1;"string"!=typeof e&&(e=e.toString());let s=/^([a-z_][a-z\d_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(s)return S.setFunction(s[1],s[2].split(","),s[3]);r?Array.isArray(r)||(r=[r.toString()]):r=[],r.forEach((function(t){if("numer"===t)return void(i=!0);let r=d.getFunctionDescriptor(t);r&&1===r[1]&&(e=`${t}(${e})`)}));let o=p.block("PARSE2NUMBER",(function(){return g.parse(e,t)}),i||u.Settings.PARSE2NUMBER);return n?y[n-1]=o:y.push(o),new a.Expression(o)}!function(e){function t(e,t=!1){return a.Expression.getExpression(e,t)}function r(t,r=!1){if("all"===t)y.splice(0,y.length);else if("last"===t)y.pop();else if("first"===t)y.shift();else{let e=t?t-1:y.length;r?y[e]=void 0:p.remove(y,e)}return e}function n(e){return g.tree(e)}e.rpn=function(e){return g.toRPN(g.tokenize(e))},e.convertToLaTeX=function(e,t){return g.toTeX(e,t)},e.convertFromLaTeX=function(e){let t=h.LaTeX.parse(g.tokenize(e));return new a.Expression(g.parse(t))},e.version=function(e){if(e)try{return m[e].version}catch(t){return"No module named "+e+" found!"}return"1.1.12"},e.getWarnings=function(){return p.WARNINGS},e.setConstant=function(t,r){return p.validateName(t),v.isReserved(t)||("delete"===r||""===r?v.deleteConstant(t):v.setConstant(t,r)),e},e.getConstant=function(e){return String(v.getConstant(e))},e.setFunction=function(e,t,r){g.setFunction(e,t,r)},e.getCore=function(){return m},e.getExpression=t,e.getEquation=t,e.reserved=function(e=!1){let t=v.getReserved();return e?t:t.join(", ")},e.clear=r,e.flush=function(){return r("all"),e},e.expressions=function(e,t,r){let n=e?{}:[];for(let i=0;i<y.length;i++){let s=t?h.LaTeX.latex(y[i],r):p.text(y[i],r);e?n[i+1]=s:n.push(s)}return n},e.register=function t(r){let n=m;if(Array.isArray(r))for(let e=0;e<r.length;e++)r&&t(r[e]);else if(r&&"name"in r&&-1===u.Settings.exclude.indexOf(r.name)){if(r.dependencies)for(let e=0;e<r.dependencies.length;e++)if(!n[r.dependencies[e]])throw new Error(p.format("{0} requires {1} to be loaded!",r.name,r.dependencies[e]));let t=r.parent,i=r.build.call(n);t&&(n[t]||(n[r.parent]={}),("nerdamer"===t?e:n[t])[r.name]=i),r.visible&&d.setFunctionDescriptor(r.name,[i,r.numargs])}},e.validateName=function(e,t="variable"){return p.validateName(e,t)},e.validVarName=function(e){try{return p.validateName(e),!v.isReserved(e)}catch(e){return!1}},e.supported=function(){return Object.keys(d.getFunctionDescriptors())},e.numExpressions=function(){return y.length},e.setVar=function(t,r){if(p.validateName(t),v.isConstant(t)&&(0,f.err)("Cannot set value for constant "+t),"delete"===r||""===r)v.deleteVar(t);else{let e=p.isSymbol(r)?r:g.parse(r);v.setVar(t,e)}return e},e.getVar=function(e){return v.getVar(e)},e.getVars=function(e,t){e=e||"text";let r=v.getAllVars();switch(e){case"object":return r;case"latex":return r.map((e=>e.latex(t)));case"text":return r.map((e=>e.text(t)))}return{}},e.clearVars=function(){return v.clearAllVars(),e},e.load=function(t){return t.call(e),e},e.set=function(e,t){},e.get=function(e){return u.Settings[e]},e.replaceFunction=function(e,t,r){let n=d.getFunctionDescriptor(e),i=void 0===r?n[1]:r;d.setFunctionDescriptor(e,[t.call(void 0,n[0],m),i])},e.setOperator=function(e,t,r){return w.setOperator(e,t,r)},e.getOperator=function(e){return w.getOperator(e)},e.aliasOperator=function(e,t){return w.aliasOperator(e,t)},e.tree=n,e.htmlTree=function(e,t){return'<div class="tree">\n    <ul>\n        <li>\n'+n(e).toHTML(3,t)+"\n        </li>\n    </ul>\n</div>"},e.addPeeker=function(e,t){b[e]&&b[e].push(t)},e.removePeeker=function(e,t){p.remove(b[e],t)},e.parse=function(e){return String(e).split(";").map((function(e){return g.parse(e)}))};class i{constructor(e,t,r){}static withModules(...e){return new i}}e.Nerdamer=i,e.api=function(e=!1){}}(S||(S={}));const E=new Proxy(S,{get:(e,t)=>{if(t in e)return e[t];if(d.getFunctionDescriptor(t))return(...e)=>{for(let t=0;t<e.length;t++)e[t]=g.parse(e[t]);return new a.Expression(p.block("PARSE2NUMBER",(()=>g.callfunction(String(t),e))))};throw new Error("Requested non-existent property: "+String(t))}});e.exports=E},275:(e,t,r)=>{var n,i;(e=r.nmd(e)).exports=(i=function(e){"use strict";var t=1e7,r=9007199254740992,n=c(r),s=Math.log(r);function o(e,t){return void 0===e?o[0]:void 0!==t?10==+t?H(e):U(e,t):H(e)}function a(e,t){this.value=e,this.sign=t,this.isSmall=!1}function u(e){this.value=e,this.sign=e<0,this.isSmall=!0}function l(e){return-r<e&&e<r}function c(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function p(e){h(e);var r=e.length;if(r<4&&A(e,n)<0)switch(r){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function h(e){for(var t=e.length;0===e[--t];);e.length=t+1}function f(e){for(var t=new Array(e),r=-1;++r<e;)t[r]=0;return t}function m(e){return e>0?Math.floor(e):Math.ceil(e)}function g(e,r){var n,i,s=e.length,o=r.length,a=new Array(s),u=0,l=t;for(i=0;i<o;i++)u=(n=e[i]+r[i]+u)>=l?1:0,a[i]=n-u*l;for(;i<s;)u=(n=e[i]+u)===l?1:0,a[i++]=n-u*l;return u>0&&a.push(u),a}function d(e,t){return e.length>=t.length?g(e,t):g(t,e)}function v(e,r){var n,i,s=e.length,o=new Array(s),a=t;for(i=0;i<s;i++)n=e[i]-a+r,r=Math.floor(n/a),o[i]=n-r*a,r+=1;for(;r>0;)o[i++]=r%a,r=Math.floor(r/a);return o}function y(e,r){var n,i,s=e.length,o=r.length,a=new Array(s),u=0,l=t;for(n=0;n<o;n++)(i=e[n]-u-r[n])<0?(i+=l,u=1):u=0,a[n]=i;for(n=o;n<s;n++){if(!((i=e[n]-u)<0)){a[n++]=i;break}i+=l,a[n]=i}for(;n<s;n++)a[n]=e[n];return h(a),a}function b(e,r,n){var i,s,o=e.length,l=new Array(o),c=-r,h=t;for(i=0;i<o;i++)s=e[i]+c,c=Math.floor(s/h),s%=h,l[i]=s<0?s+h:s;return"number"==typeof(l=p(l))?(n&&(l=-l),new u(l)):new a(l,n)}function w(e,r){var n,i,s,o,a=e.length,u=r.length,l=f(a+u),c=t;for(s=0;s<a;++s){o=e[s];for(var p=0;p<u;++p)n=o*r[p]+l[s+p],i=Math.floor(n/c),l[s+p]=n-i*c,l[s+p+1]+=i}return h(l),l}function S(e,r){var n,i,s=e.length,o=new Array(s),a=t,u=0;for(i=0;i<s;i++)n=e[i]*r+u,u=Math.floor(n/a),o[i]=n-u*a;for(;u>0;)o[i++]=u%a,u=Math.floor(u/a);return o}function E(e,t){for(var r=[];t-- >0;)r.push(0);return r.concat(e)}function M(e,t){var r=Math.max(e.length,t.length);if(r<=30)return w(e,t);r=Math.ceil(r/2);var n=e.slice(r),i=e.slice(0,r),s=t.slice(r),o=t.slice(0,r),a=M(i,o),u=M(n,s),l=M(d(i,n),d(o,s)),c=d(d(a,E(y(y(l,a),u),r)),E(u,2*r));return h(c),c}function N(e,r,n){return new a(e<t?S(r,e):w(r,c(e)),n)}function P(e){var r,n,i,s,o=e.length,a=f(o+o),u=t;for(i=0;i<o;i++){n=0-(s=e[i])*s;for(var l=i;l<o;l++)r=s*e[l]*2+a[i+l]+n,n=Math.floor(r/u),a[i+l]=r-n*u;a[i+o]=n}return h(a),a}function x(e,t){var r,n,i,s,o=e.length,a=f(o);for(i=0,r=o-1;r>=0;--r)i=(s=1e7*i+e[r])-(n=m(s/t))*t,a[r]=0|n;return[a,0|i]}function O(e,r){var n,i,s=H(r),l=e.value,g=s.value;if(0===g)throw new Error("Cannot divide by zero");if(e.isSmall)return s.isSmall?[new u(m(l/g)),new u(l%g)]:[o[0],e];if(s.isSmall){if(1===g)return[e,o[0]];if(-1==g)return[e.negate(),o[0]];var d=Math.abs(g);if(d<t){i=p((n=x(l,d))[0]);var v=n[1];return e.sign&&(v=-v),"number"==typeof i?(e.sign!==s.sign&&(i=-i),[new u(i),new u(v)]):[new a(i,e.sign!==s.sign),new u(v)]}g=c(d)}var b=A(l,g);if(-1===b)return[o[0],e];if(0===b)return[o[e.sign===s.sign?1:-1],o[0]];n=l.length+g.length<=200?function(e,r){var n,i,s,o,a,u,l,c=e.length,h=r.length,m=t,g=f(r.length),d=r[h-1],v=Math.ceil(m/(2*d)),y=S(e,v),b=S(r,v);for(y.length<=c&&y.push(0),b.push(0),d=b[h-1],i=c-h;i>=0;i--){for(n=m-1,y[i+h]!==d&&(n=Math.floor((y[i+h]*m+y[i+h-1])/d)),s=0,o=0,u=b.length,a=0;a<u;a++)s+=n*b[a],l=Math.floor(s/m),o+=y[i+a]-(s-l*m),s=l,o<0?(y[i+a]=o+m,o=-1):(y[i+a]=o,o=0);for(;0!==o;){for(n-=1,s=0,a=0;a<u;a++)(s+=y[i+a]-m+b[a])<0?(y[i+a]=s+m,s=0):(y[i+a]=s,s=1);o+=s}g[i]=n}return y=x(y,v)[0],[p(g),p(y)]}(l,g):function(e,r){for(var n,i,s,o,a,u=e.length,l=r.length,c=[],f=[],m=t;u;)if(f.unshift(e[--u]),h(f),A(f,r)<0)c.push(0);else{s=f[(i=f.length)-1]*m+f[i-2],o=r[l-1]*m+r[l-2],i>l&&(s=(s+1)*m),n=Math.ceil(s/o);do{if(A(a=S(r,n),f)<=0)break;n--}while(n);c.push(n),f=y(f,a)}return c.reverse(),[p(c),p(f)]}(l,g),i=n[0];var w=e.sign!==s.sign,E=n[1],M=e.sign;return"number"==typeof i?(w&&(i=-i),i=new u(i)):i=new a(i,w),"number"==typeof E?(M&&(E=-E),E=new u(E)):E=new a(E,M),[i,E]}function A(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var r=e.length-1;r>=0;r--)if(e[r]!==t[r])return e[r]>t[r]?1:-1;return 0}function G(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(49)||void 0))}function I(e,t){for(var r,n,s,a=e.prev(),u=a,l=0;u.isEven();)u=u.divide(2),l++;e:for(n=0;n<t.length;n++)if(!e.lesser(t[n])&&!(s=i(t[n]).modPow(u,e)).equals(o[1])&&!s.equals(a)){for(r=l-1;0!=r;r--){if((s=s.square().mod(e)).isUnit())return!1;if(s.equals(a))continue e}return!1}return!0}a.prototype=Object.create(o.prototype),u.prototype=Object.create(o.prototype),a.prototype.add=function(e){var t=H(e);if(this.sign!==t.sign)return this.subtract(t.negate());var r=this.value,n=t.value;return t.isSmall?new a(v(r,Math.abs(n)),this.sign):new a(d(r,n),this.sign)},a.prototype.plus=a.prototype.add,u.prototype.add=function(e){var t=H(e),r=this.value;if(r<0!==t.sign)return this.subtract(t.negate());var n=t.value;if(t.isSmall){if(l(r+n))return new u(r+n);n=c(Math.abs(n))}return new a(v(n,Math.abs(r)),r<0)},u.prototype.plus=u.prototype.add,a.prototype.subtract=function(e){var t=H(e);if(this.sign!==t.sign)return this.add(t.negate());var r=this.value,n=t.value;return t.isSmall?b(r,Math.abs(n),this.sign):function(e,t,r){var n;return A(e,t)>=0?n=y(e,t):(n=y(t,e),r=!r),"number"==typeof(n=p(n))?(r&&(n=-n),new u(n)):new a(n,r)}(r,n,this.sign)},a.prototype.minus=a.prototype.subtract,u.prototype.subtract=function(e){var t=H(e),r=this.value;if(r<0!==t.sign)return this.add(t.negate());var n=t.value;return t.isSmall?new u(r-n):b(n,Math.abs(r),r>=0)},u.prototype.minus=u.prototype.subtract,a.prototype.negate=function(){return new a(this.value,!this.sign)},u.prototype.negate=function(){var e=this.sign,t=new u(-this.value);return t.sign=!e,t},a.prototype.abs=function(){return new a(this.value,!1)},u.prototype.abs=function(){return new u(Math.abs(this.value))},a.prototype.multiply=function(e){var r,n,i,s=H(e),u=this.value,l=s.value,p=this.sign!==s.sign;if(s.isSmall){if(0===l)return o[0];if(1===l)return this;if(-1===l)return this.negate();if((r=Math.abs(l))<t)return new a(S(u,r),p);l=c(r)}return new a(-.012*(n=u.length)-.012*(i=l.length)+15e-6*n*i>0?M(u,l):w(u,l),p)},a.prototype.times=a.prototype.multiply,u.prototype._multiplyBySmall=function(e){return l(e.value*this.value)?new u(e.value*this.value):N(Math.abs(e.value),c(Math.abs(this.value)),this.sign!==e.sign)},a.prototype._multiplyBySmall=function(e){return 0===e.value?o[0]:1===e.value?this:-1===e.value?this.negate():N(Math.abs(e.value),this.value,this.sign!==e.sign)},u.prototype.multiply=function(e){return H(e)._multiplyBySmall(this)},u.prototype.times=u.prototype.multiply,a.prototype.square=function(){return new a(P(this.value),!1)},u.prototype.square=function(){var e=this.value*this.value;return l(e)?new u(e):new a(P(c(Math.abs(this.value))),!1)},a.prototype.divmod=function(e){var t=O(this,e);return{quotient:t[0],remainder:t[1]}},u.prototype.divmod=a.prototype.divmod,a.prototype.divide=function(e){return O(this,e)[0]},u.prototype.over=u.prototype.divide=a.prototype.over=a.prototype.divide,a.prototype.mod=function(e){return O(this,e)[1]},u.prototype.remainder=u.prototype.mod=a.prototype.remainder=a.prototype.mod,a.prototype.pow=function(e){var t,r,n,i=H(e),s=this.value,a=i.value;if(0===a)return o[1];if(0===s)return o[0];if(1===s)return o[1];if(-1===s)return i.isEven()?o[1]:o[-1];if(i.sign)return o[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&l(t=Math.pow(s,a)))return new u(m(t));for(r=this,n=o[1];!0&a&&(n=n.times(r),--a),0!==a;)a/=2,r=r.square();return n},u.prototype.pow=a.prototype.pow,a.prototype.modPow=function(e,t){if(e=H(e),(t=H(t)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var r=o[1],n=this.mod(t);e.isPositive();){if(n.isZero())return o[0];e.isOdd()&&(r=r.multiply(n).mod(t)),e=e.divide(2),n=n.square().mod(t)}return r},u.prototype.modPow=a.prototype.modPow,a.prototype.compareAbs=function(e){var t=H(e),r=this.value,n=t.value;return t.isSmall?1:A(r,n)},u.prototype.compareAbs=function(e){var t=H(e),r=Math.abs(this.value),n=t.value;return t.isSmall?r===(n=Math.abs(n))?0:r>n?1:-1:-1},a.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=H(e),r=this.value,n=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:A(r,n)*(this.sign?-1:1)},a.prototype.compareTo=a.prototype.compare,u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=H(e),r=this.value,n=t.value;return t.isSmall?r==n?0:r>n?1:-1:r<0!==t.sign?r<0?-1:1:r<0?1:-1},u.prototype.compareTo=u.prototype.compare,a.prototype.equals=function(e){return 0===this.compare(e)},u.prototype.eq=u.prototype.equals=a.prototype.eq=a.prototype.equals,a.prototype.notEquals=function(e){return 0!==this.compare(e)},u.prototype.neq=u.prototype.notEquals=a.prototype.neq=a.prototype.notEquals,a.prototype.greater=function(e){return this.compare(e)>0},u.prototype.gt=u.prototype.greater=a.prototype.gt=a.prototype.greater,a.prototype.lesser=function(e){return this.compare(e)<0},u.prototype.lt=u.prototype.lesser=a.prototype.lt=a.prototype.lesser,a.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},u.prototype.geq=u.prototype.greaterOrEquals=a.prototype.geq=a.prototype.greaterOrEquals,a.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},u.prototype.leq=u.prototype.lesserOrEquals=a.prototype.leq=a.prototype.lesserOrEquals,a.prototype.isEven=function(){return 0==(1&this.value[0])},u.prototype.isEven=function(){return 0==(1&this.value)},a.prototype.isOdd=function(){return 1==(1&this.value[0])},u.prototype.isOdd=function(){return 1==(1&this.value)},a.prototype.isPositive=function(){return!this.sign},u.prototype.isPositive=function(){return this.value>0},a.prototype.isNegative=function(){return this.sign},u.prototype.isNegative=function(){return this.value<0},a.prototype.isUnit=function(){return!1},u.prototype.isUnit=function(){return 1===Math.abs(this.value)},a.prototype.isZero=function(){return!1},u.prototype.isZero=function(){return 0===this.value},a.prototype.isDivisibleBy=function(e){var t=H(e),r=t.value;return 0!==r&&(1===r||(2===r?this.isEven():this.mod(t).equals(o[0])))},u.prototype.isDivisibleBy=a.prototype.isDivisibleBy,a.prototype.isPrime=function(t){var r=G(this);if(r!==e)return r;var n=this.abs(),s=n.bitLength();if(s<=64)return I(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var o=Math.log(2)*s,a=Math.ceil(!0===t?2*Math.pow(o,2):o),u=[],l=0;l<a;l++)u.push(i(l+2));return I(n,u)},u.prototype.isPrime=a.prototype.isPrime,a.prototype.isProbablePrime=function(t){var r=G(this);if(r!==e)return r;for(var n=this.abs(),s=t===e?5:t,o=[],a=0;a<s;a++)o.push(i.randBetween(2,n.minus(2)));return I(n,o)},u.prototype.isProbablePrime=a.prototype.isProbablePrime,a.prototype.modInv=function(e){for(var t,r,n,s=i.zero,o=i.one,a=H(e),u=this.abs();!u.equals(i.zero);)t=a.divide(u),r=s,n=a,s=o,a=u,o=r.subtract(t.multiply(o)),u=n.subtract(t.multiply(u));if(!a.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===s.compare(0)&&(s=s.add(e)),this.isNegative()?s.negate():s},u.prototype.modInv=a.prototype.modInv,a.prototype.next=function(){var e=this.value;return this.sign?b(e,1,this.sign):new a(v(e,1),this.sign)},u.prototype.next=function(){var e=this.value;return e+1<r?new u(e+1):new a(n,!1)},a.prototype.prev=function(){var e=this.value;return this.sign?new a(v(e,1),!0):b(e,1,this.sign)},u.prototype.prev=function(){var e=this.value;return e-1>-r?new u(e-1):new a(n,!0)};for(var C=[1];2*C[C.length-1]<=t;)C.push(2*C[C.length-1]);var R=C.length,T=C[R-1];function _(e){return("number"==typeof e||"string"==typeof e)&&+Math.abs(e)<=t||e instanceof a&&e.value.length<=1}function L(e,t,r){t=H(t);for(var n=e.isNegative(),s=t.isNegative(),o=n?e.not():e,a=s?t.not():t,u=0,l=0,c=null,p=null,h=[];!o.isZero()||!a.isZero();)u=(c=O(o,T))[1].toJSNumber(),n&&(u=T-1-u),l=(p=O(a,T))[1].toJSNumber(),s&&(l=T-1-l),o=c[0],a=p[0],h.push(r(u,l));for(var f=0!==r(n?1:0,s?1:0)?i(-1):i(0),m=h.length-1;m>=0;m-=1)f=f.multiply(T).add(i(h[m]));return f}a.prototype.shiftLeft=function(e){if(!_(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;e>=R;)t=t.multiply(T),e-=R-1;return t.multiply(C[e])},u.prototype.shiftLeft=a.prototype.shiftLeft,a.prototype.shiftRight=function(e){var t;if(!_(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftLeft(-e);for(var r=this;e>=R;){if(r.isZero()||r.isNegative()&&r.isUnit())return r;r=(t=O(r,T))[1].isNegative()?t[0].prev():t[0],e-=R-1}return(t=O(r,C[e]))[1].isNegative()?t[0].prev():t[0]},u.prototype.shiftRight=a.prototype.shiftRight,a.prototype.not=function(){return this.negate().prev()},u.prototype.not=a.prototype.not,a.prototype.and=function(e){return L(this,e,(function(e,t){return e&t}))},u.prototype.and=a.prototype.and,a.prototype.or=function(e){return L(this,e,(function(e,t){return e|t}))},u.prototype.or=a.prototype.or,a.prototype.xor=function(e){return L(this,e,(function(e,t){return e^t}))},u.prototype.xor=a.prototype.xor;function q(e){var r=e.value,n="number"==typeof r?1073741824|r:r[0]+r[1]*t|1073758208;return n&-n}function F(e,t){if(t.compareTo(e)<=0){var r=F(e,t.square(t)),n=r.p,s=r.e,o=n.multiply(t);return o.compareTo(e)<=0?{p:o,e:2*s+1}:{p:n,e:2*s}}return{p:i(1),e:0}}function k(e,t){return e=H(e),t=H(t),e.greater(t)?e:t}function B(e,t){return e=H(e),t=H(t),e.lesser(t)?e:t}function D(e,t){if(e=H(e).abs(),t=H(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var r,n,i=o[1];e.isEven()&&t.isEven();)r=Math.min(q(e),q(t)),e=e.divide(r),t=t.divide(r),i=i.multiply(r);for(;e.isEven();)e=e.divide(q(e));do{for(;t.isEven();)t=t.divide(q(t));e.greater(t)&&(n=t,t=e,e=n),t=t.subtract(e)}while(!t.isZero());return i.isUnit()?e:e.multiply(i)}a.prototype.bitLength=function(){var e=this;return e.compareTo(i(0))<0&&(e=e.negate().subtract(i(1))),0===e.compareTo(i(0))?i(0):i(F(e,i(2)).e).add(i(1))},u.prototype.bitLength=a.prototype.bitLength;var U=function(e,t){for(var r=e.length,n=Math.abs(t),i=0;i<r;i++)if("-"!==(c=e[i].toLowerCase())&&/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=n){if("1"===c&&1===n)continue;throw new Error(c+" is not a valid digit in base "+t+".")}if(c.charCodeAt(0)-87>=n)throw new Error(c+" is not a valid digit in base "+t+".")}if(2<=t&&t<=36&&r<=s/Math.log(t)){var o=parseInt(e,t);if(isNaN(o))throw new Error(c+" is not a valid digit in base "+t+".");return new u(parseInt(e,t))}t=H(t);var a=[],l="-"===e[0];for(i=l?1:0;i<e.length;i++){var c,p=(c=e[i].toLowerCase()).charCodeAt(0);if(48<=p&&p<=57)a.push(H(c));else if(97<=p&&p<=122)a.push(H(c.charCodeAt(0)-87));else{if("<"!==c)throw new Error(c+" is not a valid character");var h=i;do{i++}while(">"!==e[i]);a.push(H(e.slice(h+1,i)))}}return j(a,t,l)};function j(e,t,r){var n,i=o[0],s=o[1];for(n=e.length-1;n>=0;n--)i=i.add(e[n].times(s)),s=s.times(t);return r?i.negate():i}function V(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function X(e,t){if((t=i(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var r=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return r.unshift([1]),{value:[].concat.apply([],r),isNegative:!1}}var n=!1;if(e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};for(var s,o=[],a=e;a.isNegative()||a.compareAbs(t)>=0;){s=a.divmod(t),a=s.quotient;var u=s.remainder;u.isNegative()&&(u=t.minus(u).abs(),a=a.next()),o.push(u.toJSNumber())}return o.push(a.toJSNumber()),{value:o.reverse(),isNegative:n}}function Z(e,t){var r=X(e,t);return(r.isNegative?"-":"")+r.value.map(V).join("")}function z(e){if(l(+e)){var t=+e;if(t===m(t))return new u(t);throw new Error("Invalid integer: "+e)}var r="-"===e[0];r&&(e=e.slice(1));var n=e.split(/e/i);if(n.length>2)throw new Error("Invalid integer: "+n.join("e"));if(2===n.length){var i=n[1];if("+"===i[0]&&(i=i.slice(1)),(i=+i)!==m(i)||!l(i))throw new Error("Invalid integer: "+i+" is not a valid exponent.");var s=n[0],o=s.indexOf(".");if(o>=0&&(i-=s.length-o-1,s=s.slice(0,o)+s.slice(o+1)),i<0)throw new Error("Cannot include negative exponent part for integers");e=s+=new Array(i+1).join("0")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);for(var c=[],p=e.length,f=p-7;p>0;)c.push(+e.slice(f,p)),(f-=7)<0&&(f=0),p-=7;return h(c),new a(c,r)}function H(e){return"number"==typeof e?function(e){if(l(e)){if(e!==m(e))throw new Error(e+" is not an integer.");return new u(e)}return z(e.toString())}(e):"string"==typeof e?z(e):e}a.prototype.toArray=function(e){return X(this,e)},u.prototype.toArray=function(e){return X(this,e)},a.prototype.toString=function(t){if(t===e&&(t=10),10!==t)return Z(this,t);for(var r,n=this.value,i=n.length,s=String(n[--i]);--i>=0;)r=String(n[i]),s+="0000000".slice(r.length)+r;return(this.sign?"-":"")+s},u.prototype.toString=function(t){return t===e&&(t=10),10!=t?Z(this,t):String(this.value)},a.prototype.toJSON=u.prototype.toJSON=function(){return this.toString()},a.prototype.valueOf=function(){return parseInt(this.toString(),10)},a.prototype.toJSNumber=a.prototype.valueOf,u.prototype.valueOf=function(){return this.value},u.prototype.toJSNumber=u.prototype.valueOf;for(var $=0;$<1e3;$++)o[$]=new u($),$>0&&(o[-$]=new u(-$));return o.one=o[1],o.zero=o[0],o.minusOne=o[-1],o.max=k,o.min=B,o.gcd=D,o.lcm=function(e,t){return e=H(e).abs(),t=H(t).abs(),e.divide(D(e,t)).multiply(t)},o.isInstance=function(e){return e instanceof a||e instanceof u},o.randBetween=function(e,r){var n=B(e=H(e),r=H(r)),i=k(e,r).subtract(n).add(1);if(i.isSmall)return n.add(Math.floor(Math.random()*i));for(var s=[],o=!0,l=i.value.length-1;l>=0;l--){var c=o?i.value[l]:t,h=m(Math.random()*c);s.unshift(h),h<c&&(o=!1)}return s=p(s),n.add("number"==typeof s?new u(s):new a(s,!1))},o.fromArray=function(e,t,r){return j(e.map(H),H(t||10),r)},o}(),e.hasOwnProperty("exports")&&(e.exports=i),void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n),i)},4583:(e,t,r)=>{"use strict";r.r(t),r.d(t,{text:()=>l});var n=r(275),i=r.n(n),s=r(1518),o=r(240),a=r(9569),u=r(5963);function l(e,t,r,n){var c="hash"===t,p=void 0,h=c?void 0:t,f="decimal"===h||"decimals"===h;function m(e){switch(t){case"decimals":case"decimal":return p=p||function(e){return!1},e.valueOf();case"recurring":p=p||function(e){return-1!==e.indexOf("'")};var r=e.toString();if(0===(v=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;var n=v[0].split("/"),a=!1,u=Number(n[0]);u<0&&(u=-u,a=!0);var l=Number(n[1]);l||(l=1);var c=10*(u-(S=Math.floor(u/l))*l);for(S=S.toString()+".";c&&c<l;)c*=10,S+="0";for(var h="",f=[],m=0;;){if(void 0!==f[c])return(a?"-":"")+(S+h.slice(0,f[c])+"'"+h.slice(f[c])+"'").replace("'0'","").replace(/\.$/,"");var g=Math.floor(c/l),d=c-g*l;f[c]=m,h+=g.toString(),m+=1,c=10*d}case"mixed":var v;if(p=p||function(e){return-1!==e.indexOf("/")},r=e.toString(),0===(v=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;n=v[0].split("/");var y=new(i())(n[0]),b=new(i())(n[1]);b.equals(0)&&(b=new(i())(1));var w=y.divmod(b),S=w.quotient,E=w.remainder,M="-"===n[0][0]||S.equals(0)||E.equals(0)?"":"+";return(S.equals(0)?"":S.toString())+M+(E.equals(0)?"":E.toString()+"/"+n[1]);case"scientific":return p=p||function(e){return!1},new s.default(e.valueOf()).toString(o.Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return p=p||function(e){return-1!==e.indexOf("/")},e.toString()}}if(f&&void 0===n&&(n=16),(0,a.isSymbol)(e)){var g="",d="",v="",y=e.group||r,b=e.value;if(!c){var w=m(e.multiplier);"-1"==w&&"-1"===String(e.multiplier)&&(v="-",w="1"),"1"!=w&&(g=w);var S=e.power?m(e.power):"";"1"!=S&&(d=(0,a.isSymbol)(S)?l(S,h):S)}switch(y){case u.Groups.N:g="";var E=n&&f?e.multiplier.toDecimal(n):m(e.multiplier);b="-1"==String(e.multiplier)?"1":E,d="";break;case u.Groups.PL:b=e.collectSymbols().map((function(e){var t=l(e,h,r,n);return"0"==t&&(t=""),t})).sort().join("+").replace(/\+\-/g,"-");break;case u.Groups.CP:b=e.collectSymbols().map((function(e){var t=l(e,h,r,n);return"0"==t&&(t=""),t})).sort().join("+").replace(/\+\-/g,"-");break;case u.Groups.CB:b=e.collectSymbols((function(e){var t=e.group;return(t===u.Groups.PL||t===u.Groups.CP)&&e.power.equals(1)&&e.multiplier.equals(1)?(0,a.inBrackets)(l(e,h)):l(e,h)})).join("*");break;case u.Groups.EX:var M=e.previousGroup,N=e.power.group;M===u.Groups.PL&&(b=e.collectSymbols(l,h).join("+").replace("+-","-")),M===u.Groups.N||M===u.Groups.S||M===u.Groups.FN||c||(b=(0,a.inBrackets)(b)),N!==u.Groups.CP&&N!==u.Groups.CB&&N!==u.Groups.PL&&"1"==e.power.multiplier.toString()||!d||(d=(0,a.inBrackets)(d))}y===u.Groups.FN&&(b=e.fname+(0,a.inBrackets)(e.args.map((function(e){return l(e,h)})).join(","))),d&&y!==u.Groups.EX&&p(d)&&(d=(0,a.inBrackets)(d)),((y===u.Groups.CP||y===u.Groups.PL)&&(g&&"1"!=g||"-"===v)||(y===u.Groups.CB||y===u.Groups.CP||y===u.Groups.PL)&&d&&"1"!=d||!c&&y===u.Groups.P&&-1==b||e.fname===o.Settings.PARENTHESIS)&&(b=(0,a.inBrackets)(b)),n&&("decimal"===t||"decimals"===t&&g)&&(g=(0,a.nround)(g,n));var P=v+g;if(g&&p(g)&&(P=(0,a.inBrackets)(P)),d<0&&(d=(0,a.inBrackets)(d)),g&&(P+="*"),d){if("e"===b&&o.Settings.E_TO_EXP)return P+"exp"+(0,a.inBrackets)(d);d=o.Settings.POWER_OPERATOR+d}y===u.Groups.EX&&"-"===b.charAt(0)&&(b=(0,a.inBrackets)(b));var x=P+b;return e.parens&&(x=(0,a.inBrackets)(x)),x+d}if((0,a.isVector)(e)){for(var O=e.elements.length,A=(P=[],0);A<O;A++)P.push(e.elements[A].text(t));return"["+P.join(",")+"]"}try{return e.toString()}catch(e){return""}}},6507:(e,t,r)=>{"use strict";r.r(t),r.d(t,{decompose_fn:()=>h,getCoeffs:()=>f,isFraction:()=>m,isNegative:()=>g,isNumericSymbol:()=>d,nroots:()=>v,scientificToDecimal:()=>y,separate:()=>b});var n=r(5963),i=r(6870),s=r(3116),o=r(7810),a=r(9569),u=r(240),l=r(6328),c=r(1548),p=r(131);function h(e,t,r){let a,u,l,c;if(t=String(t),e.group===n.Groups.CP){let r=(0,i.expand)(e.clone()).stripVar(t);a=(0,s.subtract)(e.clone(),r.clone()),c=r}else a=e.clone();return u=a.stripVar(t),l=(0,s.divide)(a.clone(),u.clone()),c=c||new o.Symbol(0),r?{a:u,x:l,ax:a,b:c}:[u,l,a,c]}function f(e,t,r){let n=[];e.each((function(e){let r,i;e.contains(t)?(r=e.stripVar(t),i=(0,s.divide)(e.clone(),r.clone()).power.toDecimal()):(r=e,i=0);let o=n[i];n[i]=o?(0,s.add)(o,r):r}),!0);for(let e=0;e<n.length;e++)n[e]||(n[e]=new o.Symbol(0));return n}function m(e){return(0,a.isSymbol)(e)?m(e.multiplier.toDecimal()):e%1!=0}function g(e){return(0,a.isSymbol)(e)&&(e=e.multiplier),e.lessThan(0)}function d(e){return e.group===n.Groups.N||e.group===n.Groups.P}function v(e){var t,r;if(e.group===n.Groups.FN&&""===e.fname?(t=o.Symbol.unwrapPARENS((0,p.parse)(e).toLinear()),r=(0,p.parse)(e.power)):e.group===n.Groups.P&&(t=(0,p.parse)(e.value),r=(0,p.parse)(e.power)),t&&r&&t.group===n.Groups.N&&r.group===n.Groups.N&&t.multiplier.isNegative()){let n=[];for(var i=o.Symbol.toPolarFormArray((0,a.evaluate)(e))[0],c=(0,s.arg)(t),h=r.multiplier.den.toString(),f=r.multiplier.num.toString(),m=0;m<h;m++){var g=(0,a.evaluate)((0,p.parse)((0,a.format)("(({0})+2*pi*({1}))/({2})",c,m,h))).multiplier.toDecimal();n.push((0,a.evaluate)((0,p.parse)((0,a.format)("(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",i,h,u.Settings.IMAGINARY,g,f))))}return l.Vector.fromArray(n)}if(e.isConstant(!0,!0)){var d=e.sign(),v=(c=(0,a.evaluate)(e.abs()),(0,s.sqrt)(c)),y=[v.clone(),v.negate()];d<0&&(y=y.map((function(e){return(0,s.multiply)(e,o.Symbol.imaginary())})))}else y=[(0,p.parse)(e)];return l.Vector.fromArray(y)}function y(e){return c.Math2.scientificToDecimal(e)}function b(e,t){e=(0,i.expand)(e),t=t||{};let r=function(e,r){t[e]||(t[e]=new o.Symbol(0)),t[e]=(0,s.add)(t[e],r.clone())};return e.each((function(e){if(e.isConstant("all"))r("constants",e);else if(e.group===n.Groups.S)r(e.value,e);else if(e.group!==n.Groups.FN||e.fname!==u.Settings.ABS&&""!==e.fname){if(e.group===n.Groups.EX||e.group===n.Groups.FN)throw new Error("Unable to separate. Term cannot be a function!");r((0,a.isSymbol)(e)?e.variables().join(" "):"",e)}else b(e.args[0])})),t}},8361:(e,t,r)=>{"use strict";r.d(t,{Z:()=>c});var n=r(7810),i=r(240),s=r(3776),o=r.n(s),a=(r(1548),r(9569),r(3116)),u=r(6870),l=r(131);const c={prec:void 0,cos:function(e,t){var r,i;return r=(0,l.parse)(Math.cos(e)*Math.cosh(t)),i=(0,l.parse)(Math.sin(e)*Math.sinh(t)),(0,a.subtract)(r,(0,a.multiply)(i,n.Symbol.imaginary()))},sin:function(e,t){var r,i;return r=(0,l.parse)(Math.sin(e)*Math.cosh(t)),i=(0,l.parse)(Math.cos(e)*Math.sinh(t)),(0,a.subtract)(r,(0,a.multiply)(i,n.Symbol.imaginary()))},tan:function(e,t){var r,i;return r=(0,l.parse)(Math.sin(2*e)/(Math.cos(2*e)+Math.cosh(2*t))),i=(0,l.parse)(Math.sinh(2*t)/(Math.cos(2*e)+Math.cosh(2*t))),(0,a.add)(r,(0,a.multiply)(i,n.Symbol.imaginary()))},sec:function(e,t){var r=this.removeDen(this.cos(e,t));return(0,a.subtract)(r[0],(0,a.multiply)(r[1],n.Symbol.imaginary()))},csc:function(e,t){var r=this.removeDen(this.sin(e,t));return(0,a.add)(r[0],(0,a.multiply)(r[1],n.Symbol.imaginary()))},cot:function(e,t){var r=this.removeDen(this.tan(e,t));return(0,a.subtract)(r[0],(0,a.multiply)(r[1],n.Symbol.imaginary()))},acos:function(e,t){var r,i,s,o,l,c;return r=this.fromArray([e,t]),c=(0,a.pow)(r.clone(),new n.Symbol(2)),i=(0,u.expand)(c),s=(0,a.multiply)((0,a.sqrt)((0,a.subtract)(new n.Symbol(1),i)),n.Symbol.imaginary()),o=(0,u.expand)((0,a.add)(r.clone(),s)),l=(0,a.log)(o),(0,u.expand)((0,a.multiply)(n.Symbol.imaginary().negate(),l))},asin:function(e,t){return(0,a.subtract)((0,l.parse)("pi/2"),this.acos(e,t))},atan:function(e,t){return e.equals(0)&&(t.equals(1)||t.equals(-1))?(0,l.parse)(`${n.Symbol.infinity()}*${i.Settings.IMAGINARY}*${t}`):(p=c.fromArray([e,t]),r=(0,u.expand)((0,a.multiply)(n.Symbol.imaginary(),p.clone())),s=(0,a.log)((0,u.expand)((0,a.subtract)(new n.Symbol(1),r.clone()))),o=(0,a.log)((0,u.expand)((0,a.add)(new n.Symbol(1),r.clone()))),(0,u.expand)((0,a.multiply)((0,a.divide)(n.Symbol.imaginary(),new n.Symbol(2)),(0,a.subtract)(s,o))));var r,s,o,p},asec:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.acos.apply(this,r)},acsc:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.asin.apply(this,r)},acot:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.atan.apply(this,r)},cosh:function(e,t){var r,i;return r=(0,l.parse)(Math.cosh(e)*Math.cos(t)),i=(0,l.parse)(Math.sinh(e)*Math.sin(t)),(0,a.add)(r,(0,a.multiply)(i,n.Symbol.imaginary()))},sinh:function(e,t){var r,i;return r=(0,l.parse)(Math.sinh(e)*Math.cos(t)),i=(0,l.parse)(Math.cosh(e)*Math.sin(t)),(0,a.add)(r,(0,a.multiply)(i,n.Symbol.imaginary()))},tanh:function(e,t){var r,i;return r=(0,l.parse)(Math.sinh(2*e)/(Math.cos(2*t)+Math.cosh(2*e))),i=(0,l.parse)(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*e))),(0,a.subtract)(r,(0,a.multiply)(i,n.Symbol.imaginary()))},sech:function(e,t){var r=this.removeDen(this.cosh(e,t));return(0,a.subtract)(r[0],(0,a.multiply)(r[1],n.Symbol.imaginary()))},csch:function(e,t){var r=this.removeDen(this.sinh(e,t));return(0,a.subtract)(r[0],(0,a.multiply)(r[1],n.Symbol.imaginary()))},coth:function(e,t){var r=this.removeDen(this.tanh(e,t));return(0,a.add)(r[0],(0,a.multiply)(r[1],n.Symbol.imaginary()))},acosh:function(e,t){var r,i,s;return s=this.fromArray([e,t]),r=(0,a.sqrt)((0,a.add)(s.clone(),new n.Symbol(1))),i=(0,a.sqrt)((0,a.subtract)(s.clone(),new n.Symbol(1))),(0,u.expand)((0,a.log)((0,a.add)(s,(0,u.expand)((0,a.multiply)(r,i)))))},asinh:function(e,t){var r,i;return i=this.fromArray([e,t]),r=(0,a.sqrt)((0,a.add)(new n.Symbol(1),(0,u.expand)((0,a.pow)(i.clone(),new n.Symbol(2))))),(0,u.expand)((0,a.log)((0,a.add)(i,r)))},atanh:function(e,t){var r,i,s;return s=this.fromArray([e,t]),r=(0,a.log)((0,a.add)(s.clone(),new n.Symbol(1))),i=(0,a.log)((0,a.subtract)(new n.Symbol(1),s)),(0,u.expand)((0,a.divide)((0,a.subtract)(r,i),new n.Symbol(2)))},asech:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.acosh.apply(this,r)},acsch:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.asinh.apply(this,r)},acoth:function(e,t){var r=this.removeDen([e,t]);return r[1].negate(),this.atanh.apply(this,r)},sqrt:function(e){var t,r,i,s,o;return t=e.realpart(),r=e.imagpart(),i=n.Symbol.hyp(t,r),s=(0,a.add)(t.clone(),i),o=(0,a.sqrt)((0,a.multiply)(new n.Symbol(2),s.clone())),(0,a.add)((0,a.divide)(s.clone(),o.clone()),(0,a.multiply)((0,a.divide)(r,o),n.Symbol.imaginary()))},log:function(e,t){var r,s,u;return r=(0,a.log)(n.Symbol.hyp(e,t)),u=i.Settings.USE_BIG?(0,n.Symbol)(o().atan2(t.multiplier.toDecimal(),e.multiplier.toDecimal())):Math.atan2(t,e),s=(0,l.parse)(u),(0,a.add)(r,(0,a.multiply)(n.Symbol.imaginary(),s))},erf:(e,t)=>(0,n.symfunction)("erf",[e]),removeDen:function(e){var t,r,n;return Array.isArray(e)?(r=e[0],n=e[1]):(r=e.realpart(),n=e.imagpart()),t=Math.pow(r,2)+Math.pow(n,2),[(0,l.parse)(r/t),(0,l.parse)(n/t)]},fromArray:function(e){return(0,a.add)(e[0],(0,a.multiply)(n.Symbol.imaginary(),e[1]))},evaluate:function(e,t){var r,i,s;if(s=e.power.sign(),e.power=e.power.abs(),e.power.greaterThan(1)&&(e=(0,u.expand)(e)),s<0){var o=this.removeDen(e);r=o[0],i=o[1]}else r=e.realpart(),i=e.imagpart();return r.isConstant("all")&&i.isConstant("all")?this[t].call(this,r,i):(0,n.symfunction)(t,[e])}}},3920:(e,t,r)=>{"use strict";r.r(t),r.d(t,{arg:()=>s});var n=r(7810),i=r(131);function s(e){var t=e.realpart(),r=e.imagpart();return t.isConstant()&&r.isConstant()?r.equals(0)&&t.equals(-1)?(0,i.parse)("pi"):r.equals(1)&&t.equals(0)?(0,i.parse)("pi/2"):r.equals(1)&&t.equals(1)?(0,i.parse)("pi/4"):new n.Symbol(Math.atan2(r,t)):(0,n.symfunction)("atan2",[r,t])}},3983:(e,t,r)=>{"use strict";r.r(t),r.d(t,{conjugate:()=>s});var n=r(7810),i=r(3116);function s(e){var t=e.realpart(),r=e.imagpart();return(0,i.add)(t,(0,i.multiply)(r.negate(),n.Symbol.imaginary()))}},4954:(e,t,r)=>{"use strict";function n(e){return e.imagpart()}r.r(t),r.d(t,{imagpart:()=>n})},1220:(e,t,r)=>{"use strict";r.r(t),r.d(t,{polarform:()=>u});var n=r(7810),i=r(9569),s=r(240),o=r(3116),a=r(131);function u(e){var t,r,u,l;return l=(t=n.Symbol.toPolarFormArray(e))[1],r=t[0],u=(0,a.parse)((0,i.format)("e^({0}*({1}))",s.Settings.IMAGINARY,l)),(0,o.multiply)(r,u)}},6801:(e,t,r)=>{"use strict";function n(e){return e.realpart()}r.r(t),r.d(t,{realpart:()=>n})},5635:(e,t,r)=>{"use strict";r.r(t),r.d(t,{rectform:()=>u});var n=r(7810),i=r(3116),s=r(7460),o=r(9569),a=r(131);function u(e){var t=e.clone();try{var r,u,l,c,p;return r=(0,o.decompose_fn)(e,"e",!0),u=(0,i.divide)(r.x.power,n.Symbol.imaginary()),l=(0,a.evaluate)(s.b.tan(u)),(0,i.pow)(r.a,new n.Symbol(2)),c=l.getDenom(!0),p=l.getNum(),n.Symbol.hyp(p,c).equals(r.a)?(0,i.add)(c,(0,i.multiply)(n.Symbol.imaginary(),p)):t}catch(e){return t}}},7814:(e,t,r)=>{"use strict";r.r(t),r.d(t,{abs:()=>p});var n=r(7810),i=r(9202),s=r(9569),o=r(1548),a=r(5037),u=r(240),l=r(3116),c=r(131);function p(e){if(e.isInfinity)return n.Symbol.infinity();if(e.multiplier.lessThan(0)&&e.multiplier.negate(),e.isImaginary()){var t=e.realpart(),r=e.imagpart();if(t.isConstant()&&r.isConstant())return(0,l.sqrt)((0,i.add)((0,l.pow)(t,new n.Symbol(2)),(0,l.pow)(r,new n.Symbol(2))))}else if((0,s.isNumericSymbol)(e)||(0,s.even)(e.power))return e;if(e.isComposite()){var p=[];e.each((function(e){p.push(e.multiplier)})),o.Math2.QGCD.apply(null,p).lessThan(0)&&(e.multiplier=e.multiplier.multiply(new a.Frac(-1)),e.distributeMultiplier())}var h=(0,c.parse)(e.multiplier);return e.toUnitMultiplier(),(0,l.multiply)(h,(0,n.symfunction)(u.Settings.ABS,[e]))}},8733:(e,t,r)=>{"use strict";r.r(t),r.d(t,{cbrt:()=>u});var n=r(7810),i=r(9569),s=r(3116),o=r(5963),a=r(131);function u(e){if(!e.isConstant(!0)){var t,r=e.power/3,l=(0,s.pow)((0,a.parse)(e.multiplier),new n.Symbol(1/3)),c=e.toUnitMultiplier();return(0,i.isInt)(r)?t=(0,s.pow)(c.toLinear(),(0,a.parse)(r)):c.group===o.Groups.CB?(t=new n.Symbol(1),c.each((function(e){t=(0,s.multiply)(t,u(e))}))):t=(0,n.symfunction)("cbrt",[c]),(0,s.multiply)(l,t)}return(0,s.nthroot)(e,new n.Symbol(3))}},2379:(e,t,r)=>{"use strict";r.r(t),r.d(t,{continued_fraction:()=>a});var n=r(1548),i=r(6328),s=r(7810),o=r(131);function a(e,t){var r=(0,o.evaluate)(e);if(r.isConstant()){var a=n.Math2.continuedFraction(r,t),u=i.Vector.fromArray(a.fractions.map((function(e){return new s.Symbol(e)})));return i.Vector.fromArray([new s.Symbol(a.sign),new s.Symbol(a.whole),u])}return(0,s.symfunction)("continued_fraction",arguments)}},4513:(e,t,r)=>{"use strict";r.r(t),r.d(t,{degrees:()=>s});var n=r(9569),i=r(131);function s(e){return(0,i.parse)((0,n.format)("({0})*180/pi",e))}},3541:(e,t,r)=>{"use strict";r.r(t),r.d(t,{erf:()=>o});var n=r(8361),i=r(7810),s=r(131);function o(e){var t=(0,s.evaluate)(e);return t.isConstant()?Math2.erf(t):t.isImaginary()?n.Z.erf(e):(0,i.symfunction)("erf",arguments)}},3319:(e,t,r)=>{"use strict";r.r(t),r.d(t,{exp:()=>u});var n=r(240),i=r(7810),s=r(9569),o=r(3116),a=r(131);function u(e){return e.fname===n.Settings.LOG&&e.isLinear()?(0,o.pow)(e.args[0],i.Symbol.create(e.multiplier)):(0,a.parse)((0,s.format)("e^({0})",e))}},6870:(e,t,r)=>{"use strict";r.r(t),r.d(t,{expand:()=>u,expandall:()=>l});var n=r(9569),i=r(7810),s=r(5963),o=r(3116),a=r(131);function u(e,t){if(Array.isArray(e))return e.map((function(e){return u(e,t)}));if(t=t||{},e.group===s.Groups.FN&&""===e.fname){var r=u(e.args[0],t),l=u((0,o.pow)(r,(0,a.parse)(e.power)),t);return(0,o.multiply)((0,a.parse)(e.multiplier),l).distributeMultiplier()}if(-1!==[s.Groups.N,s.Groups.P,s.Groups.S].indexOf(e.group))return e;var p=e.clone();try{var h=e.multiplier.toString(),f=Number(e.power),m=e;if(e.isComposite()&&(0,n.isInt)(e.power)&&e.power>0){var g=f-1;r=new i.Symbol(0),e.each((function(e){r=(0,o.add)(r,u((0,a.parse)(e),t))}));for(var d=(0,a.parse)(r),v=0;v<g;v++)d=c(d,r,t);m=(0,o.multiply)((0,a.parse)(h),d).distributeMultiplier()}else if(e.group===s.Groups.FN&&!0===t.expand_functions){var y=[];e.args.forEach((function(e){y.push(u(e,t))})),m=(0,o.pow)((0,i.symfunction)(e.fname,y),(0,a.parse)(e.power)),m=(0,o.multiply)(m,(0,a.parse)(e.multiplier))}else if(e.isComposite()&&(0,n.isInt)(e.power)&&e.power<0&&!0===t.expand_denominator)e=e.invert(),(m=u(e,t)).invert();else if(e.group===s.Groups.CB){var b=function(e){switch(e.group){case s.Groups.CP:return 0;case s.Groups.PL:return 1;case s.Groups.CB:return 2;case s.Groups.FN:return 3;default:return 4}},w=e.collectSymbols().sort((function(e,t){return b(t)-b(e)})).map((function(e){return u((0,o.pow)(e,(0,a.parse)(f)),t)}));(r=w.pop()).isComposite()&&r.isLinear()?(w.forEach((function(e){r=c(r,e,t)})),r.isComposite()?(r.power>1&&(r=u((0,o.pow)(r,(0,a.parse)(r.power)),t)),m=(0,o.multiply)((0,a.parse)(h),r).distributeMultiplier()):m=r):(m=r,w.forEach((function(e){m=(0,o.multiply)(m,e)})),m=(0,o.multiply)(m,(0,a.parse)(h)).distributeMultiplier()),m.group===s.Groups.CB&&(m=(0,a.parse)(m))}else m=e;return m}catch(e){return p}}function l(e,t){return u(e,t=t||{expand_denominator:!0,expand_functions:!0})}function c(e,t,r){(t.isComposite()&&!e.isComposite()||t.isLinear()&&!e.isLinear())&&([e,t]=[t,e]);var n=new i.Symbol(0);return e.isLinear()?e.each((function(e){if(t.isComposite())t.isLinear()?t.each((function(t){var i=(0,o.multiply)((0,a.parse)(e),(0,a.parse)(t)),s=u((0,a.parse)(i),r);n=(0,o.add)(n,s)}),!0):n=(0,o.add)(n,(0,o.multiply)(e,(0,a.parse)(t)));else{var i=(0,o.multiply)((0,a.parse)(e),(0,a.parse)(t));n=(0,o.add)(n,u(i,r))}}),!0):n=(0,o.multiply)(e,t),n}},6109:(e,t,r)=>{"use strict";r.r(t),r.d(t,{factorial:()=>f});var n=r(6328),i=r(4013),s=r(240),o=r(9569),a=r(1548),u=r(5037),l=r(9202),c=r(7810),p=r(3116),h=r(131);function f(e){var t;if((0,o.isVector)(e)){var r=new n.Vector;return e.each((function(e,t){r.set(t-1,f(e))})),r}if((0,o.isMatrix)(e)){var m=new i.Matrix;return e.each((function(e,t,r){m.set(t,r,f(e))})),m}if(s.Settings.PARSE2NUMBER&&e.isConstant())return t=(0,o.isInt)(e)?a.Math2.bigfactorial(e):a.Math2.gamma(e.multiplier.add(new u.Frac(1)).toDecimal()),(0,c.bigConvert)(t);if(e.isConstant()&&e.getDenom().equals(2)){var g,d,v,y,b=e.getNum();return e.multiplier.isNegative()?(y=(0,p.subtract)(b.negate(),new c.Symbol(1)).multiplier.divide(new u.Frac(2)),g=(0,p.pow)(new c.Symbol(-4),new c.Symbol(y)).multiplier.multiply(a.Math2.bigfactorial(y)),d=a.Math2.bigfactorial(new u.Frac(2).multiply(y))):(y=(0,l.add)(b,new c.Symbol(1)).multiplier.divide(new u.Frac(2)),g=a.Math2.bigfactorial(new u.Frac(2).multiply(y)),d=(0,p.pow)(new c.Symbol(4),new c.Symbol(y)).multiplier.multiply(a.Math2.bigfactorial(y))),v=g.divide(d),(0,p.multiply)((0,h.parse)("sqrt(pi)"),new c.Symbol(v))}return(0,c.symfunction)(s.Settings.FACTORIAL,[e])}},6276:(e,t,r)=>{"use strict";r.r(t),r.d(t,{log:()=>h});var n=r(7810),i=r(240),s=r(1789),o=r(8361),a=r(5963),u=r(9202),l=r(3116),c=r(9569),p=r(131);function h(e,t){if(e.equals(1))return new n.Symbol(0);var r;if(e.fname===i.Settings.SQRT&&e.multiplier.equals(1))return r=(0,l.divide)(h(e.args[0]),new n.Symbol(2)),e.power.sign()<0&&r.negate(),r;if(e.equals(0))throw new s.UndefinedError(i.Settings.LOG+"(0) is undefined!");if(e.isImaginary())return o.Z.evaluate(e,i.Settings.LOG);if(e.isConstant()&&void 0!==t&&t.isConstant()){var f=Math.log(e),m=Math.log(t);r=new n.Symbol(f/m)}else if(e.group===a.Groups.EX&&e.power.multiplier.lessThan(0)||"-1"===e.power.toString())e.power.negate(),r=h(e).negate();else if("e"===e.value&&e.multiplier.equals(1)){var g=e.power;r=(0,c.isSymbol)(g)?g:new n.Symbol(g)}else if(e.group===a.Groups.FN&&"exp"===e.fname){var d=e.args[0];r=e.multiplier.equals(1)?(0,l.multiply)(d,new n.Symbol(e.power)):(0,n.symfunction)(i.Settings.LOG,[e])}else if(i.Settings.PARSE2NUMBER&&(0,c.isNumericSymbol)(e)){var v;(e=(0,p.parse)(e)).multiplier.lessThan(0)&&(e.negate(),v=(0,l.multiply)(new n.Symbol(Math.PI),new n.Symbol("i"))),r=new n.Symbol(Math.log(e.multiplier.toDecimal())),v&&(r=(0,u.add)(r,v))}else e.power.equals(1)||e.contains("e")||(d=e.group===a.Groups.EX?e.power:new n.Symbol(e.power),e.toLinear()),r=arguments.length>1&&allSame(arguments)?new n.Symbol(1):(0,n.symfunction)(i.Settings.LOG,arguments),d&&(r=(0,l.multiply)(d,r));return r}},2612:(e,t,r)=>{"use strict";r.r(t),r.d(t,{max:()=>a});var n=r(9569),i=r(7810),s=r(240),o=r(9894);function a(){let e=[].slice.call(arguments);return(0,n.allSame)(e)?e[0]:(0,n.allNumbers)(e)?new i.Symbol(Math.max.apply(null,e)):s.Settings.SYMBOLIC_MIN_MAX&&(0,n.allConstants)(e)?(0,o.symMinMax)("max",e):(0,i.symfunction)("max",e)}},9894:(e,t,r)=>{"use strict";r.r(t),r.d(t,{min:()=>a,symMinMax:()=>u});var n=r(9569),i=r(7810),s=r(240),o=r(131);function a(){let e=[].slice.call(arguments);return(0,n.allSame)(e)?e[0]:(0,n.allNumbers)(e)?new i.Symbol(Math.min.apply(null,e)):s.Settings.SYMBOLIC_MIN_MAX&&(0,n.allConstants)(e)?u("min",e):(0,i.symfunction)("min",e)}function u(e,t){let r,n,i;for(t.map((function(e){e.numVal=(0,o.evaluate)(e).multiplier}));;){if(r=t.length,r<2)return t[0];n=t.pop(),i=t[r-2],("min"===e?n.numVal<i.numVal:n.numVal>i.numVal)&&(t.pop(),t.push(n))}}},7248:(e,t,r)=>{"use strict";r.r(t),r.d(t,{mod:()=>o});var n=r(7810),i=r(9569),s=r(3116);function o(e,t){if(e.isConstant()&&t.isConstant()){var r=new n.Symbol(1);return r.multiplier=r.multiplier.multiply(e.multiplier.mod(t.multiplier)),r}var o=(0,s.divide)(e.clone(),t.clone());return(0,i.isInt)(o)?new n.Symbol(0):(0,n.symfunction)("mod",[e,t])}},8661:(e,t,r)=>{"use strict";r.r(t),r.d(t,{nthroot:()=>h});var n=r(9569),i=r(7814),s=r(5037),o=r(1548),a=r(7810),u=r(1789),l=r(3116),c=r(5963),p=r(131);function h(e,t,r,h){if((t=(0,p.evaluate)((0,p.parse)(t))).equals(0))throw new u.UndefinedError("Unable to calculate nthroots of zero");if(e<0&&(0,n.even)(t))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!e.isConstant(!0))return(0,a.symfunction)("nthroot",arguments);e.group!==c.Groups.N&&(e=(0,p.evaluate)(e)),void 0===h&&(h=!0),r=r||25;var f,m,g=e.sign();return g<0&&(e=(0,i.abs)(e)),(0,n.isInt)(e)&&t.isConstant()?(f=e<0x10000000000000000?s.Frac.create(Math.pow(e,1/t)):o.Math2.nthroot(e,t),h&&(m=new a.Symbol(f)),m=new a.Symbol(f.toDecimal(r)),(0,l.multiply)(new a.Symbol(g),m)):void 0}},5190:(e,t,r)=>{"use strict";r.r(t),r.d(t,{parens:()=>s});var n=r(240),i=r(7810);function s(e){return n.Settings.PARSE2NUMBER?e:(0,i.symfunction)("parens",[e])}},7648:(e,t,r)=>{"use strict";r.r(t),r.d(t,{pfactor:()=>l});var n=r(7810),i=r(9569),s=r(1548),o=r(5037),a=r(3116),u=r(131);function l(e){if(e.greaterThan(9999999999998891e26)||e.equals(-1))return e;if(e.equals(Math.PI))return new n.Symbol(Math.PI);if((e=(0,u.evaluate)(e.clone())).isConstant()){var t=new n.Symbol(1),r=e.toString();if((0,i.isInt)(r)){var c=s.Math2.ifactor(r);for(var p in c){var h=c[p];t=(0,a.multiply)(t,(0,n.symfunction)("parens",[new n.Symbol(p).setPower(new o.Frac(h))]))}}else{var f=l(new n.Symbol(e.multiplier.num)),m=l(new n.Symbol(e.multiplier.den));t=(0,a.multiply)((0,n.symfunction)("parens",[f]),(0,n.symfunction)("parens",[m]).invert())}}else t=(0,n.symfunction)("pfactor",arguments);return t}},727:(e,t,r)=>{"use strict";r.r(t),r.d(t,{radians:()=>s});var n=r(9569),i=r(131);function s(e){return(0,i.parse)((0,n.format)("({0})*pi/180",e))}},981:(e,t,r)=>{"use strict";r.r(t),r.d(t,{rationalize:()=>a});var n=r(7810),i=r(6870),s=r(9202),o=r(3116);function a(e){if(e.isComposite()){var t,r,a,u,l,c,p,h,f=new n.Symbol(0);return e.each((function(e){t=e.getNum(),r=e.getDenom(),a=f.getNum(),u=f.getDenom(),l=(0,o.multiply)(r,a),c=(0,o.multiply)(t,u),p=(0,i.expand)((0,s.add)(l,c)),h=(0,o.multiply)(u,r),f=(0,o.divide)(p,h)}),!0),f}return e}},6925:(e,t,r)=>{"use strict";r.r(t),r.d(t,{round:()=>a});var n=r(7814),i=r(7810),s=r(9569),o=r(3116);function a(e,t){var r,a,u,l,c=t&&t.isConstant()||void 0===t;return e.isConstant()&&c?(r=e,t&&t.lessThan(0)&&(t=(0,n.abs)(t),r=(a=Number(e).toExponential().toString().split("e"))[0],u=a[1]),l=new i.Symbol((0,s.nround)(r,Number(t||0))),(0,o.multiply)(l,(0,o.pow)(new i.Symbol(10),new i.Symbol(u||0)))):(0,i.symfunction)("round",arguments)}},9963:(e,t,r)=>{"use strict";function n(e,t){return e.scientific=t||10,e}r.r(t),r.d(t,{scientific:()=>n})},8796:(e,t,r)=>{"use strict";r.r(t),r.d(t,{sign:()=>s});var n=r(7810),i=r(131);function s(e){return e.isConstant(!0)?new n.Symbol(Math.sign((0,i.evaluate)(e))):(0,n.symfunction)("sign",arguments)}},1802:(e,t,r)=>{"use strict";r.r(t),r.d(t,{sinc:()=>u});var n=r(240),i=r(7810),s=r(1548),o=r(9569),a=r(131);function u(e){return n.Settings.PARSE2NUMBER?e.isConstant()?new i.Symbol(s.Math2.sinc(e)):(0,a.parse)((0,o.format)("sin({0})/({0})",e)):(0,i.symfunction)("sinc",[e])}},8890:(e,t,r)=>{"use strict";r.r(t),r.d(t,{sqrt:()=>v});var n=r(7810),i=r(5963),s=r(240),o=r(3776),a=r.n(o),u=r(8361),l=r(4761),c=r(5037),p=r(9569),h=r(1548),f=r(7648),m=r(4998),g=r(1014),d=r(131);function v(e){if((0,p.isSymbol)(e)||(e=(0,d.parse)(e)),e.group===i.Groups.EX)return(0,n.symfunction)(s.Settings.SQRT,[e]);""===e.fname&&e.power.equals(1)&&(e=e.args[0]);var t=e.multiplier.sign()<0;if(s.Settings.PARSE2NUMBER){if(e.isConstant()&&!t)return new n.Symbol(a().sqrt(e.multiplier.toDecimal()));if(e.isImaginary())return u.Z.sqrt(e);if(e.group===i.Groups.S)return(0,n.symfunction)("sqrt",[e])}var r,o,y=e.isConstant();if(e.group===i.Groups.CB&&e.isLinear()){var b=v(new n.Symbol(e.multiplier));for(var w in e.symbols){var S=e.symbols[w];b=(0,l.multiply)(b,v(S))}o=b}else if(e.fname===s.Settings.SQRT){w=e.args[0];var E=e.multiplier;w.setPower(e.power.multiply(new c.Frac(.25))),o=w,E.equals(1)||(o=(0,l.multiply)(v((0,d.parse)(E)),o))}else if(e.power.isInteger())if(e.multiplier<0&&e.group===i.Groups.S){var M=(0,d.parse)(e.multiplier).negate(),N=(0,d.parse)(e).toUnitMultiplier().negate();o=(0,l.multiply)((0,n.symfunction)(s.Settings.SQRT,[N]),v(M))}else{var P=e.power.sign();e.power=e.power.abs(),y&&e.multiplier.lessThan(0)&&(r=n.Symbol.imaginary(),e.multiplier=e.multiplier.abs());var x=e.multiplier.toDecimal(),O=Math.abs(x),A=Math.sqrt(O);if((0,p.isInt)(A))b=new n.Symbol(A);else if((0,p.isInt)(x)){var G=h.Math2.ifactor(x),I=1;for(var S in G){var C=(F=G[S])-F%2;if(C){var R=Math.pow(S,C);I*=Math.pow(S,C/2),x/=R}}b=(0,l.multiply)((0,n.symfunction)(s.Settings.SQRT,[new n.Symbol(x)]),new n.Symbol(I))}else{for(var T=[new n.Symbol(e.multiplier.num),new n.Symbol(e.multiplier.den)],_=[new n.Symbol(1),new n.Symbol(1)],L=[new n.Symbol(1),new n.Symbol(1)],q=0;q<2;q++){var F=T[q];(0,f.pfactor)(F).each((function(e){var t=(e=n.Symbol.unwrapPARENS(e)).clone().toLinear(),r=Number(e.power),i=r%2,s=(r-i)/2;_[q]=(0,l.multiply)(_[q],(0,m.pow)(t,new n.Symbol(s))),L[q]=(0,l.multiply)(L[q],v((0,m.pow)(t,new n.Symbol(i))))}))}b=(0,g.divide)((0,l.multiply)(_[0],L[0]),(0,l.multiply)(_[1],L[1]))}o=(e=e.toUnitMultiplier(!0)).isOne()?e:(0,p.even)(e.power.toString())?(0,m.pow)(e.clone(),new n.Symbol(.5)):(0,n.symfunction)(s.Settings.SQRT,[e]),P<0&&o.power.negate(),b&&(o=(0,l.multiply)(b,o)),r&&(o=(0,l.multiply)(r,o))}else e.setPower(e.power.multiply(new c.Frac(.5))),o=e;return t&&s.Settings.PARSE2NUMBER?(0,d.parse)(o):o}},5843:(e,t,r)=>{"use strict";r.r(t),r.d(t,{is_in:()=>s});var n=r(9569),i=r(7810);function s(e,t){if((0,n.isMatrix)(e)){for(var r=0,s=e.rows();r<s;r++)for(var o=0,a=e.cols();o<a;o++)if(e.elements[r][o].equals(t))return new i.Symbol(1)}else if(e.elements)for(r=0,s=e.elements.length;r<s;r++)if(e.elements[r].equals(t))return new i.Symbol(1);return new i.Symbol(0)}},2900:(e,t,r)=>{"use strict";r.r(t),r.d(t,{determinant:()=>i});var n=r(9569);function i(e){return(0,n.isMatrix)(e)?e.determinant():e}},9467:(e,t,r)=>{"use strict";r.r(t),r.d(t,{imatrix:()=>i});var n=r(4013);function i(e){return n.Matrix.identity(e)}},4396:(e,t,r)=>{"use strict";r.r(t),r.d(t,{invert:()=>s});var n=r(9569),i=r(1789);function s(e){if((0,n.isMatrix)(e))return e.invert();(0,i.err)("invert expects a matrix")}},8990:(e,t,r)=>{"use strict";r.r(t),r.d(t,{matget:()=>i});var n=r(7810);function i(e,t,r){return t.isConstant()&&r.isConstant()?e.elements[t][r]:(0,n.symfunction)("matget",arguments)}},6604:(e,t,r)=>{"use strict";r.r(t),r.d(t,{matgetcol:()=>s});var n=r(7810),i=r(4013);function s(e,t){if(!t.isConstant())return(0,n.symfunction)("matgetcol",arguments);t=Number(t);var r=i.Matrix.fromArray([]);return e.each((function(e,n,i){i===t&&r.elements.push([e.clone()])})),r}},9625:(e,t,r)=>{"use strict";r.r(t),r.d(t,{matgetrow:()=>s});var n=r(4013),i=r(7810);function s(e,t){return t.isConstant()?new n.Matrix(e.elements[t]):(0,i.symfunction)("matgetrow",arguments)}},3584:(e,t,r)=>{"use strict";r.r(t),r.d(t,{matrix:()=>i});var n=r(4013);function i(){return n.Matrix.fromArray(arguments)}},1741:(e,t,r)=>{"use strict";function n(e,t,r,n){return e.elements[t][r]=n,e}r.r(t),r.d(t,{matset:()=>n})},2186:(e,t,r)=>{"use strict";r.r(t),r.d(t,{matsetcol:()=>s});var n=r(7810),i=r(1789);function s(e,t,r){if(!t.isConstant())return(0,n.symfunction)("matsetcol",arguments);if(t=Number(t),e.rows()!==r.elements.length)throw new i.DimensionError("Matrix columns must match number of columns!");return r.each((function(r,n){e.set(n-1,t,r.elements[0].clone())})),e}},9751:(e,t,r)=>{"use strict";r.r(t),r.d(t,{matsetrow:()=>s});var n=r(7810),i=r(1789);function s(e,t,r){if(!t.isConstant())return(0,n.symfunction)("matsetrow",arguments);if(e.elements[t].length!==r.elements.length)throw new i.DimensionError("Matrix row must match row dimensions!");var s=e.clone();return s.elements[t]=r.clone().elements,s}},5606:(e,t,r)=>{"use strict";r.r(t),r.d(t,{transpose:()=>s});var n=r(9569),i=r(1789);function s(e){if((0,n.isMatrix)(e))return e.transpose();(0,i.err)("function transpose expects a matrix")}},4072:(e,t,r)=>{"use strict";r.r(t),r.d(t,{size:()=>a});var n=r(9569),i=r(7810),s=r(7898),o=r(1789);function a(e){var t;return(0,n.isMatrix)(e)?t=[new i.Symbol(e.cols()),new i.Symbol(e.rows())]:(0,n.isVector)(e)||(0,s.D)(e)?t=new i.Symbol(e.elements.length):(0,o.err)("size expects a matrix or a vector"),t}},4385:(e,t,r)=>{"use strict";r.r(t),r.d(t,{cross:()=>s});var n=r(1789),i=r(9569);function s(e,t){if((0,i.isVector)(e)&&(0,i.isVector)(t))return e.cross(t);(0,n.err)("function cross expects 2 vectors")}},7621:(e,t,r)=>{"use strict";r.r(t),r.d(t,{dot:()=>s});var n=r(1789),i=r(9569);function s(e,t){if((0,i.isVector)(e)&&(0,i.isVector)(t))return e.dot(t);(0,n.err)("function dot expects 2 vectors")}},6802:(e,t,r)=>{"use strict";r.r(t),r.d(t,{sort:()=>s});var n=r(6328),i=r(9569);function s(e,t){t=t?t.toString():"asc";var r=function(e){return e.group===N?e.multiplier:e.group===FN?""===e.fname?r(e.args[0]):e.fname:e.group===S?e.power:e.value},s=(0,i.isVector)(e)?e.elements:e.collectSymbols();return new n.Vector(s.sort((function(e,n){var i=r(e),s=r(n);return"desc"===t?s-i:i-s})))}},9650:(e,t,r)=>{"use strict";r.r(t),r.d(t,{vecget:()=>s});var n=r(9569),i=r(7810);function s(e,t){return t.isConstant()&&(0,n.isInt)(t)?e.elements[t]:(0,i.symfunction)("vecget",arguments)}},8211:(e,t,r)=>{"use strict";r.r(t),r.d(t,{vecset:()=>i});var n=r(7810);function i(e,t,r){return t.isConstant?(e.elements[t]=r,e):(0,n.symfunction)("vecset",arguments)}},4134:(e,t,r)=>{"use strict";r.r(t),r.d(t,{vector:()=>i});var n=r(6328);function i(){return new n.Vector([].slice.call(arguments))}},5466:(e,t,r)=>{"use strict";r.r(t),r.d(t,{vectrim:()=>s});var n=r(3116),i=r(131);function s(e,t){return t=void 0===t?1e-14:t,e=e.clone(),t=Number(t),e.elements.sort((function(e,t){return t.group-e.group})),e.elements=function(e,t){var r=typeof t;"function"===r&&"undefined"!==r||(t=function(e,t){return e===t});for(var n=[];e.length;){var i=e[0];if(1===e.length){n.push(i);break}var s=[];n.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return n}(e.elements,(function(e,r){return Number((0,n.subtract)((0,i.evaluate)(e),(0,i.evaluate)(r)).abs())<=t})),e}},9202:(e,t,r)=>{"use strict";r.r(t),r.d(t,{add:()=>p});var n=r(7810),i=r(1789),s=r(240),o=r(5963),a=r(4583),u=r(9569),l=r(4013),c=r(3116);function p(e,t){var r=(0,u.isSymbol)(e),h=(0,u.isSymbol)(t);if(r&&h){if(e.unit||t.unit)return deps.Unit.add(e,t);if(e.isInfinity||t.isInfinity){var f=e.multiplier.lessThan(0),m=t.multiplier.lessThan(0);if(e.isInfinity&&t.isInfinity&&f!==m)throw new i.UndefinedError("("+e+")+("+t+") is not defined!");var g=n.Symbol.infinity();return m&&g.negate(),g}if(e.isComposite()&&e.isLinear()&&t.isComposite()&&t.isLinear()&&(e.distributeMultiplier(),t.distributeMultiplier(),t.length>e.length&&e.group===t.group&&([e,t]=[t,e])),e.multiplier.equals(0))return t;if(t.multiplier.equals(0))return e;if(e.isConstant()&&t.isConstant()&&s.Settings.PARSE2NUMBER)return new n.Symbol(e.multiplier.add(t.multiplier).toDecimal(s.Settings.PRECISION));var d=e.group,v=t.group,y=e.power.toString(),b=t.power.toString();if(d<v||d===v&&y>b&&b>0)return p(t,e);if(d===o.Groups.CB&&v===o.Groups.PL&&e.value===t.value){var w=e;e=t,t=w,d=e.group,v=t.group,y=e.power.toString(),b=t.power.toString()}var S,E,M,N=y===b,P=e.value,x=t.value,O=e.isComposite(),A=t.isComposite();if(O&&(S=(0,a.text)(e,"hash")),A&&(E=(0,a.text)(t,"hash")),d===o.Groups.CP&&v===o.Groups.CP&&t.isLinear()&&!e.isLinear()&&S!==E)return p(t,e);d===o.Groups.PL&&v===o.Groups.PL&&(P=S,x=E);var G=d===o.Groups.P&&v===o.Groups.N,I=e.value===t.multiplier.toString(),C=P===x||S===E&&void 0!==S||G&&I;if(C&&N&&d===v)if(G&&(t=t.convert(o.Groups.P)),d!==o.Groups.PL||v!==o.Groups.S&&v!==o.Groups.P)if(M=e,e.multiplier.isOne()&&t.multiplier.isOne()&&d===o.Groups.CP&&e.isLinear()&&t.isLinear())for(var R in t.symbols){var T=t.symbols[R];M.attach(T)}else M.multiplier=M.multiplier.add(t.multiplier);else e.distributeMultiplier(),M=e.attach(t);else if(C&&d!==o.Groups.PL)d===o.Groups.CP&&v===o.Groups.PL?(t.insert(e,"add"),M=t):(M=n.Symbol.shell(o.Groups.PL).attach([e,t])).value=d===o.Groups.PL?S:P;else if(O&&e.isLinear()){var _=d===v,L=d===o.Groups.PL&&v===o.Groups.PL;if(L&&(_=e.value===t.value),e.distributeMultiplier(),t.isComposite()&&t.isLinear()&&_){for(var R in t.distributeMultiplier(),t.symbols)T=t.symbols[R],e.attach(T);M=e}else L&&e.value!==E||d===o.Groups.PL&&!C?(M=n.Symbol.shell(o.Groups.CP).attach([e,t])).updateHash():M=e.attach(t)}else{if(d===o.Groups.FN&&e.fname===s.Settings.SQRT&&v!==o.Groups.EX&&t.power.equals(.5)){var q=t.multiplier.clone();(t=(0,c.sqrt)(t.toUnitMultiplier().toLinear())).multiplier=q}2===e.length&&2===t.length&&(0,u.even)(e.power)&&(0,u.even)(t.power)?M=p((0,c.expand)(e),(0,c.expand)(t)):(M=n.Symbol.shell(o.Groups.CP).attach([e,t])).updateHash()}return M.multiplier.equals(0)&&(M=new n.Symbol(0)),1===M.length&&(q=M.multiplier,(M=(0,u.firstObject)(M.symbols)).multiplier=M.multiplier.multiply(q)),M}h&&!r&&(w=e,e=t,t=w,w=h,h=r,r=w);var F=(0,u.isMatrix)(t);if(r&&F){var k=new l.Matrix;t.eachElement((function(t,r,n){k.set(r,n,p(e.clone(),t))})),t=k}else if((0,u.isMatrix)(e)&&F)t=e.add(t);else if(r&&(0,u.isVector)(t))t.each((function(r,n){n--,t.elements[n]=p(e.clone(),t.elements[n])}));else if((0,u.isVector)(e)&&(0,u.isVector)(t))t.each((function(r,n){n--,t.elements[n]=p(e.elements[n],t.elements[n])}));else{if((0,u.isVector)(e)&&(0,u.isMatrix)(t))return p(t,e);if((0,u.isMatrix)(e)&&(0,u.isVector)(t)){if(t.elements.length===e.rows()){k=new l.Matrix;var B=e.cols();return t.each((function(t,r){for(var n=[],i=0;i<B;i++)n.push(p(e.elements[r-1][i].clone(),t.clone()));k.elements.push(n)})),k}(0,i.err)("Dimensions must match!")}}return t}},1014:(e,t,r)=>{"use strict";r.r(t),r.d(t,{divide:()=>a}),r(7810);var n=r(1789),i=r(4013),s=r(3116),o=r(9569);function a(e,t){var r=(0,o.isSymbol)(e),u=(0,o.isSymbol)(t);if(r&&u){if(e.unit||t.unit)return deps.Unit.divide(e,t);var l;if(t.equals(0))throw new n.DivisionByZero("Division by zero not allowed!");return e.isConstant()&&t.isConstant()?(l=e.clone()).multiplier=l.multiplier.divide(t.multiplier):(t.invert(),l=(0,s.multiply)(e,t)),l}var c=(0,o.isVector)(e),p=(0,o.isVector)(t);if(r&&p)t=t.map((function(t){return a(e.clone(),t)}));else if(c&&u)t=e.map((function(e){return a(e,t.clone())}));else if(c&&p)e.dimensions()===t.dimensions()?t=t.map((function(t,r){return a(e.elements[--r],t)})):(0,n.err)("Cannot divide vectors. Dimensions do not match!");else{var h=(0,o.isMatrix)(e),f=(0,o.isMatrix)(t);if(h&&u){var m=new i.Matrix;e.eachElement((function(e,r,n){m.set(r,n,a(e,t.clone()))})),t=m}else r&&f?(m=new i.Matrix,t.eachElement((function(t,r,n){m.set(r,n,a(e.clone(),t))})),t=m):h&&f?(m=new i.Matrix,e.rows()===t.rows()&&e.cols()===t.cols()?(e.eachElement((function(e,r,n){m.set(r,n,a(e,t.elements[r][n]))})),t=m):(0,n.err)("Dimensions do not match!")):h&&p&&(e.cols()===t.dimensions()?(m=new i.Matrix,e.eachElement((function(e,r,n){m.set(r,n,a(e,t.elements[r].clone()))})),t=m):(0,n.err)("Unable to divide matrix by vector."))}return t}},2165:(e,t,r)=>{"use strict";r.r(t),r.d(t,{IF:()=>i});var n=r(9569);function i(e,t,r){return"boolean"!=typeof e&&(0,n.isNumericSymbol)(e)&&(e=!!Number(e)),e?t:r}},4761:(e,t,r)=>{"use strict";r.r(t),r.d(t,{multiply:()=>w});var n=r(7810),i=r(8473),s=r(1789),o=r(240),a=r(3776),u=r.n(a),l=r(5963),c=r(5037),p=r(1014),h=r(9569),f=r(3613),m=r(9202),g=r(4998),d=r(4583),v=r(4013),y=r(3116),b=r(131);function w(e,t){var r=(0,h.isSymbol)(e),a=(0,h.isSymbol)(t);if(r&&t instanceof i.F)return t.elements.push(e),t;if(r&&a){if(t.isUnit){var S=e.clone();return e.unit=t,S}if(e.unit||t.unit)return deps.Unit.multiply(e,t);if(e.isInfinity||t.isInfinity){if(e.equals(0)||t.equals(0))throw new s.UndefinedError(e+"*"+t+" is undefined!");if(t.power.lessThan(0)){if(e.isInfinity)throw new s.UndefinedError("Infinity/Infinity is not defined!");return new n.Symbol(0)}var E=e.multiplier.multiply(t.multiplier).sign(),M=n.Symbol.infinity();if(e.isConstant()||t.isConstant()||e.isInfinity&&t.isInfinity)return E<0&&M.negate(),M}if(e.isConstant()&&t.isConstant()&&o.Settings.PARSE2NUMBER){var N=new(u())(e.multiplier.toDecimal()).times(new(u())(t.multiplier.toDecimal())).toFixed();return new n.Symbol(N)}if(e.isOne())return t.clone();if(t.isOne())return e.clone();if(e.multiplier.equals(0)||t.multiplier.equals(0))return new n.Symbol(0);if(t.group>e.group&&t.group!==l.Groups.CP)return w(t,e);e.group===l.Groups.CB&&t.group===l.Groups.PL&&e.value===t.value&&(N=e,e=t,t=N);var P=e.group,x=t.group,O=t.multiplier.num,A=t.multiplier.den;if(P!==l.Groups.FN||e.fname!==o.Settings.SQRT||t.isConstant()||e.args[0].value!==t.value||e.args[0].multiplier.lessThan(0))P===l.Groups.FN&&e.fname===o.Settings.SQRT&&e.multiplier.equals(1)&&e.power.equals(-1)&&t.isConstant()&&e.args[0].equals(t)&&(e=(0,n.symfunction)(o.Settings.SQRT,[t.clone()]),t=new n.Symbol(1));else{var G=e.power,I=(0,b.parse)(e.multiplier);(e=w(I,e.args[0].clone())).setPower(new c.Frac(.5).multiply(G)),P=e.group}var C=e.value,R=t.value,T=(E=new c.Frac(e.sign()),P===l.Groups.P&&x===l.Groups.N&&t.multiplier.equals(e.value)),_=T?new c.Frac(1).multiply(e.multiplier).abs():e.multiplier.multiply(t.multiplier).abs();if(S=e.clone().toUnitMultiplier(),t=t.clone().toUnitMultiplier(!0),P===l.Groups.FN&&x===l.Groups.FN){var L=e.args[0].clone(),q=t.args[0].clone();if(e.fname===o.Settings.SQRT&&t.fname===o.Settings.SQRT&&e.isLinear()&&t.isLinear()){var F=(0,p.divide)(L,q).invert();F.gt(1)&&(0,h.isInt)(F)&&(S=w(e.args[0].clone(),(0,y.sqrt)(F.clone())),t=new n.Symbol(1))}else if(e.fname===o.Settings.FACTORIAL&&t.fname===o.Settings.FACTORIAL&&!L.isConstant()&&!q.isConstant()&&t.power<0){var k=(0,f.subtract)(L.clone(),q.clone());if(k.isConstant())if(N=new n.Symbol(1),k<0){for(var B=0,D=Math.abs(k);B<=D;B++)N=w(N,U=(0,m.add)(L.clone(),new n.Symbol(B)));S=w((0,g.pow)(L,new n.Symbol(e.power)),(0,g.pow)(N,new n.Symbol(t.power))),t=new n.Symbol(1)}else{for(B=0,D=Math.abs(k);B<=D;B++)N=w(N,U=(0,m.add)(q.clone(),new n.Symbol(B)));S=w((0,g.pow)(N,new n.Symbol(e.power)),(0,g.pow)(q,new n.Symbol(t.power))),t=new n.Symbol(1)}}}if(C===R&&P===l.Groups.PL&&P===x&&(C=e.text("hash"),R=t.text("hash")),x===l.Groups.EX&&t.previousGroup===l.Groups.PL&&P===l.Groups.PL&&(C=(0,d.text)(e,"hash",l.Groups.EX)),C!==R&&!T||P===l.Groups.PL&&(x===l.Groups.S||x===l.Groups.P||x===l.Groups.FN)||P===l.Groups.PL&&x===l.Groups.CB)if(P===l.Groups.CB&&e.isLinear())if(x===l.Groups.CB&&t.distributeExponent(),x===l.Groups.CB&&t.isLinear()){for(var U in t.symbols){var j=t.symbols[U];S=S.combine(j)}S.multiplier=S.multiplier.multiply(t.multiplier)}else S.combine(t);else if(P!==l.Groups.N){if(P===l.Groups.CB)S.distributeExponent(),S.combine(t);else if(!t.isOne()){var V=t.multiplier.clone();t.toUnitMultiplier(),(S=n.Symbol.shell(l.Groups.CB).combine([S,t])).multiplier=S.multiplier.multiply(V)}}else S=t.clone().toUnitMultiplier();else{var X=e.power,Z=t.power,z=(0,h.isSymbol)(X),H=(0,h.isSymbol)(Z),$=z||H;P===l.Groups.PL&&x!==l.Groups.PL&&t.previousGroup!==l.Groups.PL&&X.equals(1)?(S=new n.Symbol(0),e.each((function(e){S=(0,m.add)(S,w(e,t.clone()))}),!0)):(S.power=$?(0,m.add)((0,h.isSymbol)(X)?X:new n.Symbol(X),(0,h.isSymbol)(Z)?Z:new n.Symbol(Z)):P===l.Groups.N?X:X.add(Z),S.power.equals(0)&&(S=S.convert(l.Groups.N)),$&&S.convert(l.Groups.EX),e.imaginary&&t.imaginary&&(0,h.even)(S.power%2)&&(S=new n.Symbol(1),_.negate()),S.group!==l.Groups.EX&&S.previousGroup&&(S.previousGroup=void 0),S.multiplier=S.multiplier.multiply(t.multiplier))}if(S.group===l.Groups.P){var Q=Math.log(S.value),W=Math.log(O)/Q,Y=Math.log(A)/Q,J=_.num/O,K=_.den/A;0!==W&&(0,h.isInt)(W)&&(0,h.isInt)(J)&&(S.power=S.power.add(new c.Frac(W)),_.num/=O),0!==Y&&(0,h.isInt)(Y)&&(0,h.isInt)(K)&&(S.power=S.power.subtract(new c.Frac(Y)),_.den/=A)}1===S.length&&(N=S.multiplier,(S=(0,h.firstObject)(S.symbols)).multiplier=S.multiplier.multiply(N));var ee=S.power.toString();if((0,h.even)(ee)&&S.fname===o.Settings.SQRT){E*=S.sign();var te=S.power;S=S.args[0],S=w(new n.Symbol(_),(0,g.pow)(S,new n.Symbol(te.divide(new c.Frac(2))))),E<0&&S.negate()}else S.multiplier=S.multiplier.multiply(_).multiply(E),S.group===l.Groups.CP&&S.isImaginary()&&S.distributeMultiplier();return S.group===l.Groups.P&&(0,h.isInt)(S.power.toDecimal())&&(S=S.convert(l.Groups.N)),S}a&&!r&&(N=e,e=t,t=N,N=a,a=r,r=N);var re=(0,h.isMatrix)(t),ne=(0,h.isMatrix)(e);if(r&&re){var ie=new v.Matrix;t.eachElement((function(t,r,n){ie.set(r,n,w(e.clone(),t))})),t=ie}else if(ne&&re)t=e.multiply(t);else if(r&&(0,h.isVector)(t))t.each((function(r,n){n--,t.elements[n]=w(e.clone(),t.elements[n])}));else if((0,h.isVector)(e)&&(0,h.isVector)(t))t.each((function(r,n){n--,t.elements[n]=w(e.elements[n],t.elements[n])}));else{if((0,h.isVector)(e)&&(0,h.isMatrix)(t))return w(t,e);if((0,h.isMatrix)(e)&&(0,h.isVector)(t)){if(t.elements.length===e.rows()){ie=new v.Matrix;var se=e.cols();return t.each((function(t,r){for(var n=[],i=0;i<se;i++)n.push(w(e.elements[r-1][i].clone(),t.clone()));ie.elements.push(n)})),ie}(0,s.err)("Dimensions must match!")}}return t}},4998:(e,t,r)=>{"use strict";r.r(t),r.d(t,{pow:()=>w,primeFactors:()=>E});var n=r(7810),i=r(5963),s=r(240),o=r(9569),a=r(1789),u=r(9202),l=r(3776),c=r.n(l),p=r(5037),h=r(6276),f=r(6870),m=r(7814),g=r(4013),d=r(1208),v=r(3116),y=r(7460),b=r(131);function w(e,t){var r=(0,o.isSymbol)(e),l=(0,o.isSymbol)(t);if(r&&l){if(e.unit||t.unit)return deps.Unit.pow(e,t);if(e.group===i.Groups.FN&&e.fname===s.Settings.ABS&&(0,o.even)(t)){var d=e.multiplier.clone(),M=w(e.args[0],t);return M.multiplier=d,M}if(e.isInfinity||t.isInfinity){if(e.isInfinity&&t.isInfinity)throw new a.UndefinedError("("+e+")^("+t+") is undefined!");if(e.isConstant()&&t.isInfinity){if(e.equals(0)){if(t.lessThan(0))throw new a.UndefinedError("0^Infinity is undefined!");return new n.Symbol(0)}if(e.equals(1))throw new a.UndefinedError("1^"+t.toString()+" is undefined!");if(t.lessThan(0))return new n.Symbol(0);if(!e.lessThan(0))return n.Symbol.infinity()}if(e.isInfinity&&t.isConstant()){if(t.equals(0))throw new a.UndefinedError(e+"^0 is undefined!");return t.lessThan(0)?new n.Symbol(0):(0,v.multiply)(n.Symbol.infinity(),w(new n.Symbol(e.sign()),t.clone()))}}var N=e.equals(0),P=t.equals(0);if(N&&P)throw new a.UndefinedError("0^0 is undefined!");if(N&&t.isConstant()&&t.multiplier.greaterThan(0))return new n.Symbol(0);if(P)return new n.Symbol(1);var x,O,A,G,I,C=t.isConstant(),R=e.isConstant(),T=t.isInteger(),_=(d=e.multiplier,e.clone());if(R&&C&&e.equals(0)&&t.lessThan(0))throw new a.UndefinedError("Division by zero is not allowed!");if(s.Settings.PARSE2NUMBER&&R&&C&&e.sign()<0&&(0,o.evenFraction)(t))return x=Math.PI*t,X=new n.Symbol(Math.cos(x)),Z=(0,v.multiply)(n.Symbol.imaginary(),new n.Symbol(Math.sin(x))),(0,u.add)(X,Z);if(s.Settings.PARSE2NUMBER&&e.isImaginary()&&C&&(0,o.isInt)(t)&&!t.lessThan(0)&&(X=e.realpart(),Z=e.imagpart(),X.isConstant("all")&&Z.isConstant("all")))return G=s.Settings.USE_BIG?(0,n.Symbol)(c().atan2(B.multiplier.toDecimal(),j.multiplier.toDecimal()).times(t.toString())):Math.atan2(Z,X)*t,ce=new n.Symbol(G),j=w(n.Symbol.hyp(X,Z),t),O=(0,v.multiply)(j.clone(),y.b.cos(ce.clone())),A=(0,v.multiply)(j,y.b.sin(ce)),(0,u.add)(O,(0,v.multiply)(n.Symbol.imaginary(),A));if(_.toUnitMultiplier(),_.group!==i.Groups.FN||_.fname!==s.Settings.SQRT||C){var L=d.sign();(0,o.evenFraction)(t)&&L<0&&(_.negate(),(_=(0,n.symfunction)(s.Settings.PARENTHESIS,[_])).negate()),_.multiplyPower(t)}else(K=_.args[0]).multiplyPower(new n.Symbol(.5)),K.multiplier.multiply(_.multiplier),K.multiplyPower(t),_=K;if(R&&C&&s.Settings.PARSE2NUMBER)L<0&&(e.negate(),I=t.multiplier.den.equals(2)?new n.Symbol(s.Settings.IMAGINARY):(0,o.isInt)(t.multiplier)?(0,o.even)(t.multiplier)?new n.Symbol(1):new n.Symbol(-1):(0,o.even)(t.multiplier.den)?w((0,n.symfunction)(s.Settings.PARENTHESIS,[new n.Symbol(L)]),t.clone()):new n.Symbol(Math.pow(L,t.multiplier.num))),_=new n.Symbol(Math.pow(e.multiplier.toDecimal(),t.multiplier.toDecimal())),I&&(_=(0,v.multiply)(_,I));else if(T&&!d.equals(1)){if(t.abs().gt(s.Settings.MAX_EXP))return t.sign()<0?new n.Symbol(0):n.Symbol.infinity();var q=t.multiplier.toDecimal(),F=Math.sign(q);q=Math.abs(q);var k=new p.Frac(1);k.num=d.num.pow(q),k.den=d.den.pow(q),F<0&&k.invert(),_.multiplier=_.multiplier.multiply(k)}else if(L=e.sign(),t.isConstant()&&e.isConstant()&&!t.multiplier.den.equals(1)&&L<0)if(t.multiplier.den.equals(2)){var B=new n.Symbol(s.Settings.IMAGINARY);e.negate(),t.lessThan(0)&&(B.negate(),t.negate()),_=(0,v.multiply)(w(e,t),B)}else{(V=e.clone()).multiplier.negate(),_=w((0,n.symfunction)(s.Settings.PARENTHESIS,[new n.Symbol(L)]),t.clone());var D=w(new n.Symbol(V.multiplier.num),t.clone()),U=w(new n.Symbol(V.multiplier.den),t.clone()),j=(0,v.divide)(D,U);_=(0,v.multiply)(_,j)}else if(s.Settings.PARSE2NUMBER&&t.isImaginary()){var V,X=t.realpart(),Z=t.imagpart(),z=w((V=e.clone().toLinear()).clone(),X),H=(0,h.log)(V.clone()),$=y.b.cos((0,v.multiply)(Z.clone(),H)),Q=(0,v.multiply)(y.b.sin((0,v.multiply)(Z,(0,h.log)(V))),n.Symbol.imaginary());_=(0,v.multiply)(z,(0,u.add)($,Q)),_=(0,f.expand)((0,b.parse)(_))}else{var W=e.group===i.Groups.N&&L<0,Y=S(new n.Symbol(W?d.num:Math.abs(d.num)).setPower(t.clone())),J=S(new n.Symbol(d.den).setPower(t.clone()).invert());if(e.imaginary)if(T){var K;K=Math.sign(t),ie=(q=(0,m.abs)(t))%4,_=new n.Symbol((0,o.even)(ie)?-1:s.Settings.IMAGINARY),(0===ie||K<0&&1===ie||K>0&&3===ie)&&_.negate()}else{var ee=t.multiplier.multiply(p.Frac.quick(1,2)),te=Math.pow(-1,ee.num);_=(0,o.even)(ee.den)?new n.Symbol(-1).setPower(ee,!0):new n.Symbol(te)}if(L<0&&!W&&_.negate(),C&&e.group!==i.Groups.EX){var re=(0,o.even)(t.multiplier.den),ne=(0,o.even)(e.power),ie=_.power.toDecimal(),se=(0,o.even)(ie);re&&ne&&!se&&(1===ie?_=(0,n.symfunction)(s.Settings.ABS,[_]):(0,o.isInt)(ie)?_=(0,v.multiply)((0,n.symfunction)(s.Settings.ABS,[_.clone().toLinear()]),_.clone().setPower(new p.Frac(ie-1))):(q=_.power,_=(0,n.symfunction)(s.Settings.ABS,[_.toLinear()]).setPower(q)),s.Settings.POSITIVE_MULTIPLIERS&&_.fname===s.Settings.ABS&&(_=_.args[0]))}if(t.equals(2)&&_.group===i.Groups.CB){var oe=new n.Symbol(1);_.each((function(e){oe=(0,v.multiply)(oe,w(e,t))})),_=oe}}if(_=S(_),Y&&J&&(_=(0,v.multiply)(_,function(e){if(e.group===i.Groups.P){var t=e.value,r=E(t)[0];if(!r)return(0,o.warn)("Unable to compute prime factors. This should not happen. Please review and report."),e;var s=new p.Frac(Math.log(t)/Math.log(r)).multiply(e.power);if(s.den>e.power.den)return e;e=(0,o.isInt)(s)?new n.Symbol(Math.pow(r,s)):new n.Symbol(r).setPower(s)}return e}((0,v.multiply)(Y,J)))),_.fname===s.Settings.SQRT){var ae=_.group===i.Groups.EX,ue=ae?_.power.multiplier.toString():_.power.toString();if((0,o.even)(ue)){var le=ae?(0,v.divide)(_.power,new n.Symbol(2)):new n.Symbol(_.power.divide(new p.Frac(2)));d=_.multiplier,(_=w(_.args[0],le)).multiplier=_.multiplier.multiply(d)}}else if(!s.Settings.IGNORE_E&&_.isE()&&_.group===i.Groups.EX&&_.power.contains("pi")&&_.power.contains(s.Settings.IMAGINARY)&&t.group===i.Groups.CB){var ce=t.stripVar(s.Settings.IMAGINARY);_=(0,u.add)(y.b.cos(ce),(0,v.multiply)(n.Symbol.imaginary(),y.b.sin(ce)))}return _}if((0,o.isVector)(e)&&l)e=e.map((function(e){return w(e,t.clone())}));else if((0,o.isMatrix)(e)&&l){var pe=new g.Matrix;e.eachElement((function(e,r,n){pe.set(r,n,w(e,t.clone()))})),e=pe}else r&&(0,o.isMatrix)(t)&&(pe=new g.Matrix,t.eachElement((function(t,r,n){pe.set(r,n,w(e.clone(),t))})),e=pe);return e}function S(e){if(!(0,o.isSymbol)(e.power)&&e.power.absEquals(.5)){var t=e.power.sign(),r=(0,v.sqrt)(e.group===i.Groups.P?new n.Symbol(e.value):e.toLinear());return t<0&&r.invert(),r}return e}function E(e){if((0,o.isPrime)(e))return[e];for(var t=e,r=1,n=[];r<t;){var i=e/r,s=Math.floor(i);if(i-s<=2220446049250313e-31&&r>1){if((0,o.isPrime)(r)&&(-1===d.PRIMES.indexOf(r)&&d.PRIMES.push(r),n.push(r)),(0,o.isPrime)(s)){n.push(s);break}t=s}r++}return n.sort((function(e,t){return e-t}))}},3613:(e,t,r)=>{"use strict";r.r(t),r.d(t,{subtract:()=>a});var n=r(9202),i=r(1789),s=r(4013),o=r(9569);function a(e,t){var r=(0,o.isSymbol)(e),u=(0,o.isSymbol)(t);if(r&&u)return e.unit||t.unit?deps.Unit.subtract(e,t):(0,n.add)(e,t.negate());if(u&&(0,o.isVector)(e))t=e.map((function(e){return a(e,t.clone())}));else if(r&&(0,o.isVector)(t))t=t.map((function(t){return a(e.clone(),t)}));else if((0,o.isVector)(e)&&(0,o.isVector)(t))e.dimensions()===t.dimensions()?t=e.subtract(t):(0,i.err)("Unable to subtract vectors. Dimensions do not match.");else if((0,o.isMatrix)(e)&&(0,o.isVector)(t)){if(t.elements.length===e.rows()){var l=new s.Matrix,c=e.cols();return t.each((function(t,r){for(var n=[],i=0;i<c;i++)n.push(a(e.elements[r-1][i].clone(),t.clone()));l.elements.push(n)})),l}(0,i.err)("Dimensions must match!")}else{if((0,o.isVector)(e)&&(0,o.isMatrix)(t))return l=t.clone().negate(),(0,n.add)(l,e);(0,o.isMatrix)(e)&&(0,o.isMatrix)(t)?t=e.subtract(t):(0,o.isMatrix)(e)&&u?(l=new s.Matrix,e.each((function(e,r,n){l.set(r,n,a(e,t.clone()))})),t=l):r&&(0,o.isMatrix)(t)&&(l=new s.Matrix,t.each((function(t,r,n){l.set(r,n,a(e.clone(),t))})),t=l)}return t}},894:(e,t,r)=>{"use strict";function n(...e){console.log(...e)}r.r(t),r.d(t,{print:()=>n})},4946:(e,t,r)=>{"use strict";function n(e,t){return e.contains(t)}r.r(t),r.d(t,{contains:()=>n})},2149:(e,t,r)=>{"use strict";function n(e,t){return e.difference(t)}r.r(t),r.d(t,{difference:()=>n})},3726:(e,t,r)=>{"use strict";function n(e,t){return e.intersection(t)}r.r(t),r.d(t,{intersection:()=>n})},1494:(e,t,r)=>{"use strict";r.r(t),r.d(t,{intersects:()=>i});var n=r(7810);function i(e,t){return new n.Symbol(Number(e.intersects(t)))}},4392:(e,t,r)=>{"use strict";r.r(t),r.d(t,{is_subset:()=>i});var n=r(7810);function i(e,t){return new n.Symbol(Number(e.is_subset(t)))}},8194:(e,t,r)=>{"use strict";r.r(t),r.d(t,{set:()=>i});var n=r(7898);function i(){return n.l.fromArray(arguments)}},2630:(e,t,r)=>{"use strict";function n(e,t){return e.union(t)}r.r(t),r.d(t,{union:()=>n})},1208:(e,t,r)=>{"use strict";r.r(t),r.d(t,{PRIMES:()=>n,BIGLOG_CACHE:()=>i}),r(9569);const n=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],i=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]},1548:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Math2:()=>c});var n=r(5037),i=r(275),s=r.n(i),o=r(9569),a=r(7810),u=r(1208),l=r(5963),c={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),r=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return e>=0?r:-r},diff:function(e){var t=.001;return function(r){return(e(r+t)-e(r-t))/(2*t)}},median:function(...e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),r=1/t.pop(),n=0,i=t.length;n<i;n++)r=1/(t.pop()+r);return e.sign*(e.whole+r)},continuedFraction:function(e,t){t=t||20;for(var r,n,i=Math.sign(e),s=Math.abs(e),o=Math.floor(s),a=s-o,u=0,l=!1,p={whole:o,sign:i,fractions:[]};!l&&0!==a&&(r=1/a,!((n=Math.floor(r))>1e7&&c.fromContinued(p)-e<=Number.EPSILON));)p.fractions.push(n),((a=r-n)<=1e-14||u>=t-1)&&(l=!0),u++;var h=p.fractions.length-1;return 1===p.fractions[h]&&(p.fractions.pop(),p.fractions[--h]++),p},bigpow:function(e,t){e instanceof n.Frac||(e=n.Frac.create(e)),t instanceof n.Frac||(t=n.Frac.create(t));var r=new n.Frac(0);if(t.isInteger())r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString());else{var i=n.Frac.create(Math.pow(e.num,t.num)),s=n.Frac.create(Math.pow(e.den,t.num));r.num=c.nthroot(i,t.den.toString()),r.den=c.nthroot(s,t.den)}return r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*c.gamma(1-e));e-=1;for(var r=t[0],n=1;n<9;n++)r+=t[n]/(e+n);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*r},bigfactorial:function(e){for(var t=new(s())(1),r=2;r<=e;r++)t=t.times(r);return new n.Frac(t)},bigLog:function(e){if(u.BIGLOG_CACHE[e])return n.Frac.quick.apply(null,u.BIGLOG_CACHE[e].split("/"));e=new n.Frac(e);for(var t=new n.Frac(0),r=e.subtract(new n.Frac(1)),i=e.add(new n.Frac(1)),s=0;s<80;s++){var o=new n.Frac(2*s+1),a=c.bigpow(r.divide(i),o),l=o.clone().invert().multiply(a);t=t.add(l)}return t.multiply(new n.Frac(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return c.gamma(e+1);for(var r=1,n=2;n<=e;n++)r*=n;return r},dfactorial:function(e){if((0,o.isInt)(e)){var t=e%2==0,r=t?e/2:(e+1)/2,i=new n.Frac(1);if(t)for(let e=1;e<=r;e++)i=i.multiply(new n.Frac(2).multiply(new n.Frac(e)));else for(let e=1;e<=r;e++)i=i.multiply(new n.Frac(2).multiply(new n.Frac(e)).subtract(new n.Frac(1)))}else i=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*c.gamma(1+e/2);return i},GCD:function(){for(var e=(0,o.arrayUnique)([].slice.call(arguments).map((function(e){return Math.abs(e)}))).sort(),t=Math.abs(e.shift()),r=e.length;r-- >0;)for(var n=Math.abs(e.shift());;){if(0==(t%=n)){t=n;break}if(0==(n%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],r=1;r<e.length;r++){var n=e[r],i=t.isNegative()&&n.isNegative()?-1:1;t=n.gcd(t),i<0&&t.negate()}return t},LCM:function(e,t){return e*t/c.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var r=c.ifactor(e),n=new a.Symbol;for(var i in n.symbols={},n.group=l.Groups.CB,r){var s=new a.Symbol(1);s.group=l.Groups.P,s.value=i,s.power=new a.Symbol(r[i]),n.symbols[i]=s}return n.updateHash(),1===e&&(n=new a.Symbol(e)),t<0&&n.negate(),n},sfactor:function(e,t){t=t||{};var r=Math.floor(Math.sqrt(e));r>u.PRIMES[u.PRIMES.length-1]&&e<1e6&&(0,o.generatePrimes)(r);for(var n=u.PRIMES.length,i=0;i<n;i++)for(var s=u.PRIMES[i];e%s==0;)e/=s,t[s]=(t[s]||0)+1;return e>1&&(t[e]=1),t},ifactor:function(e){var t=new(s())(e);if("0"===(e=String(e)))return{0:1};var r=(e=new(s())(e)).sign?-1:1;e=e.abs();var n={};if(e.lt("65536"))n=c.sfactor(e,n);else{var i=function(e){e.isPrime()?n[e]=(n[e]||0)+1:n=c.sfactor(e,n)};try{for(var a=0;!e.abs().equals(1);){if(e.isPrime()){i(e);break}{function t(r){for(var n=new(s())(r),i=2,o=new(s())(r),u=new(s())(1);u.equals(1);){for(var l=0;l<=i&&u.equals(1);l++){if(a++>1e3)throw new Error("stopping");o=o.pow(2).add(1).mod(e),u=s().gcd(o.minus(n).abs(),e)}i*=2,n=o}return u.equals(e)?t(r+1):u}var u=t(2);i(u),e=e.divide(u)}}}catch(e){n={},i(t)}}if(-1===r){var l=(0,o.arrayMin)(Object.keys(n));n["-"+l]=n[l],delete n[l]}return n},boxfactor:function(e,t){t=t||200;for(var r,n,i=Math.floor(5/12*e),s=0,o=!1;r=Math.floor(e/i),0!=(n=e%i);){if(o)return[e,1];i=Math.max(n,i-n),o=++s>t}return[r,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=(0,o.even)(e)?t:Math.abs(t);for(var r=0,n=1,i=1,s=2;s<=e;s++)i=r+n,r=n,n=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,r,n){var i=function(e,t,r){var n=e(t);return isNaN(n)&&(n=e(1===r?t+1e-12:t-1e-12)),n};n=n||1e-4;var s=Math.abs(Math.floor((r-t)/n));s%2!=0&&s++;for(var o=(r-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(e,t,r,n,i){if(i<0)throw new Error("max depth cannot be negative");function s(e,t,r,n,i,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var h,f,m,g,d,v,y,b,w,S;if(f=e(t+.25*(h=r-t)),m=e(r-.25*h),isNaN(f))p.nanEncountered=!0;else if(isNaN(m))p.nanEncountered=!0;else if(S=((v=(g=h*(n+4*f+i)/12)+(d=h*(i+4*m+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return c>l?(p.maxDepthCount++,v+S):Math.abs(S)<u?v+S:(b=s(e,t,y=t+.5*h,n,f,i,g,.5*u,l,c+1,p),isNaN(b)?(p.nanEncountered=!0,NaN):(w=s(e,y,r,i,m,o,d,.5*u,l,c+1,p),isNaN(w)?(p.nanEncountered=!0,NaN):b+w))}var a;try{a=function(e,t,r,n,i){var a={maxDepthCount:0,nanEncountered:!1};void 0===n&&(n=1e-9),void 0===i&&(i=45);var u=e(t),l=e(.5*(t+r)),c=e(r),p=s(e,t,r,u,l,c,(u+4*l+c)*(r-t)/6,n,i,1,a);if(a.maxDepthCount>0&&(0,o.warn)("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+a.maxDepthCount+" times"),a.nanEncountered)throw new Error("Function does not converge over interval!");return p}(e,t,r,n,i)}catch(n){return c.simpson(e,t,r)}return(0,o.nround)(a,12)},Ci:function(e){for(var t=0,r=1;r<20;r++){var n=2*r;t+=Math.pow(-1,r)*Math.pow(e,n)/(n*c.factorial(n))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,r=0;r<20;r++){var n=2*r;t+=Math.pow(-1,r)*Math.pow(e,n+1)/((n+1)*c.factorial(n+1))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,r=1;r<30;r++)t+=Math.pow(e,r)/(r*c.factorial(r));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,r,n=0,i=0;i<30;i++)r=1+(t=2*i),n+=Math.pow(e,r)/(r*r*c.factorial(t));return n},Chi:function(e){var t;return t=function(e){return(Math.cosh(e)-1)/e},Math.log(e)+.5772156649015329+c.num_integrate(t,.002,e,.001)},Li:function(e){return c.Ei(c.bigLog(e))},gamma_incomplete:function(e,t=0){for(var r=e-1,n=0,i=0;i<r;i++)n+=Math.pow(t,i)/c.factorial(i);return c.factorial(r)*Math.exp(-t)*n},step:function(e){return e>0?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:e>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return(e=Math.abs(e))>=1?0:1-e},nthroot:function(e,t){if(e instanceof n.Frac||(e=new n.Frac(e.toString())),t instanceof n.Frac||(t=new n.Frac(t.toString())),t.equals(1))return e;var r,i,s,o=e.divide(new n.Frac(2)),a=new n.Frac(1e-15),u=t.clone().invert(),l=t.subtract(new n.Frac(1));do{var p=c.bigpow(o,l),h=u.multiply(e.divide(p).subtract(o)).toDecimal(25);if(r=n.Frac.create(h),s)break;o=o.add(r),h=r.toDecimal(),s=!!i&&i===h,i=h}while(r.abs().gte(a));return o},sqrt:function(e){var t,r,i,s;e instanceof n.Frac||(e=new n.Frac(e));var o=0,a=!1,u=new n.Frac(1e-20);t=e.divide(new n.Frac(2));do{if(o>1e3)throw new Error("Unable to calculate square root for "+e);t=t.add(e.divide(t)).divide(new n.Frac(2)),t=new n.Frac(t.decimal(30)),r=e.subtract(t.multiply(t)),s=!!i&&i.equals(r),(r.clone().abs().lessThan(u)||s)&&(a=!0),i=r,o++}while(!a);return t},scientificToDecimal:function(e){let t=Math.sign(e),r=Math.abs(e);if(/\d+\.?\d*e[+\-]*\d+/i.test(r.toString())){var n=String(r).toLowerCase().split("e"),i=n.pop(),s=Math.abs(i),o=i/s,a=n[0].split(".");if(-1===o)r=(s-=a[0].length)<0?a[0].slice(0,s)+"."+a[0].slice(s)+(2===a.length?a[1]:""):"0."+new Array(s+1).join("0")+a.join("");else{var u=a[1];u&&(s-=u.length),r=s<0?a[0]+u.slice(0,s)+"."+u.slice(s):a.join("")+new Array(s+1).join("0")}}return t<0?"-"+r:r}};Math.sign=Math.sign||function(e){return 0==(e=+e)||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var t=Math.exp(e);return(t+1/t)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var t=Math.exp(e);return(t-1/t)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)}},1050:(e,t,r)=>{"use strict";r.d(t,{f:()=>l});var n=r(240),i=r(7810),s=r(9569),o=r(8361),a=r(3116),u=r(131);const l={cosh:function(e){if(n.Settings.PARSE2NUMBER){if(e.isConstant())return new i.Symbol(Math.cosh(e.valueOf()));if(e.isImaginary())return o.Z.evaluate(e,"cosh")}return(0,i.symfunction)("cosh",arguments)},sinh:function(e){if(n.Settings.PARSE2NUMBER){if(e.isConstant())return new i.Symbol(Math.sinh(e.valueOf()));if(e.isImaginary())return o.Z.evaluate(e,"sinh")}return(0,i.symfunction)("sinh",arguments)},tanh:function(e){if(n.Settings.PARSE2NUMBER){if(e.isConstant())return new i.Symbol(Math.tanh(e.valueOf()));if(e.isImaginary())return o.Z.evaluate(e,"tanh")}return(0,i.symfunction)("tanh",arguments)},sech:function(e){return n.Settings.PARSE2NUMBER?e.isConstant()?new i.Symbol(Math.sech(e.valueOf())):e.isImaginary()?o.Z.evaluate(e,"sech"):(0,u.parse)((0,s.format)("1/cosh({0})",e)):(0,i.symfunction)("sech",arguments)},csch:function(e){return n.Settings.PARSE2NUMBER?e.isConstant()?new i.Symbol(Math.csch(e.valueOf())):e.isImaginary()?o.Z.evaluate(e,"csch"):(0,u.parse)((0,s.format)("1/sinh({0})",e)):(0,i.symfunction)("csch",arguments)},coth:function(e){return n.Settings.PARSE2NUMBER?e.isConstant()?new i.Symbol(Math.coth(e.valueOf())):e.isImaginary()?o.Z.evaluate(e,"coth"):(0,u.parse)((0,s.format)("1/tanh({0})",e)):(0,i.symfunction)("coth",arguments)},acosh:function(e){return n.Settings.PARSE2NUMBER&&e.isImaginary()?o.Z.evaluate(e,"acosh"):n.Settings.PARSE2NUMBER?(0,u.evaluate)((0,u.parse)((0,s.format)(n.Settings.LOG+"(({0})+sqrt(({0})^2-1))",e.toString()))):(0,i.symfunction)("acosh",arguments)},asinh:function(e){return n.Settings.PARSE2NUMBER&&e.isImaginary()?o.Z.evaluate(e,"asinh"):n.Settings.PARSE2NUMBER?(0,u.evaluate)((0,u.parse)((0,s.format)(n.Settings.LOG+"(({0})+sqrt(({0})^2+1))",e.toString()))):(0,i.symfunction)("asinh",arguments)},atanh:function(e){return n.Settings.PARSE2NUMBER&&e.isImaginary()?o.Z.evaluate(e,"atanh"):n.Settings.PARSE2NUMBER?(0,u.evaluate)((0,u.parse)((0,s.format)("(1/2)*"+n.Settings.LOG+"((1+({0}))/(1-({0})))",e.toString()))):(0,i.symfunction)("atanh",arguments)},asech:function(e){return n.Settings.PARSE2NUMBER&&e.isImaginary()?o.Z.evaluate(e,"asech"):n.Settings.PARSE2NUMBER?(0,u.evaluate)((0,a.log)((0,a.add)(e.clone().invert(),(0,a.sqrt)((0,a.subtract)((0,a.pow)(e,new i.Symbol(-2)),new i.Symbol(1)))))):(0,i.symfunction)("asech",arguments)},acsch:function(e){return n.Settings.PARSE2NUMBER&&e.isImaginary()?o.Z.evaluate(e,"acsch"):n.Settings.PARSE2NUMBER?(0,u.evaluate)((0,u.parse)((0,s.format)(n.Settings.LOG+"((1+sqrt(1+({0})^2))/({0}))",e.toString()))):(0,i.symfunction)("acsch",arguments)},acoth:function(e){return n.Settings.PARSE2NUMBER&&e.isImaginary()?o.Z.evaluate(e,"acoth"):n.Settings.PARSE2NUMBER?e.equals(1)?i.Symbol.infinity():(0,u.evaluate)((0,a.divide)((0,a.log)((0,a.divide)((0,a.add)(e.clone(),new i.Symbol(1)),(0,a.subtract)(e.clone(),new i.Symbol(1)))),new i.Symbol(2))):(0,i.symfunction)("acoth",arguments)}}},7460:(e,t,r)=>{"use strict";r.d(t,{b:()=>g});var n=r(7810),i=r(240),s=r(3776),o=r.n(s),a=r(9569),u=r(1548),l=r(8361),c=r(1789),p=r(5037),h=r(3116),f=r(6870),m=r(131);const g={cos:function(e){if(e.equals("pi")&&e.multiplier.den.equals(2))return new n.Symbol(0);if(i.Settings.PARSE2NUMBER){if(e.equals(new n.Symbol(i.Settings.PI/2)))return new n.Symbol(0);if(e.isConstant())return i.Settings.USE_BIG?new n.Symbol(o().cos(e.multiplier.toDecimal())):new n.Symbol(Math.cos(e.valueOf()));if(e.isImaginary())return l.Z.evaluate(e,"cos")}if(e.equals(0))return new n.Symbol(1);var t,r=!1,s=(0,p.getQuadrant)(e.multiplier.toDecimal()),u=e.multiplier.abs();if(e.multiplier=u,e.isPi()&&e.isLinear())if((0,a.isInt)(u))t=new n.Symbol((0,a.even)(u)?1:-1);else{Number(u.num);var c=Number(u.den);2===c?t=new n.Symbol(0):3===c?(t=(0,m.parse)("1/2"),r=!0):4===c?(t=(0,m.parse)("1/sqrt(2)"),r=!0):6===c?(t=(0,m.parse)("sqrt(3)/2"),r=!0):t=(0,n.symfunction)("cos",[e])}return!r||2!==s&&3!==s||t.negate(),t||(t=(0,n.symfunction)("cos",[e])),t},sin:function(e){if(i.Settings.PARSE2NUMBER){if(e.isConstant())return e%Math.PI==0?new n.Symbol(0):i.Settings.USE_BIG?new n.Symbol(o().sin(e.multiplier.toDecimal())):new n.Symbol(Math.sin(e.valueOf()));if(e.isImaginary())return l.Z.evaluate(e,"sin")}if(e.equals(0))return new n.Symbol(0);var t,r=!1,s=(0,p.getQuadrant)(e.multiplier.toDecimal()),u=e.multiplier.sign(),c=e.multiplier.abs();if(e.multiplier=c,e.equals("pi"))t=new n.Symbol(0);else if(e.isPi()&&e.isLinear())if((0,a.isInt)(c))t=new n.Symbol(0);else{c.num;var f=c.den;2==f?(t=new n.Symbol(1),r=!0):3==f?(t=(0,m.parse)("sqrt(3)/2"),r=!0):4==f?(t=(0,m.parse)("1/sqrt(2)"),r=!0):6==f?(t=(0,m.parse)("1/2"),r=!0):t=(0,h.multiply)(new n.Symbol(u),(0,n.symfunction)("sin",[e]))}return t||(t=(0,h.multiply)(new n.Symbol(u),(0,n.symfunction)("sin",[e]))),!r||3!==s&&4!==s||t.negate(),t},tan:function(e){if(i.Settings.PARSE2NUMBER){if(e%Math.PI==0&&e.isLinear())return new n.Symbol(0);if(e.isConstant())return i.Settings.USE_BIG?new n.Symbol(o().tan(e.multiplier.toDecimal())):new n.Symbol(Math.tan(e.valueOf()));if(e.isImaginary())return l.Z.evaluate(e,"tan")}var t,r=!1,s=(0,p.getQuadrant)(e.multiplier.toDecimal()),u=e.multiplier;if(e.multiplier=u,e.isPi()&&e.isLinear())if((0,a.isInt)(u))t=new n.Symbol(0);else{u.num;var h=u.den;if(2==h)throw new c.UndefinedError("tan is undefined for "+e.toString());3==h?(t=(0,m.parse)("sqrt(3)"),r=!0):4==h?(t=new n.Symbol(1),r=!0):6==h?(t=(0,m.parse)("1/sqrt(3)"),r=!0):t=(0,n.symfunction)("tan",[e])}return t||(t=(0,n.symfunction)("tan",[e])),!r||2!==s&&4!==s||t.negate(),t},sec:function(e){if(i.Settings.PARSE2NUMBER)return e.isConstant()?i.Settings.USE_BIG?new n.Symbol(new(o())(1).dividedBy(o().cos(e.multiplier.toDecimal()))):new n.Symbol(u.Math2.sec(e.valueOf())):e.isImaginary()?l.Z.evaluate(e,"sec"):(0,m.parse)((0,a.format)("1/cos({0})",e));var t,r=!1,s=(0,p.getQuadrant)(e.multiplier.toDecimal()),h=e.multiplier.abs();if(e.multiplier=h,e.isPi()&&e.isLinear())if((0,a.isInt)(h))t=new n.Symbol((0,a.even)(h)?1:-1);else{h.num;var f=h.den;if(2==f)throw new c.UndefinedError("sec is undefined for "+e.toString());3==f?(t=new n.Symbol(2),r=!0):4==f?(t=(0,m.parse)("sqrt(2)"),r=!0):6==f?(t=(0,m.parse)("2/sqrt(3)"),r=!0):t=(0,n.symfunction)("sec",[e])}return!r||2!==s&&3!==s||t.negate(),t||(t=(0,n.symfunction)("sec",[e])),t},csc:function(e){if(i.Settings.PARSE2NUMBER)return e.isConstant()?i.Settings.USE_BIG?new n.Symbol(new(o())(1).dividedBy(o().sin(e.multiplier.toDecimal()))):new n.Symbol(u.Math2.csc(e.valueOf())):e.isImaginary()?l.Z.evaluate(e,"csc"):(0,m.parse)((0,a.format)("1/sin({0})",e));var t,r=!1,s=(0,p.getQuadrant)(e.multiplier.toDecimal()),f=e.multiplier.sign(),g=e.multiplier.abs();if(e.multiplier=g,e.isPi()&&e.isLinear()){if((0,a.isInt)(g))throw new c.UndefinedError("csc is undefined for "+e.toString());g.num;var d=g.den;2==d?(t=new n.Symbol(1),r=!0):3==d?(t=(0,m.parse)("2/sqrt(3)"),r=!0):4==d?(t=(0,m.parse)("sqrt(2)"),r=!0):6==d?(t=new n.Symbol(2),r=!0):t=(0,h.multiply)(new n.Symbol(f),(0,n.symfunction)("csc",[e]))}return t||(t=(0,h.multiply)(new n.Symbol(f),(0,n.symfunction)("csc",[e]))),!r||3!==s&&4!==s||t.negate(),t},cot:function(e){if(i.Settings.PARSE2NUMBER)return e%(Math.PI/2)==0?new n.Symbol(0):e.isConstant()?i.Settings.USE_BIG?new n.Symbol(new(o())(1).dividedBy(o().tan(e.multiplier.toDecimal()))):new n.Symbol(u.Math2.cot(e.valueOf())):e.isImaginary()?l.Z.evaluate(e,"cot"):(0,m.parse)((0,a.format)("1/tan({0})",e));var t,r=!1,s=(0,p.getQuadrant)(e.multiplier.toDecimal()),h=e.multiplier;if(e.multiplier=h,e.isPi()&&e.isLinear()){if((0,a.isInt)(h))throw new c.UndefinedError("cot is undefined for "+e.toString());h.num;var f=h.den;2==f?t=new n.Symbol(0):3==f?(t=(0,m.parse)("1/sqrt(3)"),r=!0):4==f?(t=new n.Symbol(1),r=!0):6==f?(t=(0,m.parse)("sqrt(3)"),r=!0):t=(0,n.symfunction)("cot",[e])}return t||(t=(0,n.symfunction)("cot",[e])),!r||2!==s&&4!==s||t.negate(),t},acos:function(e){if(i.Settings.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=e.toString();return(0,f.expand)((0,m.evaluate)(`pi/2-asin(${t})`))}return i.Settings.USE_BIG?new n.Symbol(o().acos(e.multiplier.toDecimal())):new n.Symbol(Math.acos(e.valueOf()))}if(e.isImaginary())return l.Z.evaluate(e,"acos")}return(0,n.symfunction)("acos",arguments)},asin:function(e){if(i.Settings.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=i.Settings.IMAGINARY,r=e.multiplier.toDecimal();return(0,f.expand)((0,m.evaluate)(`${t}*log(sqrt(1-${r}^2)-${t}*${r})`))}return i.Settings.USE_BIG?new n.Symbol(o().asin(e.multiplier.toDecimal())):new n.Symbol(Math.asin(e.valueOf()))}if(e.isImaginary())return l.Z.evaluate(e,"asin")}return(0,n.symfunction)("asin",arguments)},atan:function(e){var t;if(e.equals(0))t=new n.Symbol(0);else{if(i.Settings.PARSE2NUMBER)return e.isConstant()?i.Settings.USE_BIG?new n.Symbol(o().atan(e.multiplier.toDecimal())):new n.Symbol(Math.atan(e.valueOf())):e.isImaginary()?l.Z.evaluate(e,"atan"):(0,n.symfunction)("atan",arguments);t=e.equals(-1)?(0,m.parse)("-pi/4"):(0,n.symfunction)("atan",arguments)}return t},asec:function(e){if(i.Settings.PARSE2NUMBER){if(e.equals(0))throw new c.OutOfFunctionDomainError("Input is out of the domain of sec!");if(e.isConstant())return g.acos(e.invert());if(e.isImaginary())return l.Z.evaluate(e,"asec")}return(0,n.symfunction)("asec",arguments)},acsc:function(e){if(i.Settings.PARSE2NUMBER){if(e.isConstant())return g.asin(e.invert());if(e.isImaginary())return l.Z.evaluate(e,"acsc")}return(0,n.symfunction)("acsc",arguments)},acot:function(e){if(i.Settings.PARSE2NUMBER){if(e.isConstant())return new h.add((0,m.parse)("pi/2"),g.atan(e).negate());if(e.isImaginary())return l.Z.evaluate(e,"acot")}return(0,n.symfunction)("acot",arguments)},atan2:function(e,t){if(e.equals(0)&&t.equals(0))throw new c.UndefinedError("atan2 is undefined for 0, 0");return i.Settings.PARSE2NUMBER&&e.isConstant()&&t.isConstant()?new n.Symbol(Math.atan2(e,t)):(0,n.symfunction)("atan2",arguments)}}},3761:(e,t,r)=>{"use strict";r.r(t),r.d(t,{LaTeX:()=>l});var n=r(240),i=r(9569),s=r(5963),o=r(7898),a=r(8473),u=r(131);class l{static space="~";static dot=" \\cdot ";static _parser;static get parser(){return l._parser||(l._parser=l.createParser()),l._parser}static createParser(){var e=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],t=new u.Parser;for(var r in t)-1===e.indexOf(r)&&delete t[r];return t.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),t.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),t.getBrackets()["{"].maps_to=void 0,t}static latex(e,t){if(e.clone&&(e=e.clone()),e instanceof a.F&&(e=e.elements),Array.isArray(e)){for(var r=[],n=0;n<e.length;n++){var c=e[n];(0,i.isSymbol)(c)||(c=(0,u.parse)(c)),r.push(this.latex(c,t))}return this.brackets(r.join(", "),"square")}if((0,i.isMatrix)(e)){var p="\\begin{pmatrix}\n";for(n=0;n<e.elements.length;n++){for(var h=[],f=e.elements[n],m=0;m<f.length;m++)h.push(this.latex(f[m],t));p+=h.join(" & "),n<e.elements.length-1&&(p+="\\\\\n")}return p+"\\end{pmatrix}"}if((0,i.isVector)(e)){for(p="\\left[",n=0;n<e.elements.length;n++)p+=this.latex(e.elements[n],t)+" "+(n!==e.elements.length-1?",\\,":"");return p+"\\right]"}if((0,o.D)(e)){for(p="\\{",n=0;n<e.elements.length;n++)p+=this.latex(e.elements[n],t)+" "+(n!==e.elements.length-1?",\\,":"");return p+"\\}"}var g,d="decimal"===t||"decimals"===t,v=(e=e.clone()).power,y=(0,i.isNegative)(v),b=e.multiplier.lessThan(0);if(e.group===s.Groups.P&&d)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),g=d?[String(e.multiplier.toDecimal()),""]:[e.multiplier.num,e.multiplier.den];var w,S=this.value(e,y,t,b);y&&v.negate(),d?(w=(0,i.isSymbol)(v)?l.latex(v,t):String(v.toDecimal()),"1"===String(w)&&(w="")):w=(0,i.isSymbol)(v)?this.latex(v,t):this.formatFrac(v,!0);var E=["",""];return E[y?1:0]=w,((b?"-":"")+this.set(g,S,E,e.group===s.Groups.CB)).replace(/\+\-/gi,"-")}static greek={alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"};static symbols={arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"};static value(e,t,r,o){var a=e.group,u=e.previousGroup,c=["",""],p=t?1:0;if(e.isInfinity)c[p]="\\infty";else if(a===s.Groups.S||a===s.Groups.P||u===s.Groups.S||u===s.Groups.P||u===s.Groups.N){(O=this.formatSubscripts(e.value)).replace&&(O=O.replace(/(.+)_$/,"$1\\_"));var h=String(O).split("_"),f=this.greek[h[0]];f&&(h[0]=f,O=h.join("_")),(e=this.symbols[h[0]])&&(h[0]=e,O=h.join("_")),c[p]=O}else if(a===s.Groups.FN||u===s.Groups.FN){for(var m=[],g=e.fname,d=0;d<e.args.length;d++){var v;v="string"==typeof(y=e.args[d])?y:this.latex(y,r),m.push(v)}if(g===n.Settings.SQRT)c[p]="\\sqrt"+this.braces(m.join(","));else if(g===n.Settings.ABS)c[p]=this.brackets(m.join(","),"abs");else if(g===n.Settings.PARENTHESIS)c[p]=this.brackets(m.join(","),"parens");else if("limit"===g)c[p]=" \\lim\\limits_{"+m[1]+" \\to "+m[2]+"} "+m[0];else if("integrate"===g)c[p]="\\int"+this.braces(m[0])+this.braces("d"+m[1]);else if("defint"===g)c[p]="\\int\\limits_"+this.braces(m[1])+"^"+this.braces(m[2])+" "+m[0]+" d"+m[3];else if(g===n.Settings.FACTORIAL||g===n.Settings.DOUBLEFACTORIAL){var y;(y=e.args[0]).power.equals(1)&&(y.isComposite()||y.isCombination())&&(m[0]=this.brackets(m[0])),c[p]=m[0]+(g===n.Settings.FACTORIAL?"!":"!!")}else if("floor"===g)c[p]="\\left \\lfloor"+this.braces(m[0])+"\\right \\rfloor";else if("ceil"===g)c[p]="\\left \\lceil"+this.braces(m[0])+"\\right \\rceil";else if(g===n.Settings.LOG&&m.length>1)c[p]="\\mathrm"+this.braces(n.Settings.LOG)+"_"+this.braces(m[1])+this.brackets(m[0]);else if(g===n.Settings.LOG10)c[p]="\\mathrm"+this.braces(n.Settings.LOG)+"_"+this.braces(10)+this.brackets(m[0]);else if("sum"===g){var b=m[0],w=m[1],S=m[2],E=m[3];c[p]="\\sum\\limits_{"+this.braces(w)+"="+this.braces(S)+"}^"+this.braces(E)+" "+this.braces(b)}else if("product"===g)b=m[0],w=m[1],S=m[2],E=m[3],c[p]="\\prod\\limits_{"+this.braces(w)+"="+this.braces(S)+"}^"+this.braces(E)+" "+this.braces(b);else if("nthroot"===g)c[p]="\\sqrt["+m[1]+"]"+this.braces(m[0]);else if("mod"===g)c[p]=m[0]+" \\bmod "+m[1];else if("realpart"===g)c[p]="\\operatorname{Re}"+this.brackets(m[0]);else if("imagpart"===g)c[p]="\\operatorname{Im}"+this.brackets(m[0]);else{var M=""!==g?"\\mathrm"+this.braces(g.replace(/_/g,"\\_")):"";e.isConversion?c[p]=M+this.brackets(m.join(""),"parens"):c[p]=M+this.brackets(m.join(","),"parens")}}else if(e.isComposite()){var N=e.collectSymbols().sort(a===s.Groups.CP||u===s.Groups.CP?function(e,t){return t.group-e.group}:function(e,t){var r=(0,i.isSymbol)(e.power)?-1:e.power;return((0,i.isSymbol)(t.power)?-1:t.power)-r}),P=[],x=N.length;for(d=0;d<x;d++)P.push(l.latex(N[d],r));var O=P.join("+");c[p]=e.isLinear()&&e.multiplier.equals(1)&&!o?O:this.brackets(O,"parens")}else if(a===s.Groups.CB||u===s.Groups.EX||u===s.Groups.CB){a===s.Groups.CB&&e.distributeExponent();var A=[],G=[],I=[],C=[],R=0,T=0,_=function(e,t,r){if(r>1&&t.length>0)for(var n=t.length,i=0;i<n;i++){var s=t[i],o=e[s];/^\\left\(.+\\right\)\^\{.+\}$/g.test(o)||/^\\left\(.+\\right\)$/g.test(o)||(e[s]=l.brackets(o,"parens"))}return e};e.each((function(t){var n;(0,i.isNegative)(t.power)?(n=l.latex(t.invert(),r),T++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(n=l.brackets(n,"parens")),I.push(A.length)),A.push(n)):(n=l.latex(t,r),R++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(n=l.brackets(n,"parens")),C.push(G.length)),G.push(n))})),_(G,C,R),c[0]=G.join(this.dot),_(A,I,T),c[1]=A.join(this.dot)}return c}static set(e,t,r,n){var i=function(e){return/^\\left\(.+\\right\)$/.test(e)};if(r&&(r=this.formatP(r)),n){var s=r[0];r[0]=""}t=this.merge(t,r);var o=e[0],a=e[1],u=t[0],l=t[1];u&&1===Number(o)&&(o=""),1===Number(a)&&(a="");var c=this.join(o,u,i(u)?"":this.dot),p=this.join(a,l,i(l)?"":this.dot);if(c&&p){var h=this.frac(c,p);return n&&s&&(h=this.brackets(h)+s),h}return c}static merge(e,t){for(var r=[],n=0;n<2;n++)r[n]=e[n]+t[n];return r}static join(e,t,r){return e||t?e&&!t?e:t&&!e?t:e+r+t:""}static formatSubscripts(e){for(var t=e.toString().split("_"),r="";t.length>1;)t.length>0&&(r="_"+this.braces(t.pop()+r));return t[0]+r}static formatP(e){for(var t=0;t<2;t++){var r=e[t];r&&(e[t]="^"+this.braces(r))}return e}static formatFrac(e,t){var r=e.num.toString(),n=e.den.toString();return t&&"1"===r&&"1"===n?"":"1"===n?r:this.frac(r,n)}static frac(e,t){return"\\frac"+this.braces(e)+this.braces(t)}static braces(e){return"{"+e+"}"}static brackets(e,t){var r={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]}[t=t||"parens"];return"\\left"+r[0]+e+"\\right"+r[1]}static filterTokens(e){var t=[];Array.isArray(e)&&(t.type=e.type);for(var r=["\\","left","right","big","Big","large","Large"],n=0,i=e.length;n<i;n++){var s=e[n],o=e[n+1];"\\"===s.value&&"\\"===o.value?t.push(s):Array.isArray(s)?t.push(l.filterTokens(s)):-1===r.indexOf(s.value)&&t.push(s)}return t}static parse(e){var t,r="",s=this.filterTokens(e),o={cdot:"",times:"",infty:"Infinity"},a=function(e){return s[void 0===e?++t:t+=e]},u=function(){return l.parse(a())},c=function(e){return e in o?o[e]:"*"===e&&"&"===s[t+1].value?(a(2),","):"&"===e?(a(),","):"\\"===e?"],[":e};for(t=0,m=s.length;t<m;t++){var p=s[t];if("frac"===p.value)r+=u()+"/"+u();else if(p.value in l.symbols)if(p.value===n.Settings.SQRT&&"vector"===s[t+1].type&&"Set"===s[t+2].type){var h=u();r+=u()+"^"+(0,i.inBrackets)("1/"+h)}else r+=p.value+u();else if("int"===p.value){var f=u();t++,d=c((d=a().value).substring(1,d.length)),r+="integrate"+(0,i.inBrackets)(f+","+d)}else if("int_"===p.value){var m=u();if(t++,void 0===(g=a().value)){t--;var g=u()}if(f=u(),","===(d=a().value))var d=a().value;"differentialD"===d&&(t++,d=a().value),"mathrm"===d&&(t++,d=a().value),r+="defint"+(0,i.inBrackets)(f+","+m+","+g+","+d)}else if(p.value&&p.value.startsWith("int_"))m=p.value.replace("int_",""),console.log("uppernow"),t++,void 0===(g=a().value)&&(t--,g=u()),f=u(),","===(d=a().value)&&(d=a().value),"differentialD"===d&&(t++,d=a().value),"mathrm"===d&&(t++,d=a().value),r+="defint"+(0,i.inBrackets)(f+","+m+","+g+","+d);else if("mathrm"===p.value)r+=(f=s[++t][0].value)+u();else if("sum_"===p.value||"prod_"===p.value){var v="sum_"===p.value?"sum":"product",y=a();t++;var b=u();f=u(),r+=v+(0,i.inBrackets)([f,c(y[0]),c(y[2]),c(b)].join(","))}else"lim_"===p.value?(y=a(),r+="limit"+(0,i.inBrackets)([u(),c(y[0]),c(y[2])].join(","))):"begin"===p.value?(y=a(),Array.isArray(y)&&"matrix"===y[0].value&&(r+="matrix([")):"end"===p.value?(y=a(),Array.isArray(y)&&"matrix"===y[0].value&&(r+="])")):Array.isArray(p)?r+=c(l.parse(p)):r+=c(p.value.toString())}return(0,i.inBrackets)(r)}}},6042:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Build:()=>l});var n=r(1548),i=r(5037),s=r(9569),o=r(7810),a=r(5963),u=r(131);const l={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":n.Math2.gamma},gamma_incomplete:{"Math2.factorial":n.Math2.factorial},Li:{"Math2.Ei":n.Math2.Ei,"Math2.bigLog":n.Math2.bigLog,Frac:i.Frac},Ci:{"Math2.factorial":n.Math2.factorial},Ei:{"Math2.factorial":n.Math2.factorial},Si:{"Math2.factorial":n.Math2.factorial},Shi:{"Math2.factorial":n.Math2.factorial},Chi:{isInt:s.isInt,nround:s.nround,"Math2.num_integrate":n.Math2.num_integrate},factor:{"Math2.ifactor":n.Math2.ifactor,Symbol:o.Symbol},num_integrate:{"Math2.simpson":n.Math2.simpson,nround:s.nround},fib:{even:s.even}},reformat:{diff:function(e,t){var r=e.args[1].toString(),i="var f = "+l.build(e.args[0].toString(),[r])+";";return t[1]+="var diff = "+n.Math2.diff.toString()+";",t[1]+=i,["diff(f)("+r+")",t]}},getProperName:function(e){return{continued_fraction:"continuedFraction"}[e]||e},compileDependencies:function(e,t){var r=l.dependencies[e],n=t&&t[1]?t[1]:"",i=t&&t[0]?t[0]:{};for(var s in r)if("object"!=typeof r[s]){var o=s.split(".");n+="var "+(o.length>1?o[1]:o[0])+"="+r[s]+";",i[s]=o.pop()}return[i,n]},getArgsDeps:function(e,t){for(var r=e.args,n=0;n<r.length;n++)e.args[n].each((function(e){e.group===a.Groups.FN&&(t=l.compileDependencies(e.fname,t))}));return t},build:function(e,t){var r=(e=(0,s.block)("PARSE2NUMBER",(function(){return(0,u.parse)(e)}),!0)).variables(),i=[],c=[],p=function(e,t){""===e.fname&&(e=o.Symbol.unwrapPARENS(e)),t=t||[];var r,h=[],f=e.group,m="",g=function(r){var n=r===a.Groups.CB?"*":"+",i=[];for(var o in e.symbols){var u=e.symbols[o],l=p(u,t)[0];u.isComposite()&&(l=(0,s.inBrackets)(l)),i.push(l)}var c=i.join(n);return c&&!e.multiplier.equals(1)?(0,s.inBrackets)(c):c},d=function(r){var o;return r in Math?o="Math."+r:(r=l.getProperName(r),-1===i.indexOf(r)&&(t.push("var "+r+" = "+n.Math2[r].toString()+"; "),i.push(r)),o=r),o+=(0,s.inBrackets)(e.args.map((function(e){return p(e,t)[0]})).join(",")),o};if(f===a.Groups.N?h.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?m="-":e.multiplier.equals(1)||h.push(e.multiplier.toDecimal()),f===a.Groups.S||f===a.Groups.P)r=e.value;else if(f===a.Groups.FN)if(c=l.compileDependencies(e.fname,c),c=l.getArgsDeps(e,c),l.reformat[e.fname]){var v=l.reformat[e.fname](e,c);c=v[1],r=v[0]}else r=d(e.fname);else if(f===a.Groups.EX){var y=e.previousGroup;y===a.Groups.N||y===a.Groups.S?r=e.value:y===a.Groups.FN?(r=d(e.fname),c=l.compileDependencies(e.fname,c),c=l.getArgsDeps(e,c)):r=g(e.previousGroup)}else r=g(e.group);if(e.group!==a.Groups.N&&!e.power.equals(1)){var b=p((0,u.parse)(e.power));t.push(b[1]),r="Math.pow"+(0,s.inBrackets)(r+","+b[0])}return r&&h.push(m+r),[h.join("*"),t.join("").replace(/\n+\s+/g," ")]};t&&(r=t);var h=p(e);for(var f in c[0]){h[1]=h[1].replace("exports.",""),c[1]=c[1].replace("exports.","");var m=c[0][f];h[1]=h[1].replace(f,m),c[1]=c[1].replace(f,m)}return new Function(r,(c[1]||"")+h[1]+" return "+h[0]+";")}}},4128:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Expression:()=>p});var n=r(240),i=r(6042),s=r(4583),o=r(3761),a=r(9569),u=r(3116),l=r(6870),c=r(131);class p{static $EXPRESSIONS;symbol;constructor(e){this.symbol=e}static getExpression(e,t=!1){"last"!==e&&e||(e=p.$EXPRESSIONS.length),"first"===e&&(e=1);let r=e-1,n=p.$EXPRESSIONS[r];return n?new p(n):n}text(e="decimals",t=0){return t=t||19,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):(0,s.text)(this.symbol,e,void 0,t)}latex(e){return this.symbol.latex?this.symbol.latex(e):o.LaTeX.latex(this.symbol,e)}valueOf(){return this.symbol.valueOf()}evaluate(){if((0,a.isVector)(this.symbol)&&0===this.symbol.dimensions())return this;let e,t=arguments[0],r=1;"string"==typeof t?e="%"===t.charAt(0)?p.getExpression(t.substr(1)).text():t:t instanceof p||(0,a.isSymbol)(t)?e=t.text():(e=this.symbol.text(),r--);let n=arguments[r]||{};return new p((0,a.block)("PARSE2NUMBER",(function(){return(0,c.parse)(e,n)}),!0,this))}buildFunction(e){return i.Build.build(this.symbol,e)}isNumber(){return(0,a.isNumericSymbol)(this.symbol)}isInfinity(){return Math.abs(this.symbol.multiplier)===1/0}isImaginary(){return(0,c.evaluate)((0,c.parse)(this.symbol)).isImaginary()}variables(){return(0,a.isSymbol)(this.symbol)?this.symbol.variables():[]}toString(){try{return Array.isArray(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}}toDecimal(e){n.Settings.precision=e;let t=(0,s.text)(this.symbol,"decimals");return n.Settings.precision=void 0,t}isFraction(){return(0,a.isFraction)(this.symbol)}isPolynomial(){return this.symbol.isPoly()}sub(e,t){return new p(this.symbol.sub((0,c.parse)(e),(0,c.parse)(t)))}operation(e,t){return isExpression(t)?t=t.symbol:(0,a.isSymbol)(t)||(t=(0,c.parse)(t)),new p(c.ParseDeps.parser.getAction(e)(this.symbol.clone(),t.clone()))}add(e){return this.operation("add",e)}subtract(e){return this.operation("subtract",e)}multiply(e){return this.operation("multiply",e)}divide(e){return this.operation("divide",e)}pow(e){return this.operation("pow",e)}expand(){return new p((0,l.expand)(this.symbol))}each(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(Array.isArray(this.symbol))for(let t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)}eq(e){(0,a.isSymbol)(e)||(e=(0,c.parse)(e));try{return(0,u.subtract)(this.symbol.clone(),e).equals(0)}catch(e){return!1}}lt(e){(0,a.isSymbol)(e)||(e=(0,c.parse)(e));try{return(0,c.evaluate)((0,u.subtract)(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}}gt(e){(0,a.isSymbol)(e)||(e=(0,c.parse)(e));try{return(0,c.evaluate)((0,u.subtract)(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}}gte(e){return this.gt(e)||this.eq(e)}lte(e){return this.lt(e)||this.eq(e)}numerator(){return new p(this.symbol.getNum())}denominator(){return new p(this.symbol.getDenom())}hasFunction(e){return this.symbol.containsFunction(e)}contains(e){return this.symbol.contains(e)}toTeX(e){return this.latex(e)}}},131:(e,t,r)=>{"use strict";r.r(t),r.d(t,{ParseDeps:()=>b,Parser:()=>y,evaluate:()=>S,parse:()=>w});var n=r(8473),i=r(2910),s=r(1649),o=r(7460),a=r(1050),u=r(7810),l=r(240),c=r(6328),p=r(7898),h=r(1789),f=r(9569);class m{deps;variables;peekers;constructor(e,t,r){this.deps=e,this.peekers=r,this.variables=t}static TokensToRPN(e){const t=e.type,r=e.length,n=[],i=[],o=[],a=function(e,t){for(;e.length;)t.push(e.pop())};let u;for(u=0;u<r;u++){let t=e[u];if(t.type!==s.Token.OPERATOR)break;if(!t.prefix)throw new h.OperatorError("Not a prefix operator");t.is_prefix=!0,i.push(t)}for(;u<r;u++){let r=e[u];if(r.type===s.Token.OPERATOR){let a=r;if(a.overloaded){let t=e[u+1];t&&t.type===s.Token.VARIABLE_OR_LITERAL&&(a.postfix=!1,a.action=a.overloadAction,a.leftAssoc=a.overloadLeftAssoc)}for(;i.length;){let e=i[i.length-1];if(!(e.precedence>a.precedence||!a.leftAssoc&&e.precedence===a.precedence))break;n.push(i.pop())}if("vector"!==t&&"set"!==t||!("vectorFn"in a)||(a.action=a.vectorFn),a.postfix){let t=e[u-1];if(!t)throw new h.OperatorError("Unexpected prefix operator '"+r.value+"'! at "+r.column);if(t.type===s.Token.OPERATOR&&!t.postfix)throw new h.OperatorError("Unexpected prefix operator '"+t.value+"'! at "+t.column)}else{let t;do{let r=e[u+1];if(t=!!r&&r.type===s.Token.OPERATOR,t){if(!r.prefix)throw new h.OperatorError("A prefix operator was expected at "+r.column);r.is_prefix=!0,o.push(r),u++}}while(t)}for(a.is_prefix?o.push(a):i.push(a);o.length&&(a.leftAssoc||!a.leftAssoc&&o[o.length-1].precedence>=a.precedence);)i.push(o.pop())}else if(r.type===s.Token.VARIABLE_OR_LITERAL){0===n.length&&a(o,i),n.push(r);let e=i[i.length-1];e&&e.leftAssoc||a(o,n)}else r.type===s.Token.FUNCTION?i.push(r):r.type===s.Token.UNIT&&n.push(r);Array.isArray(r)&&(n.push(m.TokensToRPN(r)),r.type&&n.push(new s.Token(r.type,s.Token.FUNCTION,r.column)))}return a(i,n),a(o,n),n}parseRPN(e,t={}){let r=this.deps;t=t||{};for(let e in t)t[e]=w(t[e],{});l.Settings.PARSE2NUMBER&&("e"in t||(t.e=new u.Symbol(l.Settings.E)),"pi"in t||(t.pi=new u.Symbol(l.Settings.PI)));let o=[];for(let a=0,f=e.length;a<f;a++){let f=e[a];if(Array.isArray(f)&&(f=this.parseRPN(f,t)),f)if(f.type===s.Token.OPERATOR)if(f.is_prefix||f.postfix)o.push(f.operation(o.pop()));else{let e=o.pop(),t=o.pop();if(void 0===t)throw new h.OperatorError(f+" is not a valid postfix operator at "+f.column);let n="comma"===f.action;t instanceof p.l&&!n&&(t=c.Vector.fromSet(t)),e instanceof p.l&&!n&&(e=c.Vector.fromSet(e)),this.callPeekers("pre_operator",t,e,f);let i=r.getAction(f.action)(t,e);this.callPeekers("post_operator",i,t,e,f),o.push(i)}else if(f.type===s.Token.FUNCTION){let t=o.pop(),u=t.parent;t instanceof n.F||(t=n.F.create(t));let l=f.value,p=t.getItems();this.callPeekers("pre_function",l,p);let m=r.callfunction(l,p);this.callPeekers("post_function",m,l,p);let g=o[o.length-1],d=e[a+1];if(d&&d.type===s.Token.OPERATOR&&","===d.value||!(m instanceof c.Vector)||!g||!g.elements||g instanceof n.F)u&&(m.parent=u),o.push(m);else{let e=o.pop(),t=m.elements[0];if(t.isConstant())if(t instanceof i.p)o.push(c.Vector.fromArray(e.elements.slice(t.start,t.end)));else{let r=Number(t),n=e.elements.length;if(r<0&&(r=n+r),r<0||r>=n)throw new h.OutOfRangeError("Index out of range "+(f.column+1));let i=e.elements[r];e.getter=r,i.parent=e,o.push(i)}else e.getter=t,o.push(e),o.push(m)}}else{let e,r=f.value;r in l.Settings.ALIASES?f=w(l.Settings.ALIASES[f]):f.type===s.Token.VARIABLE_OR_LITERAL?f=new u.Symbol(r):f.type===s.Token.UNIT&&(f=new u.Symbol(r),f.isUnit=!0),this.variables.isConstant(r)?(e=f,f=new u.Symbol(this.variables.getConstant(r))):r in t&&r!==t[r].toString()?(e=f,f=t[r].clone()):this.variables.isVar(r)&&(e=f,f=this.variables.getVar(r).clone()),e&&(f.subbed=e),o.push(f)}}let a=o[0];if(-1!==["undefined","string","number"].indexOf(typeof a))throw new h.UnexpectedTokenError(`Unexpected token: ${typeof a}, ${a}`);return a}callPeekers(e){if(l.Settings.callPeekers){let t=this.peekers[e],r=(0,f.arguments2Array)(arguments).slice(1).map((e=>e?String(e):e));for(let e=0;e<t.length;e++)t[e].apply(null,r)}}}var g=r(5963),d=r(3761),v=r(3116);class y{classes={Collection:n.F,Slice:i.p,Token:s.Token};trig=o.b;trigh=a.f;error=h.err;symfunction=u.symfunction;tokenizer;operators;functionProvider;variables;bin={};constructor(e,t,r,n,i,s){this.tokenizer=e,this.operators=t,this.functionProvider=r,this.variables=n,this.peekers=i,this.units=s,t.injectOperatorsDeps({registerOperator:(e,t)=>this.setAction(e,t)})}getAction(e){return this[e]}setAction(e,t){this[e]=t}setOperator(e,t,r){this.operators.setOperator(e,t,r)}initConstants(){this.variables.setConstant("E",new u.Symbol(l.Settings.E)),this.variables.setConstant("PI",new u.Symbol(l.Settings.PI))}parse(e,t={}){let r=this.tokenizer.tokenize(e,!0),n=this.toRPN(r);return this.parseRPN(n,t)}tokenize(e){return this.tokenizer.tokenize(e,!1)}toRPN(e){return m.TokensToRPN(e)}parseRPN(e,t){return new m({callfunction:(...e)=>this.callfunction(...e),getAction:e=>this.getAction(e).bind(this)},this.variables,this.peekers).parseRPN(e,t)}extend(e,t,r){let n=this.getAction(e);if("function"==typeof n&&"function"==typeof t){let i=n;this.setAction(e,((e,n)=>(0,f.isSymbol)(e)&&(0,f.isSymbol)(n)&&!r?i.call(this,e,n):t.call(this,e,n,i)))}}override(e,t){this.bin[e]||(this.bin[e]=[]),this.bin[e].push(this[e]),this[e]=t}restore(e){this[e]&&(this[e]=this.bin[e].pop())}clean(e){let t,r=e.group;if(r===g.Groups.CP){let r=e.getNum(),n=e.getDenom()||new u.Symbol(1),i=Number(e.power),s=new u.Symbol(1);if(1===Math.abs(i)){n.each((e=>{e.group===g.Groups.CB?s=(0,v.multiply)(s,this.clean(e.getDenom())):e.power.lessThan(0)&&(s=(0,v.multiply)(s,this.clean(e.clone().toUnitMultiplier())))}));let e,i=new u.Symbol(0);n.each((function(e){i=(0,v.add)((0,v.divide)(e,s.clone()),i)})),s.invert(),r.isComposite()?(e=new u.Symbol(0),r.each((t=>{e=(0,v.add)((0,v.multiply)(this.clean(t),s.clone()),e)}))):e=(0,v.multiply)(s,r),t=(0,v.divide)(e,i)}}else r===g.Groups.CB?(t=new u.Symbol(1),e.each((e=>{t=(0,v.multiply)(t,this.clean(e))}))):r===g.Groups.FN&&1===e.args.length&&e.args[0].isConstant()&&(t=(0,f.block)("PARSE2NUMBER",(()=>this.parse(e)),!0));return t||(t=e),t}callfunction(e,t,r){let n=this.functionProvider.getFunctionDescriptor(e);n||(0,h.err)("Nerdamer currently does not support the function "+e);let i,s=n[1]||r,o=n[0];if(t instanceof Array||(t=void 0!==t?[t]:[]),-1!==s){let r=(0,f.isArray)(s),n=r?s[0]:s,i=r?s[1]:s,o=t.length,a=e+" requires a {0} of {1} arguments. {2} provided!";o<n&&(0,h.err)((0,f.format)(a,"minimum",n,o)),o>i&&(0,h.err)((0,f.format)(a,"maximum",i,o))}let a=(0,f.allNumbers)(t);if(o){let e=n[2]||{};e.parser=this,i=o.apply(e,t)}else o=this.functionProvider.findFunction(e),i=l.Settings.PARSE2NUMBER&&a?(0,u.bigConvert)(o.apply(o,t)):(0,u.symfunction)(e,t);return i}getFunction(e){return this.functionProvider.getFunctionDescriptors(e)[0]}toObject(e){let t=e=>{let r=[];for(let n=0,i=e.length;n<i;n++){let i=e[n],o=i.value;if(i.type===s.Token.VARIABLE_OR_LITERAL)r.push(new u.Symbol(o));else if(i.type===s.Token.FUNCTION){n++;let i=(0,u.symfunction)(o,t(e[n]));i.isConversion=!0,r.push(i)}else i.type===s.Token.OPERATOR?r.push(o):r.push(t(i))}return r};return t(this.tokenize(e))}remove_redundant_powers=function(e){let t=[];for(;e.length;){let r=e.shift(),n=e[0],i=(0,f.isArray)(n),s="-"===n;if("^"===r&&("+"===n?e.shift():i&&"+"===n[0]&&n.shift(),i&&1===n.length&&e.unshift(e.shift()[0])),"^"===r&&(i&&"-"===n[0]||s)){let s=t.pop(),o=t[t.length-1],a="1";"*"===o?(t.pop(),a=t.pop()):(0,f.isArray)(o)&&(a=t.pop()),t.push(a,"/",s,r),i?n.shift():e.shift(),i&&1===n.length&&t.push(e.shift()[0])}else t.push(r)}return t};chunkAtCommas(e){let t=[[]];for(let r=0,n=0,i=e.length;r<i;r++)","===e[r]?(n++,t[n]=[]):t[n].push(e[r]);return t}rem_brackets(e){return e.replace(/^\\left\((.+)\\right\)$/g,(function(e,t){return t||e}))}toTeX(e,t){let r=!0===(t=t||{}).decimals?"decimals":void 0,n="string"==typeof e?this.toObject(e):e,i=[],s=void 0===t.cdot?"\\cdot":t.cdot;if(n=this.remove_redundant_powers(n),(0,f.isArray)(n)){let e,t,r=[];for(let i=0;i<n.length;i++)e=n[i],"^"===n[i+1]?(t=n[i+2],r.push(d.LaTeX.braces(this.toTeX([e]))+"^"+d.LaTeX.braces(this.toTeX([t]))),i+=2):r.push(e);n=r}for(let e=0,t=n.length;e<t;e++){let t=n[e];if("*"===t&&(t=s),(0,f.isSymbol)(t))if(t.group===g.Groups.FN){let e,n=t.fname;if(n===l.Settings.SQRT)e="\\sqrt"+d.LaTeX.braces(this.toTeX(t.args));else if(n===l.Settings.ABS)e=d.LaTeX.brackets(this.toTeX(t.args),"abs");else if(n===l.Settings.PARENTHESIS)e=d.LaTeX.brackets(this.toTeX(t.args),"parens");else if(n===l.Settings.LOG10)e="\\"+l.Settings.LOG10_LATEX+"\\left( "+this.toTeX(t.args)+"\\right)";else if("integrate"===n){let r=this.chunkAtCommas(t.args);e="\\int "+d.LaTeX.braces(this.toTeX(r[0]))+"\\, d"+this.toTeX(r[1])}else if("defint"===n){let r=this.chunkAtCommas(t.args),n=d.LaTeX.braces(this.toTeX(r[0])),i=this.toTeX(r[3]);e="\\int\\limits_{"+this.toTeX(r[1])+"}^{"+this.toTeX(r[2])+"} "+n+"\\, d"+i}else if("diff"===n){let r=this.chunkAtCommas(t.args),n="",i=d.LaTeX.braces(this.toTeX(r[0]));if(1===r.length){let e=[];for(let t=0;t<r[0].length;t++)3===r[0][t].group&&e.push(r[0][t].value);e.sort(),n=e.length>0?"\\frac{d}{d "+e[0]+"}":"\\frac{d}{d x}"}else n=2===r.length?"\\frac{d}{d "+r[1]+"}":"\\frac{d^{"+r[2]+"}}{d "+this.toTeX(r[1])+"^{"+r[2]+"}}";e=n+"\\left("+i+"\\right)"}else if("sum"===n||"product"===n){let r,i=[[],[],[],[]],s=0;for(r=0;r<t.args.length;r++)","!==t.args[r]?i[s].push(t.args[r]):s++;e=("sum"===n?"\\sum_":"\\prod_")+d.LaTeX.braces(this.toTeX(i[1])+" = "+this.toTeX(i[2])),e+="^"+d.LaTeX.braces(this.toTeX(i[3]))+d.LaTeX.braces(this.toTeX(i[0]))}else if("limit"===n){let r=this.chunkAtCommas(t.args).map((e=>Array.isArray(e)?this.toTeX(e.join("")):this.toTeX(String(e))));e="\\lim_"+d.LaTeX.braces(r[1]+"\\to "+r[2])+" "+d.LaTeX.braces(r[0])}else e=n===l.Settings.FACTORIAL||n===l.Settings.DOUBLEFACTORIAL?this.toTeX(t.args)+(n===l.Settings.FACTORIAL?"!":"!!"):d.LaTeX.latex(t,r);i.push(e)}else i.push(d.LaTeX.latex(t,r));else(0,f.isArray)(t)?i.push(d.LaTeX.brackets(this.toTeX(t))):"/"===t?i.push(d.LaTeX.frac(this.rem_brackets(i.pop()),this.rem_brackets(this.toTeX([n[++e]])))):i.push(t)}return i.join(" ")}isOperator(e){return this.operators.isOperator()}getOperatorsClass(){return this.operators}getBrackets(){return this.operators.getBrackets()}get functions(){return this.getFunctions()}getFunctions(){return this.functionProvider.getFunctionDescriptors()}getFunctionProvider(){return this.functionProvider}comma(e,t){return e instanceof n.F||(e=n.F.create(e)),e.append(t),e}slice(e,t){return new i.p(e,t)}equals(e,t){return e.group===g.Groups.S||e.isLinear()||(0,h.err)("Cannot set equality for "+e.toString()),this.variables.setVar(e.value,t.clone()),t}percent(e){return(0,v.divide)(e,new u.Symbol(100))}assign(e,t){if(e instanceof n.F&&t instanceof n.F)return e.elements.map(((e,r)=>this.assign(e,t.elements[r]))),c.Vector.fromArray(t.elements);if(e.parent){let r=e.parent;return r.elements[r.getter]=t,delete r.getter,r}if(e.group!==g.Groups.S)throw new h.NerdamerValueError("Cannot complete operation. Incorrect LH value for "+e);return this.variables.setVar(e.value,t),t}function_assign(e,t){let r=e.elements.pop();return this.setFunction(r,e.elements,t)}bool2Symbol(e){return new u.Symbol(!0===e?1:0)}eq(e,t){return this.bool2Symbol(e.equals(t))}gt(e,t){return this.bool2Symbol(e.gt(t))}gte(e,t){return this.bool2Symbol(e.gte(t))}lt(e,t){return this.bool2Symbol(e.lt(t))}lte(e,t){return this.bool2Symbol(e.lte(t))}factorial(e){return(0,u.symfunction)(l.Settings.FACTORIAL,[e])}dfactorial(e){return(0,u.symfunction)(l.Settings.DOUBLEFACTORIAL,[e])}expand(e,t){return(0,v.expand)(e,t)}round(e,t){return(0,v.round)(e,t)}cbrt(e){return(0,v.cbrt)(e)}abs(e){return(0,v.abs)(e)}log(e,t){return(0,v.log)(e,t)}rationalize(e){return(0,v.rationalize)(e)}nthroot(e,t,r,n){return(0,v.nthroot)(e,t,r,n)}arg(e){return(0,v.arg)(e)}conjugate(e){return(0,v.conjugate)(e)}imagpart(e){return(0,v.imagpart)(e)}realpart(e){return(0,v.realpart)(e)}sqrt(e){return(0,v.sqrt)(e)}multiply(e,t){return(0,v.multiply)(e,t)}divide(e,t){return(0,v.divide)(e,t)}subtract(e,t){return(0,v.subtract)(e,t)}add(e,t){return(0,v.add)(e,t)}pow(e,t){return(0,v.pow)(e,t)}mod(e,t){return(0,v.mod)(e,t)}tree(e){let t=this.tokenize(e);return t=this.toRPN(t),this.tokenizer.tree(t)}setFunction(e,t,r){if((0,f.validateName)(e),!this.variables.isReserved(e)){t=t||this.parse(r).variables();const n=function(){let e={},t=this.params;for(let r=0;r<t.length;r++)e[t[r]]=String(arguments[r]);return this.parser.parse(this.body,e)};return this.functionProvider.setFunctionDescriptor(e,[n,t.length,{name:e,params:t,body:r}]),r}return null}}const b={parser:null};function w(e,t={}){return b.parser.parse(e,t)}function S(e,t){return(0,f.block)("PARSE2NUMBER",(function(){return w(e,t)}),!0)}},8295:(e,t,r)=>{"use strict";r.r(t),r.d(t,{FunctionProvider:()=>l});var n=r(240),i=r(1789),s=r(7460),o=r(1050),a=r(3116),u=r(6870);class l{functions={cos:[s.b.cos,1],sin:[s.b.sin,1],tan:[s.b.tan,1],sec:[s.b.sec,1],csc:[s.b.csc,1],cot:[s.b.cot,1],acos:[s.b.acos,1],asin:[s.b.asin,1],atan:[s.b.atan,1],arccos:[s.b.acos,1],arcsin:[s.b.asin,1],arctan:[s.b.atan,1],asec:[s.b.asec,1],acsc:[s.b.acsc,1],acot:[s.b.acot,1],atan2:[s.b.atan2,2],acoth:[o.f.acoth,1],asech:[o.f.asech,1],acsch:[o.f.acsch,1],sinh:[o.f.sinh,1],cosh:[o.f.cosh,1],tanh:[o.f.tanh,1],asinh:[o.f.asinh,1],sech:[o.f.sech,1],csch:[o.f.csch,1],coth:[o.f.coth,1],acosh:[o.f.acosh,1],atanh:[o.f.atanh,1],log10:[null,1],exp:[a.exp,1],radians:[a.radians,1],degrees:[a.degrees,1],min:[a.min,-1],max:[a.max,-1],erf:[null,1],floor:[null,1],ceil:[null,1],trunc:[null,1],Si:[null,1],step:[null,1],rect:[null,1],sinc:[a.sinc,1],tri:[null,1],sign:[a.sign,1],Ci:[null,1],Ei:[null,1],Shi:[null,1],Chi:[null,1],Li:[null,1],fib:[null,1],fact:[a.factorial,1],factorial:[a.factorial,1],continued_fraction:[a.continued_fraction,[1,2]],dfactorial:[null,1],gamma_incomplete:[null,[1,2]],round:[a.round,[1,2]],scientific:[a.scientific,[1,2]],mod:[a.mod,2],pfactor:[a.pfactor,1],vector:[a.vector,-1],matrix:[a.matrix,-1],Set:[a.set,-1],imatrix:[a.imatrix,-1],parens:[a.parens,-1],sqrt:[a.sqrt,1],cbrt:[a.cbrt,1],nthroot:[a.nthroot,2],log:[a.log,[1,2]],expand:[u.expandall,1],abs:[a.abs,1],invert:[a.invert,1],determinant:[a.determinant,1],size:[a.size,1],transpose:[a.transpose,1],dot:[a.dot,2],cross:[a.cross,2],vecget:[a.vecget,2],vecset:[a.vecget,3],vectrim:[a.vectrim,[1,2]],matget:[a.matget,3],matset:[a.matset,4],matgetrow:[a.matgetrow,2],matsetrow:[a.matsetrow,3],matgetcol:[a.matgetcol,2],matsetcol:[a.matsetcol,3],rationalize:[a.rationalize,1],IF:[a.IF,3],is_in:[a.is_in,2],realpart:[a.realpart,1],imagpart:[a.imagpart,1],conjugate:[a.conjugate,1],arg:[a.arg,1],polarform:[a.polarform,1],rectform:[a.rectform,1],sort:[a.sort,[1,2]],integer_part:[null,1],union:[a.union,2],contains:[a.contains,2],intersection:[a.intersection,2],difference:[a.difference,2],intersects:[a.intersects,2],is_subset:[a.is_subset,2],print:[a.print,-1]};getFunctionDescriptor(e){return this.functions[e]}findFunction(e){let t=n.Settings.FUNCTION_MODULES;const r=t.length;for(let n=0;n<r;n++){let r=t[n];if(e in r)return r[e]}(0,i.err)(`The function ${e} is undefined!`)}getFunctionDescriptors(){return this.functions}setFunctionDescriptor(e,t){this.functions[e]=t}removeFunctionDescriptor(e){delete this.functions[e]}importFunctions(){let e={},t=this.functions;for(let r in t)e[r]=t[r][0];return e}}},5037:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Frac:()=>p,getQuadrant:()=>f});var n=r(9569),i=r(3776),s=r.n(i),o=r(275),a=r.n(o),u=r(1518),l=r(1789),c=r(240);class p{constructor(e){if(e instanceof p)return e;if(void 0===e)return this;try{if((0,n.isInt)(e))try{this.num=a()(e),this.den=a()(1)}catch(t){return p.simple(e)}else{var t=e instanceof s()?h.quickConversion(e):h.convert(e);this.num=new(a())(t[0]),this.den=new(a())(t[1])}}catch(t){return p.simple(e)}}static create(e){if(e instanceof p)return e;var t="-"===(e=e.toString()).charAt(0);t&&(e=e.substr(1,e.length-1));var r=new p(e);return t&&r.negate(),r}static isFrac(e){return e instanceof p}static quick(e,t){var r=new p;return r.num=new(a())(e),r.den=new(a())(t),r}static simple(e){for(var t=String((0,n.scientificToDecimal)(e)).split("."),r=t.join(""),i=1,s=(t[1]||"").length,o=0;o<s;o++)i+="0";return p.quick(r,i).simplify()}multiply(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()}divide(e){if(e.equals(0))throw new l.DivisionByZero("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()}subtract(e){return this.clone().add(e.clone().neg())}neg(){return this.num=this.num.multiply(-1),this}add(e){var t=this.den,r=e.den,n=this.clone(),i=n.num,s=e.num;return t.equals(r)?n.num=i.add(s):(n.num=i.multiply(r).add(s.multiply(t)),n.den=t.multiply(r)),n.simplify()}mod(e){var t=this.clone(),r=e.clone();return t.num=t.num.multiply(r.den),t.den=t.den.multiply(r.den),r.num=r.num.multiply(this.den),r.den=r.den.multiply(this.den),t.num=t.num.mod(r.num),t.simplify()}simplify(){var e=a().gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this}clone(){var e=new p;return e.num=new(a())(this.num),e.den=new(a())(this.den),e}decimal(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||c.Settings.PRECISION,e++;for(var r=[],n=this.num.abs(),i=this.den,s=0;s<e;s++){var o=n.divide(i),a=n.subtract(o.multiply(i));if(r.push(o),a.equals(0))break;n=a.times(10)}var u=r.shift();if(0===r.length)return t+u.toString();if(s===e){var l=[];for(s=0;s<2;s++)l.unshift(r.pop());r.push(Math.round(l.join(".")))}return t+(u.toString()+".")+r.join("")}toDecimal(e){return(e=e||c.Settings.PRECISION)?this.decimal(e):this.num/this.den}qcompare(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]}equals(e){isNaN(e)||(e=new p(e));var t=this.qcompare(e);return t[0].equals(t[1])}absEquals(e){isNaN(e)||(e=new p(e));var t=this.qcompare(e);return t[0].abs().equals(t[1])}greaterThan(e){isNaN(e)||(e=new p(e));var t=this.qcompare(e);return t[0].gt(t[1])}gte(e){return this.greaterThan(e)||this.equals(e)}lte(e){return this.lessThan(e)||this.equals(e)}lessThan(e){isNaN(e)||(e=new p(e));var t=this.qcompare(e);return t[0].lt(t[1])}isInteger(){return this.den.equals(1)}negate(){return this.num=this.num.multiply(-1),this}invert(){var e=this.den;if(!this.num.equals(0)){var t=this.num.isNegative();this.den=this.num.abs(),this.num=e,t&&(this.num=this.num.multiply(-1))}return this}isOne(){return this.num.equals(1)&&this.den.equals(1)}sign(){return this.num.isNegative()?-1:1}abs(){return this.num=this.num.abs(),this}gcd(e){return p.quick(a().gcd(e.num,this.num),a().lcm(e.den,this.den))}toString(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()}valueOf(){return c.Settings.USE_BIG?new(s())(this.num.toString()).div(new(s())(this.den.toString())):this.num/this.den}isNegative(){return this.toDecimal()<0}}var h={convert:function(e,t){var r;if(0===e)r=[0,1];else if(e<1e-6||e>1e20){var n=this.quickConversion(Number(e));if(n[1]<=1e20){var i=Math.abs(e),s=e/i;(r=this.fullConversion(i.toFixed((n[1]+"").length-1)))[0]=r[0]*s}else r=n}else r=this.fullConversion(e);return r},quickConversion:function(e){return function(e){u.default.isScientific(e)&&(e=(0,n.scientificToDecimal)(e));var t,r=function(e){"string"!=typeof e&&(e=e.toString());var t="",r=e.charAt(0);return"-"===r?(e=e.substr(1,e.length),t="-"):"+"===r&&(e=e.substr(1,e.length)),{sign:t,value:e}}(e),i=r.value.split(".");t=1===i.length?i[0]:i[0]+i[1];var s=i[1]?i[1].length:0,o=`1${"0".repeat(s)}`;return"0"!==t&&(t=t.replace(/^0+/,"")),[r.sign+t,o]}(e)},fullConversion:function(e){for(var t=!1,r=0,n=1,i=1,s=0,o=0,a=e;!t;){++o>1e4&&(t=!0);var u=Math.floor(a),l=r+u*i,c=n+u*s,p=a-u;p<1e-16&&(t=!0),a=1/p,r=i,n=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||o>30)&&(t=!0)}return[l,c]}};function f(e){var t=e%2;return t<0&&(t=2+t),t>=0&&t<=.5?1:t>.5&&t<=1?2:t>1&&t<=1.5?3:4}},4013:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Matrix:()=>l});var n=r(7810),i=r(6328),s=r(9569),o=r(1789),a=r(3116),u=r(3761);class l{custom=!0;constructor(...e){var t,r,n,i,a=e.length,u=[];if((0,s.isMatrix)(e))for(t=0;t<a;t++)u.push(e[t].slice(0));else for(t=0;t<a;t++)r=e[t],(0,s.isVector)(r)&&(r=r.elements),Array.isArray(r)||(r=[r]),i=r.length,n&&n!==i&&(0,o.err)("Unable to create Matrix. Row dimensions do not match!"),u.push(r),n=i;this.elements=u}static identity(e){for(var t=new l,r=0;r<e;r++){t.elements.push([]);for(var i=0;i<e;i++)t.set(r,i,r===i?new n.Symbol(1):new n.Symbol(0))}return t}static fromArray(e){return new l(...e)}static zeroMatrix(e,t){for(var r=new l,s=0;s<e;s++)r.elements.push(i.Vector.arrayPrefill(t,new n.Symbol(0)));return r}get(e,t){if(this.elements[e])return this.elements[e][t]}map(e,t){var r=new l;return this.each((function(n,i,s){r.set(i,s,e.call(r,n),t)})),r}set(e,t,r,i){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=i||(0,s.isSymbol)(r)?r:new n.Symbol(r)}cols(){return this.elements[0].length}rows(){return this.elements.length}row(e){return!e||e>this.cols()?[]:this.elements[e-1]}col(e){var t=this.rows(),r=[];if(e>this.cols()||!e)return r;for(var n=0;n<t;n++)r.push(this.elements[n][e-1]);return r}eachElement(e){var t,r,n=this.rows(),i=this.cols();for(t=0;t<n;t++)for(r=0;r<i;r++)e.call(this,this.elements[t][r],t,r)}determinant(){if(!this.isSquare())return null;var e,t=this.toRightTriangular(),r=t.elements[0][0],n=t.elements.length-1,i=n;do{e=i-n+1,r=(0,a.multiply)(r,t.elements[e][e])}while(--n);return r}isSquare(){return this.elements.length===this.elements[0].length}isSingular(){return this.isSquare()&&0===this.determinant()}augment(e){var t=this.rows();t!==e.rows()&&(0,o.err)("Cannot augment matrix. Rows don't match.");for(var r=0;r<t;r++)this.elements[r]=this.elements[r].concat(e.elements[r]);return this}clone(){for(var e=this.rows(),t=this.cols(),r=new l,n=0;n<e;n++){r.elements[n]=[];for(var i=0;i<t;i++){var o=this.elements[n][i];r.elements[n][i]=(0,s.isSymbol)(o)?o.clone():o}}return r}invert(){return this.isSquare()||(0,o.err)("Matrix is not square!"),(0,s.block)("SAFE",(function(){var e,t,r,n,i,s,o,u=this.elements.length,c=u,p=l.identity(u),h=this.augment(p).toRightTriangular(),f=h.elements[0].length,m=[];do{i=[],r=f,m[e=u-1]=[],s=h.elements[e][e];do{n=f-r,o=(0,a.divide)(h.elements[e][n],s.clone()),i.push(o),n>=c&&m[e].push(o)}while(--r);for(h.elements[e]=i,t=0;t<e;t++){i=[],r=f;do{n=f-r,i.push((0,a.subtract)(h.elements[t][n].clone(),(0,a.multiply)(h.elements[e][n].clone(),h.elements[t][e].clone())))}while(--r);h.elements[t]=i}}while(--u);return l.fromArray(m)}),void 0,this)}toRightTriangular(){return(0,s.block)("SAFE",(function(){var e,t,r,i,s,o=this.clone(),u=this.elements.length,l=u,c=this.elements[0].length;do{if(r=l-u,0===o.elements[r][r].valueOf())for(var p=r+1;p<l;p++)if((t=o.elements[p][r])&&0!==t.valueOf()){e=[],i=c;do{s=c-i,e.push((0,a.add)(o.elements[r][s].clone(),o.elements[p][s].clone()))}while(--i);o.elements[r]=e;break}if(0!==o.elements[r][r].valueOf())for(p=r+1;p<l;p++){var h=(0,a.divide)(o.elements[p][r].clone(),o.elements[r][r].clone());e=[],i=c;do{s=c-i,e.push(s<=r?new n.Symbol(0):(0,a.subtract)(o.elements[p][s].clone(),(0,a.multiply)(o.elements[r][s].clone(),h.clone())))}while(--i);o.elements[p]=e}}while(--u);return o}),void 0,this)}transpose(){var e,t,r,n=this.elements.length,i=this.elements[0].length,s=new l,o=i;do{e=i-o,s.elements[e]=[],t=n;do{r=n-t,s.elements[e][r]=this.elements[r][e].clone()}while(--t)}while(--o);return s}canMultiplyFromLeft(e){var t=(0,s.isMatrix)(e)?e.elements.length:e.length;return this.elements[0].length===t}sameSize(e){return this.rows()===e.rows()&&this.cols()===e.cols()}multiply(e){return(0,s.block)("SAFE",(function(){var t=e.elements||e;if(!this.canMultiplyFromLeft(t)){if(this.sameSize(e)){for(var r=new l,s=this.rows(),o=0;o<s;o++){var u=(0,a.multiply)(new i.Vector(this.elements[o]),new i.Vector(e.elements[o]));r.elements[o]=u.elements}return r}return null}var c,p,h,f,m,g=this.elements.length,d=g,v=t[0].length,y=this.elements[0].length,b=[];do{b[o=d-g]=[],c=v;do{p=v-c,h=new n.Symbol(0),f=y;do{m=y-f,h=(0,a.add)(h,(0,a.multiply)(this.elements[o][m],t[m][p]))}while(--f);b[o][p]=h}while(--c)}while(--g);return l.fromArray(b)}),void 0,this)}add(e,t){var r=new l;return this.sameSize(e)&&this.eachElement((function(n,i,s){var o=(0,a.add)(n.clone(),e.elements[i][s].clone());t&&(o=t.call(r,o,n,e.elements[i][s])),r.set(i,s,o)})),r}subtract(e,t){var r=new l;return this.sameSize(e)&&this.eachElement((function(n,i,s){var o=(0,a.subtract)(n.clone(),e.elements[i][s].clone());t&&(o=t.call(r,o,n,e.elements[i][s])),r.set(i,s,o)})),r}negate(){return this.each((function(e){return e.negate()})),this}toVector(){if(1===this.rows()||1===this.cols()){var e=new i.Vector;return e.elements=this.elements,e}return this}toString(e,t){var r=this.rows(),n=[];e=void 0===e?"\n":e;for(var i=0;i<r;i++)n.push("["+this.elements[i].map((function(e){var r=t?e.multiplier.toDecimal():e.toString();return void 0!==e?r:""})).join(",")+"]");return"matrix"+(0,s.inBrackets)(n.join(","))}text(){return"matrix("+this.elements.toString("")+")"}latex(e){var t=this.cols(),r=this.elements;return(0,s.format)("\\begin{vmatrix}{0}\\end{vmatrix}",(function(){var n=[];for(var i in r){for(var s=[],o=0;o<t;o++)s.push(u.LaTeX.latex.call(this.$LaTeX,r[i][o],e));n.push(s.join(" & "))}return n.join(" \\cr ")}))}each(e){return this.eachElement(e)}}},7898:(e,t,r)=>{"use strict";r.d(t,{l:()=>s,D:()=>o});var n=r(6328),i=r(9569);class s{elements;constructor(e){if(this.elements=[],(0,i.isVector)(e)||(e=n.Vector.fromArray(arguments)),e)for(var t=e.elements,r=0,s=t.length;r<s;r++)this.add(t[r])}static fromArray(e){function t(e){return s.apply(this,e)}return t.prototype=s.prototype,new t(e)}add(e){this.contains(e)||this.elements.push(e.clone())}contains(e){for(var t=0;t<this.elements.length;t++){var r=this.elements[t];if(e.equals(r))return!0}return!1}each(e){for(var t=this.elements,r=new s,n=0,i=t.length;n<i;n++){var o=t[n];e.call(this,o,r,n)}return r}clone(){var e=new s;return this.each((function(t){e.add(t.clone())})),e}union(e){var t=this.clone();return e.each((function(e){t.add(e)})),t}difference(e){var t=this.clone();return e.each((function(e){t.remove(e)})),t}remove(e){for(var t=0,r=this.elements.length;t<r;t++)if(this.elements[t].equals(e))return remove(this.elements,t),!0;return!1}intersection(e){var t=new s,r=this;return e.each((function(e){r.contains(e)&&t.add(e)})),t}intersects(e){return this.intersection(e).elements.length>0}is_subset(e){for(var t=e.elements,r=0,n=t.length;r<n;r++)if(!this.contains(t[r]))return!1;return!0}toString(){return"{"+this.elements.join(",")+"}"}}function o(e){return e instanceof s}},7810:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Symbol:()=>w,symfunction:()=>S,bigConvert:()=>E});var n=r(3776),i=r.n(n),s=r(240),o=r(9569),a=r(5963),u=r(5037),l=r(275),c=r.n(l),p=r(1789),h=r(1548),f=r(4583),m=r(3761),g=r(3116),d=r(6870),v=r(7460),y=r(6507),b=r(131);class w{unit;group;power;fname;constructor(e){let t="Infinity"===e;return e instanceof i()&&(e=e.toString()),/^(-?\+?\d+)\.?\d*e?-?\+?\d*/i.test(e)||e instanceof i()?(this.group=a.Groups.N,this.value=s.Settings.CONST_HASH,this.multiplier=new u.Frac(e)):(this.group=a.Groups.S,(0,o.validateName)(e),this.value=e,this.multiplier=new u.Frac(1),this.imaginary=e===s.Settings.IMAGINARY,this.isInfinity=t),this.power=new u.Frac(1),this}static imaginary(){let e=new w(s.Settings.IMAGINARY);return e.imaginary=!0,e}static infinity(e=1){let t=new w("Infinity");return-1===e&&t.negate(),t}static shell(e,t){let r=new w(t);return r.group=e,r.symbols={},r.length=0,r}static unwrapSQRT(e,t){let r=e.power;if(e.fname===s.Settings.SQRT&&(e.isLinear()||t)){let n=e.args[0].clone();n.power=n.power.multiply(new u.Frac(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new u.Frac(.5)))}return e}static hyp(e,t){return e=e||new w(0),t=t||new w(0),(0,g.sqrt)((0,g.add)((0,g.pow)(e.clone(),new w(2)),(0,g.pow)(t.clone(),new w(2))))}static toPolarFormArray(e){let t,r,n,i;return t=e.realpart(),r=e.imagpart(),n=w.hyp(t,r),i=t.equals(0)?(0,b.parse)("pi/2"):v.b.atan((0,g.divide)(r,t)),[n,i]}static unwrapPARENS(e){if(""===e.fname){let t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?w.unwrapPARENS(t):t}return e}static create(e,t){return t=void 0===t?1:t,(0,b.parse)("("+e+")^("+t+")")}getNth(e){let t=(0,b.evaluate)((0,g.pow)((0,b.parse)(this.multiplier),(0,b.parse)(e).invert())),r=(0,b.parse)((0,o.nround)(t));return(0,b.evaluate)((0,g.pow)(r,(0,b.parse)(e))).equals((0,b.parse)(this.multiplier))?r:t}isToNth(e){let t,r=this.getNth(e),n=(0,o.isInt)(r);return this.group===a.Groups.CB?(t=!0,this.each((function(r){r.isToNth(e)||(t=!1)}))):t=this.group===a.Groups.N||(0,o.isInt)((0,g.divide)((0,b.parse)(this.power),(0,b.parse)(e))),n&&t}isSquare(){return this.isToNth(2)}isCube(){return this.isToNth(3)}isSimple(){return this.power.equals(1)&&this.multiplier.equals(1)}powSimp(){if(this.group===a.Groups.CB){let e=[];this.each((function(t){let r=t.power;if((0,o.isSymbol)(r)||r.equals(1))return this.clone();e.push(r)}));let t=new u.Frac((0,o.arrayMin)(e)),r=this.multiplier.sign(),n=this.multiplier.clone().abs(),i=h.Math2.ifactor(n),a=new u.Frac(1),l=new u.Frac(1);for(let e in i){let r=new u.Frac(i[e]);r.lessThan(t)||(r=r.divide(t).subtract(new u.Frac(1)),l=l.multiply(new u.Frac(e))),a=a.multiply((0,b.parse)((0,o.inBrackets)(e)+"^"+(0,o.inBrackets)(r)).multiplier)}let c=new w(l);this.each((function(e){(e=e.clone()).power=e.power.divide(t),c=(0,g.multiply)(c,e)}));let p=S(s.Settings.PARENTHESIS,[c]);return p.power=t,p.multiplier=r<0?a.negate():a,p}return this.clone()}equals(e){return(0,o.isSymbol)(e)||(e=new w(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group}abs(){let e=this.clone();return e.multiplier.abs(),e}gt(e){return(0,o.isSymbol)(e)||(e=new w(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)}gte(e){return(0,o.isSymbol)(e)||(e=new w(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)}lt(e){return(0,o.isSymbol)(e)||(e=new w(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)}lte(e){return(0,o.isSymbol)(e)||(e=new w(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)}isPoly(e=!1){let t=this.group,r=this.power;if(!(0,o.isInt)(r)||r<0)return!1;if(t===a.Groups.N||t===a.Groups.S||this.isConstant(!0))return!0;let n=this.variables();if(t===a.Groups.CB&&1===n.length){let e=n[0];if(!e)return!0;for(let t in this.symbols){let r=this.symbols[t];if(r.group===a.Groups.FN&&!r.args[0].isConstant())return!1;if(!r.contains(e)&&!r.isConstant(!0))return!1}return!0}if(this.isComposite()||t===a.Groups.CB&&e){if(!e&&n.length>1)return!1;for(let t in this.symbols)if(!this.symbols[t].isPoly(e))return!1;return!0}return!1}stripVar(e,t){let r;return this.group!==a.Groups.PL&&this.group!==a.Groups.S||this.value!==e?this.group===a.Groups.CB&&this.isLinear()?(r=new w(1),this.each((function(t){t.contains(e,!0)||(r=(0,g.multiply)(r,t.clone()))})),r.multiplier=r.multiplier.multiply(this.multiplier)):this.group!==a.Groups.CP||this.isLinear()?this.group===a.Groups.CP&&this.isLinear()?(r=new w(0),this.each((function(t){if(!t.contains(e)){let e=t.clone();e.multiplier=e.multiplier.multiply(this.multiplier),r=(0,g.add)(r,e)}})),r.equals(0)&&(r=new w(this.multiplier))):r=this.group===a.Groups.EX&&this.power.contains(e,!0)||this.group===a.Groups.FN&&this.contains(e)?new w(this.multiplier):this.clone():r=new w(this.multiplier):r=new w(t?0:this.multiplier),r}toArray(e,t){t=t||{arr:[],add:function(e,t){let r=this.arr[t];this.arr[t]=r?(0,g.add)(r,e):e}};let r=this.group;if(r===a.Groups.S&&this.contains(e))t.add(new w(this.multiplier),this.power);else if(r===a.Groups.CB){let r=this.stripVar(e),n=(0,g.divide)(this.clone(),r.clone()),i=n.isConstant()?0:n.power;t.add(r,i)}else if(r===a.Groups.PL&&this.value===e)this.each((function(r,n){t.add(r.stripVar(e),n)}));else if(r===a.Groups.CP)this.each((function(r){r.toArray(e,t)}));else{if(this.contains(e))throw new p.NerdamerTypeError("Cannot convert to array! Exiting");t.add(this.clone(),0)}t=t.arr;for(let e=0;e<t.length;e++)t[e]||(t[e]=new w(0));return t}hasFunc(e){let t=this.group===a.Groups.FN||this.group===a.Groups.EX;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(let t in this.symbols)if(this.symbols[t].hasFunc(e))return!0;return!1}sub(e,t){e=(0,o.isSymbol)(e)?e.clone():(0,b.parse)(e),t=(0,o.isSymbol)(t)?t.clone():(0,b.parse)(t),e.group!==a.Groups.N&&e.group!==a.Groups.P||(0,p.err)("Cannot substitute a number. Must be a variable");let r,n=!1,i=e.multiplier.equals(1),s=this.multiplier.clone();if(this.value===e.value&&(this.group!==a.Groups.PL&&e.group!==a.Groups.PL||this.group===a.Groups.PL&&e.group===a.Groups.PL))(i||e.multiplier.equals(this.multiplier))&&(e.isLinear()?r=t:e.power.equals(this.power)&&(r=t,n=!0),e.multiplier.equals(this.multiplier)&&(s=new u.Frac(1)));else if(this.group===a.Groups.CB||this.previousGroup===a.Groups.CB)r=new w(1),this.each((function(n){let i=(0,b.parse)(n.sub(e,t));r=(0,g.multiply)(r,i)}));else if(this.isComposite()){let n=this.clone();if(e.isComposite()&&n.isComposite()&&n.isLinear()&&e.isLinear()){let i=function(e,t){for(let r in e.symbols){let n=e.symbols[r];if(n.isComposite()&&i(n,t)||n.equals(t))return!0}return!1};for(let t in e.symbols)if(!i(n,e.symbols[t]))return n.clone();r=(0,g.add)((0,g.subtract)(n.clone(),e),t)}else r=new w(0),n.each((function(n){r=(0,g.add)(r,n.sub(e,t))}))}else if(this.group===a.Groups.EX)r=(0,b.parse)(this.value).sub(e,t);else if(this.group===a.Groups.FN){let n=[];for(let r=0;r<this.args.length;r++){let i=this.args[r];(0,o.isSymbol)(i)||(i=(0,b.parse)(i)),n.push(i.sub(e,t))}r=S(this.fname,n)}if(r){if(!n){let n=this.group===a.Groups.EX?this.power.sub(e,t):(0,b.parse)(this.power);r=(0,g.pow)(r,n)}return r.multiplier=r.multiplier.multiply(s),r}return this.clone()}isMonomial(){if(this.group===a.Groups.S)return!0;if(this.group!==a.Groups.CB)return!1;for(let e in this.symbols)if(this.symbols[e].group!==a.Groups.S)return!1;return!0}isPi(){return this.group===a.Groups.S&&"pi"===this.value}sign(){return this.multiplier.sign()}isE(){return"e"===this.value}isSQRT(){return this.fname===s.Settings.SQRT}isConstant(e,t){if(t&&this.group===a.Groups.CB)for(let e in this.symbols)if(this.symbols[e].isConstant(!0))return!0;if("functions"===e&&this.isComposite()){let r=!0;return this.each((function(n){n.isConstant(e,t)||(r=!1)}),!0),r}if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===a.Groups.FN){for(let t=0;t<this.args.length;t++)if(!this.args[t].isConstant(e))return!1;return!0}return e?(0,y.isNumericSymbol)(this):this.value===s.Settings.CONST_HASH}isImaginary(){if(this.imaginary)return!0;if(this.symbols)for(let e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1}realpart(){if(this.isConstant())return this.clone();if(this.imaginary)return new w(0);if(this.isComposite()){let e=new w(0);return this.each((function(t){e=(0,g.add)(e,t.realpart())})),e}return this.isImaginary()?new w(0):this.clone()}imagpart(){if(this.group===a.Groups.S&&this.isImaginary())return new w(this.multiplier);if(this.isComposite()){let e=new w(0);return this.each((function(t){e=(0,g.add)(e,t.imagpart())})),e}return this.group===a.Groups.CB?this.stripVar(s.Settings.IMAGINARY):new w(0)}isInteger(){return this.isConstant()&&this.multiplier.isInteger()}isLinear(e){if(e){if(this.isConstant())return!0;if(this.group===a.Groups.S)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(let t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==a.Groups.CB||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)}containsFunction(e){if("string"==typeof e&&(e=[e]),this.group===a.Groups.FN&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(let t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1}multiplyPower(e){if(this.group===a.Groups.N&&this.multiplier.equals(1))return this;let t=this.power;if(this.group!==a.Groups.EX&&e.group===a.Groups.N){let r=e.multiplier;this.group!==a.Groups.N||r.isInteger()||this.convert(a.Groups.P),this.power=t.equals(1)?r.clone():t.multiply(r),this.group===a.Groups.P&&(0,o.isInt)(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(a.Groups.N))}else this.group!==a.Groups.EX&&(t=new w(t),this.convert(a.Groups.EX)),this.power=(0,g.multiply)(t,e);return this}setPower(e,t){if(this.group===a.Groups.N&&this.multiplier.equals(1))return this;if(this.group!==a.Groups.EX||(0,o.isSymbol)(e)){let r=!1;(0,o.isSymbol)(e)&&(e.group===a.Groups.N?e=e.multiplier:r=!0);let n=r?a.Groups.EX:a.Groups.P;this.power=e,this.group===a.Groups.N&&n&&this.convert(n,t)}else this.group=this.previousGroup,delete this.previousGroup,this.group===a.Groups.N?(this.multiplier=new u.Frac(this.value),this.value=s.Settings.CONST_HASH):this.power=e;return this}isInverse(){return this.group===a.Groups.EX?this.power.multiplier.lessThan(0):this.power<0}clone(e){let t,r=e||new w(0),n=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],i=n.length;if(this.symbols){r.symbols={};for(let e in this.symbols)r.symbols[e]=this.symbols[e].clone()}for(t=0;t<i;t++)void 0!==this[n[t]]&&(r[n[t]]=this[n[t]]);return r.power=this.power.clone(),r.multiplier=this.multiplier.clone(),this.isConversion&&(r.isConversion=this.isConversion),this.isUnit&&(r.isUnit=this.isUnit),r}toUnitMultiplier(e=!1){return this.multiplier.num=new(c())(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new(c())(1),this}toLinear(){return this.power.equals(1)||this.setPower(new u.Frac(1)),this}each(e,t){if(this.symbols)for(let r in this.symbols){let n=this.symbols[r];if(n.group===a.Groups.PL&&t)for(let t in n.symbols)e.call(r,n.symbols[t],t);else e.call(this,n,r)}else e.call(this,this,this.value)}valueOf(){return this.group===a.Groups.N?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:(0,f.text)(this,"decimals")}contains(e,t){e=String(e);let r=this.group;if(this.value===e)return!0;if(this.symbols)for(let r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(r===a.Groups.FN||this.previousGroup===a.Groups.FN)for(let r=0;r<this.args.length;r++)if(this.args[r].contains(e,t))return!0;if(r===a.Groups.EX){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e}negate(){return this.multiplier.negate(),this.group!==a.Groups.CP&&this.group!==a.Groups.PL||this.distributeMultiplier(),this}invert(e,t){return e||(this.multiplier=this.multiplier.invert()),(0,o.isSymbol)(this.power)?this.power.negate():this.group===a.Groups.CB&&t?this.each((function(e){return e.invert()})):this.power&&this.group!==a.Groups.N&&this.power.negate(),this}distributeMultiplier(e=!1){let t=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&t&&this.group!==a.Groups.CB&&!this.multiplier.equals(1)){for(let e in this.symbols){let t=this.symbols[e];t.multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier()}this.toUnitMultiplier()}return this}distributeExponent(){if(!this.power.equals(1)){let e=this.power;for(let t in this.symbols){let r=this.symbols[t];r.group===a.Groups.EX?r.power=(0,g.multiply)(r.power,new w(e)):this.symbols[t].power=this.symbols[t].power.multiply(e)}this.toLinear()}return this}convert(e,t){if(e>a.Groups.FN){let t=this.clone();this.symbols={},e===a.Groups.CB?t.toUnitMultiplier():this.toUnitMultiplier(),this.group===a.Groups.FN&&(t.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[t.keyForGroup(e)]=t,this.group=e,this.length=1}else if(e===a.Groups.EX)this.group===a.Groups.N&&this.multiplier.equals(1)||(this.group!==a.Groups.EX&&(this.previousGroup=this.group),this.group===a.Groups.N?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=(0,f.text)(this,"hash"),this.group=a.Groups.EX);else if(e===a.Groups.N){let e=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new w(this.group===a.Groups.P?e*Math.pow(this.value,this.power):e).clone(this)}else e===a.Groups.P&&this.group===a.Groups.N&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=a.Groups.P);return this}insert(e,t){if((0,o.isSymbol)(e)||(0,p.err)("Object "+e+" is not of type Symbol!"),this.symbols){let r=this.group;if(r>a.Groups.FN){let n=e.keyForGroup(r),i=n in this.symbols&&this.symbols[n];if("add"===t){let t=n;i?(this.symbols[t]=(0,g.add)(i,e),this.symbols[t].multiplier.equals(0)&&(delete this.symbols[t],this.length--,0===this.length&&(this.convert(a.Groups.N),this.multiplier=new u.Frac(0)))):(this.symbols[n]=e,this.length++)}else e.group===a.Groups.P&&(0,o.isInt)(e.power)&&e.convert(a.Groups.N),e.group!==a.Groups.EX?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),i&&((e=(0,g.multiply)((0,o.remove)(this.symbols,n),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new w(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[n]=e,this.length++);0===this.length&&this.convert(a.Groups.N),this.group!==a.Groups.CP&&this.group!==a.Groups.CB||this.updateHash()}}return this}attach(e){if(Array.isArray(e)){for(let t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")}combine(e){if(Array.isArray(e)){for(let t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")}updateHash(){if(this.group!==a.Groups.N)if(this.group===a.Groups.FN){let e="",t=this.args,r=this.fname===s.Settings.PARENTHESIS;for(let r=0;r<t.length;r++)e+=(0===r?"":",")+(0,f.text)(t[r]);let n=r?"":this.fname;this.value=n+(r?e:(0,o.inBrackets)(e))}else this.group!==a.Groups.S&&this.group!==a.Groups.PL&&(this.value=(0,f.text)(this,"hash"))}keyForGroup(e){let t,r=this.group;if(r===a.Groups.N)t=this.value;else if(r===a.Groups.S||r===a.Groups.P)t=e===a.Groups.PL?this.power.toDecimal():this.value;else if(r===a.Groups.FN)t=e===a.Groups.PL?this.power.toDecimal():(0,f.text)(this,"hash");else{if(r===a.Groups.PL)return t=e===a.Groups.CB?(0,f.text)(this,"hash"):e===a.Groups.CP?this.power.equals(1)?this.value:(0,o.inBrackets)((0,f.text)(this,"hash"))+s.Settings.POWER_OPERATOR+this.power.toDecimal():e===a.Groups.PL?this.power.toString():this.value,t;r===a.Groups.CP?(e===a.Groups.CP&&(t=(0,f.text)(this,"hash")),t=e===a.Groups.PL?this.power.toDecimal():this.value):r===a.Groups.CB?t=e===a.Groups.PL?this.power.toDecimal():(0,f.text)(this,"hash"):r===a.Groups.EX&&(t=e===a.Groups.PL?(0,f.text)(this.power):(0,f.text)(this,"hash"))}return t}collectSymbols(e,t,r,n=!1){let i=[];if(this.symbols)for(let r in this.symbols){let s=this.symbols[r];!n||s.group!==a.Groups.PL&&s.group!==a.Groups.CP?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols())}else i.push(this);return null===r&&(r=void 0),i.sort(r)}latex(e){return m.LaTeX.latex(this,e)}text(e){return(0,f.text)(this,e)}isOne(e){let t=e?"absEquals":"equals";return this.group===a.Groups.N?this.multiplier[t](1):this.power.equals(0)}isComposite(){let e=this.group,t=this.previousGroup;return e===a.Groups.CP||e===a.Groups.PL||t===a.Groups.PL||t===a.Groups.CP}isCombination(){let e=this.group,t=this.previousGroup;return e===a.Groups.CB||t===a.Groups.CB}lessThan(e){return this.multiplier.lessThan(e)}greaterThan(e){return(0,o.isSymbol)(e)||(e=new w(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)}getDenom(){let e,t;if(t=this.clone(),this.group===a.Groups.CB&&this.power.lessThan(0)&&(t=(0,d.expand)(t)),t.power.lessThan(0)){let r=(0,b.parse)(t.multiplier.den);e=t.toUnitMultiplier(),e.power.negate(),e=(0,g.multiply)(r,e)}else if(t.group===a.Groups.CB){e=(0,b.parse)(t.multiplier.den);for(let r in t.symbols)t.symbols[r].power<0&&(e=(0,g.multiply)(e,t.symbols[r].clone().invert()))}else e=(0,b.parse)(t.multiplier.den);return e}getNum(){let e,t;return t=this.clone(),t.group===a.Groups.CB&&t.power.lessThan(0)&&(t=(0,d.expand)(t)),t.power.greaterThan(0)&&t.group!==a.Groups.CB?e=(0,g.multiply)((0,b.parse)(t.multiplier.num),t.toUnitMultiplier()):t.group===a.Groups.CB?(e=(0,b.parse)(t.multiplier.num),t.each((function(t){(t.power>0||t.group===a.Groups.EX&&t.power.multiplier>0)&&(e=(0,g.multiply)(e,t.clone()))}))):e=(0,b.parse)(t.multiplier.num),e}toString(){return this.text()}variables(e=!1,t){t=t||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}};let r=this.group,n=this.previousGroup;if(r===a.Groups.EX&&(0,o.isSymbol)(this.power)&&this.power.variables(e,t),r===a.Groups.CP||r===a.Groups.CB||n===a.Groups.CP||n===a.Groups.CB)for(let r in this.symbols)(0,o.isSymbol)(this.symbols[r])&&this.symbols[r].variables(e,t);else if(r===a.Groups.S||n===a.Groups.S)"e"!==this.value&&"pi"!==this.value&&this.value!==s.Settings.IMAGINARY&&t.add(this.value);else if(r===a.Groups.PL||n===a.Groups.PL){let r=(0,o.firstObject)(this.symbols);(0,o.isSymbol)(r)&&r.variables(e,t)}else if(r===a.Groups.EX)isNaN(this.value)||t.add(this.value),(0,o.isSymbol)(this.power)&&this.power.variables(e,t);else if(r===a.Groups.FN&&!e)for(let r=0;r<this.args.length;r++)(0,o.isSymbol)(this.args[r])&&this.args[r].variables(e,t);return t.c.sort()}}function S(e,t){let r=new w(e);return r.group=a.Groups.FN,"object"==typeof t&&(t=[].slice.call(t)),r.args=t,r.fname=e===s.Settings.PARENTHESIS?"":e,r.updateHash(),r}function E(e){if(!isFinite(e)){let t=Math.sign(e),r=new w(String(Math.abs(e)));return r.multiplier=r.multiplier.multiply(new u.Frac(t)),r}if((0,o.isSymbol)(e))return e;if("number"==typeof e)try{e=u.Frac.simple(e)}catch(t){e=new u.Frac(e)}let t=new w(0);return t.multiplier=e,t}},6328:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Vector:()=>l});var n=r(9569),i=r(7810),s=r(3116),o=r(240),a=r(3761),u=r(4583);class l{elements;custom=!0;constructor(e){(0,n.isVector)(e)?this.elements=e.items.slice(0):Array.isArray(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}static fromArray(e){let t=new l;return t.elements=e,t}static fromSet(e){return l.fromArray(e.elements)}static arrayPrefill(e,t){let r=[];t=t||0;for(let n=0;n<e;n++)r[n]=t;return r}e(e){return e<1||e>this.elements.length?null:this.elements[e-1]}set(e,t){(0,n.isSymbol)(t)||(t=new i.Symbol(t)),this.elements[e]=t}dimensions(){return this.elements.length}modulus(){return(0,n.block)("SAFE",(()=>(0,s.pow)(this.dot(this.clone()),new i.Symbol(.5))),void 0,this)}eql(e){let t=this.elements.length,r=e.elements||e;if(t!==r.length)return!1;do{if(Math.abs((0,s.subtract)(this.elements[t-1],r[t-1]).valueOf())>o.Settings.PRECISION)return!1}while(--t);return!0}clone(){let e=new l,t=this.elements.length;for(let r=0;r<t;r++)e.elements.push(this.elements[r].clone());return this.getter&&(e.getter=this.getter.clone()),e}map(e){let t=[];return this.each((function(r,n){t.push(e(r,n))})),new l(t)}each(e){let t,r=this.elements.length,n=r;do{t=n-r,e(this.elements[t],t+1)}while(--r)}toUnitVector(){return(0,n.block)("SAFE",(()=>{let e=this.modulus();return 0===e.valueOf()?this.clone():this.map((t=>(0,s.divide)(t,e)))}),void 0,this)}angleFrom(e){return(0,n.block)("SAFE",(()=>{let t=e.elements||e;if(this.elements.length!==t.length)return null;let r=new i.Symbol(0),n=new i.Symbol(0),o=new i.Symbol(0);this.each(((e,i)=>{r=(0,s.add)(r,(0,s.multiply)(e,t[i-1])),n=(0,s.add)(n,(0,s.multiply)(e,e)),o=(0,s.add)(o,(0,s.multiply)(t[i-1],t[i-1]))})),n=(0,s.pow)(n,new i.Symbol(.5)),o=(0,s.pow)(o,new i.Symbol(.5));let a=(0,s.multiply)(n,o);if(0===a.valueOf())return null;let u=(0,s.divide)(r,a),l=u.valueOf();return l<-1&&(u=-1),l>1&&(u=1),new i.Symbol(Math.acos(u))}),void 0,this)}isParallelTo(e){let t=this.angleFrom(e).valueOf();return null===t?null:t<=o.Settings.PRECISION}isAntiparallelTo(e){let t=this.angleFrom(e).valueOf();return null===t?null:Math.abs(t-Math.PI)<=o.Settings.PRECISION}isPerpendicularTo(e){let t=this.dot(e);return null===t?null:Math.abs(t)<=o.Settings.PRECISION}add(e){return(0,n.block)("SAFE",(()=>{let t=e.elements||e;return this.elements.length!==t.length?null:this.map(((e,r)=>(0,s.add)(e,t[r-1])))}),void 0,this)}subtract(e){return(0,n.block)("SAFE",(()=>{let t=e.elements||e;return this.elements.length!==t.length?null:this.map(((e,r)=>(0,s.subtract)(e,t[r-1])))}),void 0,this)}multiply(e){return this.map((function(t){return t.clone()*e.clone()}))}x(e){return this.multiply(e)}dot(e){return(0,n.block)("SAFE",(()=>{let t=e.elements||e,r=new i.Symbol(0),n=this.elements.length;if(n!==t.length)return null;do{r=(0,s.add)(r,(0,s.multiply)(this.elements[n-1],t[n-1]))}while(--n);return r}),void 0,this)}cross(e){let t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;let r=this.elements;return(0,n.block)("SAFE",(function(){return new l([(0,s.subtract)((0,s.multiply)(r[1],t[2]),(0,s.multiply)(r[2],t[1])),(0,s.subtract)((0,s.multiply)(r[2],t[0]),(0,s.multiply)(r[0],t[2])),(0,s.subtract)((0,s.multiply)(r[0],t[1]),(0,s.multiply)(r[1],t[0]))])}),void 0,this)}max(){let e,t=0,r=this.elements.length,n=r;do{e=n-r,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e])}while(--r);return t}magnitude(){let e=new i.Symbol(0);return this.each((function(t){e=(0,s.add)(e,(0,s.pow)(t,new i.Symbol(2)))})),(0,s.sqrt)(e)}indexOf(e){let t,r=null,n=this.elements.length,i=n;do{t=i-n,null===r&&this.elements[t].valueOf()===e.valueOf()&&(r=t+1)}while(--n);return r}text(){return(0,u.text)(this)}toString(){return this.text()}latex(e){let t=[];for(let r=0;r<this.elements.length;r++)t.push(a.LaTeX.latex.call(a.LaTeX,this.elements[r],e));return"["+t.join(", ")+"]"}}}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var s=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.loaded=!0,s.exports}return r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),r(6971)})()}));